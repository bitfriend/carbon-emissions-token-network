{"version":3,"sources":["controllers/app/reducer.js","controllers/app/types.js","controllers/store.js","helpers/contracts.js","controllers/app/actions.js","components/WalletButton.js","components/NavigationBar.js","components/TokenInfoModal.js","scenes/Dashboard.js","components/QueueExecuteProposalModal.js","components/DelegateDAOTokensModal.js","components/ProposalCallDetailsModal.js","scenes/GovernanceDashboard.js","components/SubmissionModal.js","components/CreateProposalModal.js","scenes/IssueForm.js","scenes/TransferForm.js","scenes/RetireForm.js","scenes/AccessControlForm.js","App.js","serviceWorker.js","index.js"],"names":["initialState","web3Provider","signedInAddress","roles","limitedMode","loading","appReducer","state","action","type","payload","setTimeout","window","location","reload","reducers","combineReducers","app","store","createStore","applyMiddleware","thunk","SUCCESS_MSG","EXTRACT_ERROR_MESSAGE","PROPOSAL_STATES","TOKEN_TYPES","catchError","error","formatted_error","console","message","startsWith","errors","JSON","stringify","match","length","e","convertToZeroIfBlank","num","parseInt","toUnixTime","date","Object","prototype","toString","call","getTime","toFixed","getBlockNumber","w3provider","a","decodeParameters","types","values","AbiCoder","decode","formatDate","timestamp","Date","toLocaleString","getTokenNetworkContract","Contract","addresses","tokenNetwork","address","CarbonEmissionsTokenNetwork","abi","getRoles","contract","getTokenDetails","tokenId","getNumOfUniqueTokens","getAvailableAndRetired","getLimitedMode","getAdmin","admin","issue","tokenTypeId","quantity","fromDate","thruDate","automaticRetireDate","metadata","manifest","description","signer","getSigner","connect","signed","retire","amount","transfer","registerConsumer","unregisterConsumer","registerDealer","unregisterDealer","getDAOTokenContract","dao","daoToken","DAOToken","daoTokenBalanceOf","account","balanceOf","fetchedBalance","convert","toNumber","delegate","delegatee","delegates","getGovernorContract","governor","Governor","getProposalCount","proposalCount","getProposalDetails","proposalId","proposals","getProposalState","propose","targets","signatures","calldatas","err","log","getReceipt","voter","getActions","getDescription","castVote","support","votes","queue","execute","cancel","refund","getQuorum","quorumVotes","getProposalThreshold","proposalThreshold","web3Modal","Web3Modal","network","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","process","fortmatic","Fortmatic","key","torus","Torus","portis","Portis","id","authereum","Authereum","frame","ethProvider","loadWeb3Modal","dispatch","getState","updateLoading","then","provider","selectedAddress","Web3Provider","catch","unloadWeb3Modal","clearCachedProvider","flag","WalletButton","render","Button","variant","className","onClick","props","PureComponent","dispacth","NavigationBar","role","Navbar","bg","expand","Brand","Toggle","Collapse","Nav","Link","href","Item","style","padding","Row","truncateAddress","text","OverlayTrigger","trigger","placement","rootClose","delay","show","hide","overlay","Tooltip","cursor","prevProps","prevState","snapshot","this","isEqual","setState","addr","prefix","substring","suffix","Component","TokenInfoModal","token","onHide","rest","children","Modal","centered","size","Header","closeButton","ModalTitle","ModalBody","showIssueeBalance","Col","issueeAvailableBalance","issueeRetiredBalance","availableBalance","retiredBalance","tokenType","disabled","Number","Table","striped","bordered","hover","issuer","issuee","wordWrap","ModalFooter","Dashboard","modalVisible","selectedToken","myBalances","myIssuedTokens","fetchingTokens","handleOpenTokenInfoModal","pointerHover","target","fetchBalances","numOfUniqueTokens","i","tokenDetails","tokenTypes","balances","push","toLowerCase","issueeBalances","isDealer","Spinner","animation","map","onMouseOver","QueueExecuteProposalModal","result","isSubmitting","handleAction","submitQueue","submitExecute","submitCancel","queueCall","executeCall","cancelCall","Title","Body","Form","Group","Label","Control","value","Footer","ActionButton","ActionDescription","ActionTitle","DelegateDAOTokensModal","submitDelegate","delegateCall","handleDelegateeChange","event","title","balance","placeholder","onChange","Text","ProposalCallDetailsModal","decoded","fetchDecodedParameters","actionNumber","matches","exec","actions","split","decodedCall","proposer","fmt","groupSeparator","groupSize","GovernanceDashboard","onSkipBlocksAmountChange","skipBlocksAmount","onVotesAmountChange","votesAmount","queueExecuteModalShow","delegateModalShow","callDetailsModalShow","daoTokenBalance","daoTokenDelegates","fetchingDaoTokenBalance","proposalsLength","fetchingProposals","blockNumber","fetchingBlockNumber","isFetchingBlocks","proposalActionType","proposalActionId","selectedProposalIdDetails","hasRole","quorum","fetchingQuorum","fetchingProposalThreshold","percentOfSupply","isEmpty","some","fetchDaoTokenBalance","fetchProposals","fetchBlockNumber","fetchQuorum","fetchProposalThreshold","blocks","localProvider","JsonRpcProvider","cnt","send","days","seconds","delegatesCall","q","BigNumber","toFormat","t","threshold","numberOfProposals","p","i_toNumberFix","proposalDetails","proposalState","proposalDescription","proposalActions","decimals","decimalsRaw","forVotes","div","againstVotes","rawForVotes","rawAgainstVotes","proposalReceipt","refundProposal","currentVotes","mul","proposalIsEligibleToVote","details","startBlock","endBlock","receipt","hasVoted","hasVotesRefunded","hasStakeRefunded","rawVotes","rawRefund","isEligibleToVote","convertedVotes","vote","r","Alert","dismissible","onClose","networkNameLowercase","blockscoutPage","block","InputGroup","FormControl","Append","handleSkipBlocks","handleSkipTimestamp","proposal","Card","display","handleProposalAction","refundDclm8","SubmissionModal","body","CreateProposalModal","submit","args","calldata","proposeCall","onDescriptionChange","nextProps","as","rows","IssueForm","submissionModalShow","createModalShow","adminAddress","initializedAddressInput","initializedQuantityInput","onAddressChange","onTokenTypeIdChange","onQuantityChange","onFromDateChange","onThruDateChange","onAutomaticRetireDateChange","onMetadataChange","onManifestChange","handleSubmit","fetchAdmin","quantity_formatted","Math","round","issueCall","encodedCalldata","encode","inputError","boxShadow","borderColor","onBlur","String","TransferForm","modalShow","initializedTokenIdInput","initializedAmountInput","onTokenIdChange","onAmountChange","handleTransfer","fetchTransfer","queryParams","URLSearchParams","search","addressQueryParam","get","tokenIdQueryParam","quantityQueryParam","RetireForm","handleRetire","fetchRetire","retireCall","AccessControlForm","theirAddress","theirRoles","fetchingTheirRoles","onTheirAddressChange","onRoleChange","fetchTheirRoles","handleRegister","handleUnregister","fetchRegisterConsumer","fetchRegisterDealer","fetchUnregisterConsumer","fetchUnregisterDealer","RolesList","roleNames","App","unlisten","history","listen","isOwnerOrDealer","isOwner","fill","pathname","eventKey","to","Container","TabContainer","defaultActiveKey","TabContent","exact","path","component","compose","withRouter","Boolean","hostname","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"o1gRAEMA,EAAe,CACnBC,aAAc,KACdC,gBAAiB,GACjBC,MAAO,GACPC,aAAa,EACbC,SAAS,GAqCIC,EAlCI,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACnD,OAAQA,EAAOC,MACb,ICZ2B,kBDazB,MAA8DD,EAAOE,QAA7DT,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBAAiBC,EAAvC,EAAuCA,MAAOC,EAA9C,EAA8CA,YAC9C,OAAO,2BACFG,GADL,IAEEN,eACAC,kBACAC,QACAC,cACAC,SAAS,IAEb,ICrB6B,oBDyB3B,OAHAM,YAAW,WACTC,OAAOC,SAASC,WACf,KACI,2BACFP,GADL,IAEEN,aAAc,KACdC,gBAAiB,GACjBC,MAAO,GACPC,aAAa,EACbC,SAAS,IAEb,IChC0B,iBDiCxB,OAAO,2BACFE,GADL,IAEEF,QAASG,EAAOE,UAEpB,QACE,OAAOH,IEnCPQ,EAAWC,YAAgB,CAC/BC,IAAKX,IAKQY,EAFDC,YAAYJ,EAAUK,YAAgBC,M,sYCA9CC,GAAc,0GACdC,GAAwB,8BAExBC,GAAkB,CACtB,UACA,SACA,WACA,gBACA,WACA,YACA,SACA,UACA,YAGWC,GAAc,CACzB,+BACA,0BACA,qBAOF,SAASC,GAAWC,GAIlB,IAAIC,EAEJ,GALAC,QAAQF,MAAMA,EAAMG,SAKhBH,EAAMG,QAAQC,WAAW,oBAC3BH,EAAkB,qCACb,GAAID,EAAMG,QAAQC,WAAW,4BAClCH,EAAkB,iCAElB,IACE,IAAII,EAASC,KAAKC,UAAUP,GAAOQ,MAAMZ,IACzCK,EAAkBI,EAAOA,EAAOI,OAAS,GACzC,MAAOC,GACPT,EAAkBD,EAAMG,QAI5B,OAAOF,EAIT,SAASU,GAAqBC,GAC5B,OAAOC,SAASD,IAAQ,EAG1B,SAASE,GAAWC,GAElB,MAA6C,kBAAzCC,OAAOC,UAAUC,SAASC,KAAKJ,GAC1BA,EAEFF,UAAUE,EAAKK,UAAY,KAAMC,QAAQ,IAG3C,SAAeC,GAAtB,mC,8CAAO,WAA8BC,GAA9B,SAAAC,EAAA,+EACED,EAAWD,kBADb,4C,sBASA,SAASG,GAAiBC,EAAOC,GAEtC,OADY,IAAIC,KACLC,OAAOH,EAAOC,GAGpB,SAASG,GAAWC,GACzB,OAAkB,IAAdA,EACK,OAEA,IAAIC,KAAiB,IAAZD,GAAkBE,iBAQtC,SAASC,GAAwBX,GAC/B,OAAO,IAAIY,IAASC,GAAS,QAAqCC,aAAaC,QAASC,GAA4BC,IAAKjB,GAGpH,SAAekB,GAAtB,qC,8CAAO,WAAwBlB,EAAYe,GAApC,eAAAd,EAAA,6DACCkB,EAAWR,GAAwBX,GADpC,kBAGUmB,EAASD,SAASH,GAH5B,iGAKI,KAAEnC,SALN,0D,sBAkBA,SAAewC,GAAtB,qC,8CAAO,WAA+BpB,EAAYqB,GAA3C,eAAApB,EAAA,6DACCkB,EAAWR,GAAwBX,GADpC,kBAGUmB,EAASC,gBAAgBC,GAHnC,iGAKI,KAAEzC,SALN,0D,sBASA,SAAe0C,GAAtB,mC,8CAAO,WAAoCtB,GAApC,eAAAC,EAAA,6DACCkB,EAAWR,GAAwBX,GADpC,kBAGUmB,EAASG,uBAHnB,iGAKI,KAAE1C,SALN,0D,sBASA,SAAe2C,GAAtB,uC,8CAAO,WAAsCvB,EAAYe,EAASM,GAA3D,eAAApB,EAAA,6DACCkB,EAAWR,GAAwBX,GADpC,kBAGUmB,EAASI,uBAAuBR,EAASM,GAHnD,iGAKI,KAAEzC,SALN,0D,sBAkBA,SAAe4C,GAAtB,mC,8CAAO,WAA8BxB,GAA9B,eAAAC,EAAA,6DACCkB,EAAWR,GAAwBX,GADpC,kBAGUmB,EAASjE,cAHnB,iGAKI,KAAE0B,SALN,0D,sBASA,SAAe6C,GAAtB,mC,8CAAO,WAAwBzB,GAAxB,eAAAC,EAAA,6DACCkB,EAAWR,GAAwBX,GADpC,kBAGUmB,EAASO,QAHnB,iGAKI,KAAE9C,SALN,0D,sBASA,SAAe+C,GAAtB,qD,8CAAO,WACL3B,EACAe,EACAa,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAVK,mBAAAlC,EAAA,6DAYCmC,EAASpC,EAAWqC,YACpBlB,EAAWR,GAAwBX,GAbpC,SAcgBmB,EAASmB,QAAQF,GAdjC,cAcCG,EAdD,yBAgBGA,EAAOZ,MACXZ,EACAa,EACAC,EACAzC,GAAqBG,GAAWuC,IAChC1C,GAAqBG,GAAWwC,IAChC3C,GAAqBG,GAAWyC,IAChCC,EACAC,EACAC,GAzBC,gCA2BI/D,IA3BJ,2DA6BII,GAAW,EAAD,KA7Bd,2D,sBAiCA,SAAegE,GAAtB,uC,8CAAO,WAAsBxC,EAAYqB,EAASoB,GAA3C,mBAAAxC,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAWR,GAAwBX,GAFpC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKGA,EAAOC,OAAOnB,EAASoB,GAL1B,gCAMIrE,IANJ,2DAQII,GAAW,EAAD,KARd,2D,sBAYA,SAAekE,GAAtB,yC,8CAAO,WAAwB1C,EAAYe,EAASM,EAASoB,GAAtD,mBAAAxC,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAWR,GAAwBX,GAFpC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKGA,EAAOG,SAAS3B,EAASM,EAASoB,GALrC,gCAMIrE,IANJ,2DAQII,GAAW,EAAD,KARd,2D,sBAYA,SAAemE,GAAtB,qC,8CAAO,WAAgC3C,EAAYe,GAA5C,mBAAAd,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAWR,GAAwBX,GAFpC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKGA,EAAOI,iBAAiB5B,GAL3B,gCAMI3C,IANJ,2DAQII,GAAW,EAAD,KARd,2D,sBAYA,SAAeoE,GAAtB,qC,8CAAO,WAAkC5C,EAAYe,GAA9C,mBAAAd,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAWR,GAAwBX,GAFpC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKGA,EAAOK,mBAAmB7B,GAL7B,gCAMI3C,IANJ,2DAQII,GAAW,EAAD,KARd,2D,sBAYA,SAAeqE,GAAtB,uC,8CAAO,WAA8B7C,EAAYe,EAASa,GAAnD,mBAAA3B,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAWR,GAAwBX,GAFpC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKGA,EAAOM,eAAe9B,EAASa,GALlC,gCAMIxD,IANJ,2DAQII,GAAW,EAAD,KARd,2D,sBAYA,SAAesE,GAAtB,uC,8CAAO,WAAgC9C,EAAYe,EAASa,GAArD,mBAAA3B,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAWR,GAAwBX,GAFpC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKGA,EAAOO,iBAAiB/B,EAASa,GALpC,gCAMIxD,IANJ,2DAQII,GAAW,EAAD,KARd,2D,sBAgBP,SAASuE,GAAoB/C,GAC3B,OAAO,IAAIY,IAASC,GAAS,QAAqCmC,IAAIC,SAASlC,QAASmC,GAASjC,IAAKjB,GAGjG,SAAemD,GAAtB,qC,8CAAO,WAAiCnD,EAAYoD,GAA7C,iBAAAnD,EAAA,6DACCkB,EAAW4B,GAAoB/C,GADhC,kBAG0BmB,EAASkC,UAAUD,GAH7C,cAGGE,EAHH,yBAIIC,KAAQD,EAAgB,MAAO,SAASE,YAJ5C,yDAMI,KAAE5E,SANN,0D,sBAUA,SAAe6E,GAAtB,qC,8CAAO,WAAwBzD,EAAY0D,GAApC,mBAAAzD,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAW4B,GAAoB/C,GAFhC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKwBA,EAAOkB,SAASC,GALxC,uCAMItF,IANJ,2DAQII,GAAW,EAAD,KARd,2D,sBAYA,SAAemF,GAAtB,qC,8CAAO,WAAyB3D,EAAYe,GAArC,eAAAd,EAAA,6DACCkB,EAAW4B,GAAoB/C,GADhC,kBAGUmB,EAASwC,UAAU5C,GAH7B,iGAKI,KAAEnC,SALN,0D,sBAaP,SAASgF,GAAoB5D,GAC3B,OAAO,IAAIY,IAASC,GAAS,QAAqCmC,IAAIa,SAAS9C,QAAS+C,GAAS7C,IAAKjB,GAGjG,SAAe+D,GAAtB,mC,8CAAO,WAAgC/D,GAAhC,eAAAC,EAAA,6DACCkB,EAAWyC,GAAoB5D,GADhC,kBAGUmB,EAAS6C,gBAHnB,iGAKI,KAAEpF,SALN,0D,sBASA,SAAeqF,GAAtB,qC,8CAAO,WAAkCjE,EAAYkE,GAA9C,eAAAjE,EAAA,6DACCkB,EAAWyC,GAAoB5D,GADhC,kBAGUmB,EAASgD,UAAUD,GAH7B,iGAKI,KAAEtF,SALN,0D,sBASA,SAAewF,GAAtB,qC,8CAAO,WAAgCpE,EAAYkE,GAA5C,iBAAAjE,EAAA,6DACCkB,EAAWyC,GAAoB5D,GADhC,kBAGiBmB,EAAS9D,MAAM6G,GAHhC,cAGG7G,EAHH,yBAIIiB,GAAgBjB,IAJpB,yDAMI,KAAEuB,SANN,0D,sBAUA,SAAeyF,GAAtB,6C,8CAAO,WAAuBrE,EAAYsE,EAASlE,EAAQmE,EAAYC,EAAWrC,GAA3E,qBAAAlC,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAWyC,GAAoB5D,GAFhC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKwBA,EAAO8B,QAAQC,EAASlE,EAAQmE,EAAYC,EAAWrC,GAL/E,uCAMI/D,IANJ,yCAQGqG,EAAMjG,GAAW,EAAD,IACtBG,QAAQ+F,IAAID,GATT,kBAUIA,EAAM,2BAVV,2D,sBAcA,SAAeE,GAAtB,uC,8CAAO,WAA0B3E,EAAYkE,EAAYU,GAAlD,eAAA3E,EAAA,6DACCkB,EAAWyC,GAAoB5D,GADhC,kBAGUmB,EAASwD,WAAWT,EAAYU,GAH1C,iGAKIpG,GAAW,EAAD,KALd,0D,sBASA,SAAeqG,GAAtB,qC,8CAAO,WAA0B7E,EAAYkE,GAAtC,eAAAjE,EAAA,6DACCkB,EAAWyC,GAAoB5D,GADhC,kBAGUmB,EAAS0D,WAAWX,GAH9B,iGAKI1F,GAAW,EAAD,KALd,0D,sBASA,SAAesG,GAAtB,qC,8CAAO,WAA8B9E,EAAYkE,GAA1C,eAAAjE,EAAA,6DACCkB,EAAWyC,GAAoB5D,GADhC,kBAGUmB,EAAS2D,eAAeZ,GAHlC,iGAKI1F,GAAW,EAAD,KALd,0D,sBASA,SAAeuG,GAAtB,yC,8CAAO,WAAwB/E,EAAYkE,EAAYc,EAASC,GAAzD,mBAAAhF,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAWyC,GAAoB5D,GAFhC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKwBA,EAAOwC,SAASb,EAAYc,EAASC,GAL7D,uCAMI7G,IANJ,2DAQII,GAAW,EAAD,KARd,2D,sBAYA,SAAe0G,GAAtB,qC,8CAAO,WAAqBlF,EAAYkE,GAAjC,mBAAAjE,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAWyC,GAAoB5D,GAFhC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKqBA,EAAO2C,MAAMhB,GALlC,uCAMI9F,IANJ,2DAQII,GAAW,EAAD,KARd,2D,sBAYA,SAAe2G,GAAtB,qC,8CAAO,WAAuBnF,EAAYkE,GAAnC,mBAAAjE,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAWyC,GAAoB5D,GAFhC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKuBA,EAAO4C,QAAQjB,GALtC,uCAMI9F,IANJ,2DAQII,GAAW,EAAD,KARd,2D,sBAYA,SAAe4G,GAAtB,qC,8CAAO,WAAsBpF,EAAYkE,GAAlC,mBAAAjE,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAWyC,GAAoB5D,GAFhC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKsBA,EAAO6C,OAAOlB,GALpC,uCAMI9F,IANJ,2DAQII,GAAW,EAAD,KARd,2D,sBAYA,SAAe6G,GAAtB,qC,8CAAO,WAAsBrF,EAAYkE,GAAlC,mBAAAjE,EAAA,6DACCmC,EAASpC,EAAWqC,YACpBlB,EAAWyC,GAAoB5D,GAFhC,SAGgBmB,EAASmB,QAAQF,GAHjC,cAGCG,EAHD,yBAKsBA,EAAO8C,OAAOnB,GALpC,uCAMI9F,IANJ,2DAQII,GAAW,EAAD,KARd,2D,sBAYA,SAAe8G,GAAtB,mC,8CAAO,WAAyBtF,GAAzB,eAAAC,EAAA,6DACCkB,EAAWyC,GAAoB5D,GADhC,kBAGUmB,EAASoE,cAHnB,iGAKI/G,GAAW,EAAD,KALd,0D,sBASA,SAAegH,GAAtB,mC,8CAAO,WAAoCxF,GAApC,eAAAC,EAAA,6DACCkB,EAAWyC,GAAoB5D,GADhC,kBAGUmB,EAASsE,oBAHnB,iGAKIjH,GAAW,EAAD,KALd,0D,sBCjcP,IAAMkH,GAAY,IAAIC,IAAU,CAC9BC,QAAS,UACTC,eAAe,EACfC,gBAAiB,CACfC,cAAe,CACbC,QAASC,IACTC,QAAS,CACPC,SAAUC,qCAGdC,UAAW,CACTL,QAASM,IACTJ,QAAS,CACPK,IAAKH,6BAGTI,MAAO,CACLR,QAASS,KAYXC,OAAQ,CACNV,QAASW,IACTT,QAAS,CACPU,GAAIR,yCAGRS,UAAW,CACTb,QAASc,KAEXC,MAAO,CACLf,QAASgB,QAKFC,GAAgB,WAC3B,OAAO,SAACC,EAAUC,GAChBD,EAASE,IAAc,IACvB1B,GAAUpD,UAAU+E,KAApB,uCAAyB,WAAOC,GAAP,qBAAArH,EAAA,6DACjBjD,EAAkBsK,EAASC,gBAC3BxK,EAAe,IAAIyK,IAAaF,GAFf,kBAIDpG,GAASnE,EAAcC,GAJtB,cAIfC,EAJe,gBAKKuE,GAAezE,GALpB,OAKfG,EALe,OAMrBgK,EAAS,CACP3J,KHlEqB,kBGmErBC,QAAS,CACPT,eACAC,kBACAC,QACAC,iBAZiB,uHAAzB,uDAkBGuK,OAAM,SAAAtI,GACP+H,EAASE,IAAc,SAKhBM,GAAkB,WAC7B,OAAO,SAACR,EAAUC,GAChBzB,GAAUiC,sBACVT,EAAS,CAAE3J,KHrFkB,wBGyF3B6J,GAAgB,SAACQ,GAAD,MAAW,CAC/BrK,KHzF4B,iBG0F5BC,QAASoK,ICtFLC,G,4MACJC,OAAS,kBACP,kBAACC,EAAA,EAAD,CACEC,QAAQ,UACRC,UAAU,OACVC,QAAS,kBAAO,EAAKC,MAAMpL,aAA4C,EAAKoL,MAAMT,kBAAxC,EAAKS,MAAMlB,kBAEnD,EAAKkB,MAAMpL,aAAkC,oBAAnB,mB,YAPPqL,iBAqBZ9F,gBATS,SAAC,GAAD,MAAc,CACpCvF,aADsB,EAAGgB,IACPhB,iBAGO,SAACsL,GAAD,MAAe,CACxCpB,cAAe,kBAAMoB,EAASpB,OAC9BS,gBAAiB,kBAAMW,EAASX,UAGnBpF,CAA6CuF,IClBtDS,G,4MACJjL,MAAQ,CACNkL,KAAM,I,EA4BRT,OAAS,kBACP,kBAACU,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAAKT,UAAU,OACvC,kBAACO,EAAA,EAAOG,MAAR,uCACA,kBAACH,EAAA,EAAOI,OAAR,MACA,kBAACJ,EAAA,EAAOK,SAAR,KACE,kBAACC,EAAA,EAAD,CAAKb,UAAU,WACb,kBAACa,EAAA,EAAIC,KAAL,CAAUC,KAAK,uEACb,kBAAC,IAAD,QAGJ,kBAACF,EAAA,EAAD,OACK,EAAKX,MAAMnL,iBACZ,kBAAC,WAAD,KACE,kBAAC8L,EAAA,EAAIG,KAAL,CAAUC,MAAO,CAAEC,QAAS,aAC1B,kBAACC,EAAA,EAAD,CAAKnB,UAAU,iCACb,0BAAMA,UAA+B,iBAApB,EAAK5K,MAAMkL,KAA0B,cAAgB,gBAAiB,EAAKlL,MAAMkL,OAEpG,kBAACa,EAAA,EAAD,CAAKnB,UAAU,iCACb,0BAAMA,UAAU,kBAAkB7B,YAEnC,EAAK+B,MAAMjL,aACV,kBAACkM,EAAA,EAAD,CAAKnB,UAAU,iCACb,0BAAMA,UAAU,eAAhB,kBAIN,kBAACa,EAAA,EAAIG,KAAL,CAAUC,MAAO,CAAEC,QAAS,gBAC1B,0BAAMlB,UAAU,kBAAkB,EAAKoB,gBAAgB,EAAKlB,MAAMnL,kBAClE,kBAAC,kBAAD,CAAiBsM,KAAM,EAAKnB,MAAMnL,iBAChC,0BAAMiL,UAAU,kBACd,kBAACsB,EAAA,EAAD,CACEC,QAAQ,QACRC,UAAU,SACVC,WAAS,EACTC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QAAS,SAAC3B,GAAD,OACP,kBAAC4B,EAAA,EAAY5B,EAAb,0BAGF,0BAAMe,MAAO,CAAEc,OAAQ,YAAvB,OAA0C,kBAAC,IAAD,YAOtD,kBAAC,GAAD,U,wDAvER,SAAmBC,EAAWC,EAAWC,GAEP,IAA5BC,KAAKjC,MAAMlL,MAAMiC,QAAqC,KAApBkL,KAAK/M,MAAMkL,MAAgB8B,kBAAQD,KAAKjC,MAAMlL,MAAOgN,EAAUhN,UACvE,IAAxBmN,KAAKjC,MAAMlL,MAAM,GACnBmN,KAAKE,SAAS,CAAE/B,KAAM,uBACW,IAAxB6B,KAAKjC,MAAMlL,MAAM,GAC1BmN,KAAKE,SAAS,CAAE/B,KAAM,gBACW,IAAxB6B,KAAKjC,MAAMlL,MAAM,GAC1BmN,KAAKE,SAAS,CAAE/B,KAAM,mBACW,IAAxB6B,KAAKjC,MAAMlL,MAAM,GAC1BmN,KAAKE,SAAS,CAAE/B,KAAM,uBACW,IAAxB6B,KAAKjC,MAAMlL,MAAM,GAC1BmN,KAAKE,SAAS,CAAE/B,KAAM,aAEtB6B,KAAKE,SAAS,CAAE/B,KAAM,oB,6BAK5B,SAAgBgC,GACd,IAAMC,EAASD,EAAKE,UAAU,EAAG,GAC3BC,EAASH,EAAKE,UAAUF,EAAKrL,OAAS,GAC5C,MAAM,GAAN,OAAUsL,EAAV,cAAsBE,O,GA3BEC,aAyFbrI,gBANS,SAAC,GAAD,IAAGvE,EAAH,EAAGA,IAAH,MAAc,CACpCf,gBAAiBe,EAAIf,gBACrBC,MAAOc,EAAId,MACXC,YAAaa,EAAIb,eAGJoF,CAAyBgG,I,+EC5FlCsC,G,4MACJ9C,OAAS,WACP,MAA6C,EAAKK,MAA1C0C,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAAqBC,GAApC,EAAuBC,SAAvB,+CACA,OACE,kBAACC,GAAA,EAAD,iBAAWF,EAAX,CAAiBG,UAAQ,EAACC,KAAK,OAC7B,kBAACF,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACC,GAAA,EAAD,uBAEF,kBAACC,GAAA,EAAD,KACE,kBAACnC,EAAA,EAAD,CAAKnB,UAAU,kBAEZ4C,EAAMW,kBACL,kBAACC,GAAA,EAAD,CAAKxD,UAAU,6BACb,wBAAIA,UAAU,kBAAd,8BACA,4BAAK4C,EAAMa,wBACX,wBAAIzD,UAAU,kBAAd,4BACA,4BAAK4C,EAAMc,uBAGb,kBAACF,GAAA,EAAD,CAAKxD,UAAU,6BACb,wBAAIA,UAAU,kBAAd,qBACA,4BAAK4C,EAAMe,kBACX,wBAAI3D,UAAU,kBAAd,mBACA,4BAAK4C,EAAMgB,iBAKf,kBAACJ,GAAA,EAAD,CAAKxD,UAAU,SACb,kBAACmB,EAAA,EAAD,CAAKnB,UAAU,eACb,kBAACwD,GAAA,EAAD,KACE,wBAAIxD,UAAU,aAAd,OAA+B4C,EAAMxJ,WAGzC,kBAAC+H,EAAA,EAAD,CAAKnB,UAAU,eACb,kBAACwD,GAAA,EAAD,KACE,wBAAIxD,UAAU,aACZ,kBAAC,IAAD,SAIN,kBAACmB,EAAA,EAAD,CAAKnB,UAAU,oBACb,kBAACwD,GAAA,EAAD,KACE,2BAAOxD,UAAU,iCACd4C,EAAMiB,eAObjB,EAAMW,mBACN,kBAACC,GAAA,EAAD,CAAKxD,UAAU,SACb,6BACA,kBAACmB,EAAA,EAAD,CAAKnB,UAAU,kBACb,kBAACwD,GAAA,EAAD,KACE,kBAAC1D,EAAA,EAAD,CACEC,QAAQ,UACRgB,KAAI,4BAAuB6B,EAAMxJ,SACjC0K,SAAUC,OAAOnB,EAAMe,mBAAqB,GAH9C,cASJ,kBAACxC,EAAA,EAAD,CAAKnB,UAAU,kBACb,kBAACwD,GAAA,EAAD,KACE,kBAAC1D,EAAA,EAAD,CACEC,QAAQ,SACRgB,KAAI,0BAAqB6B,EAAMxJ,SAC/B0K,SAAUC,OAAOnB,EAAMe,mBAAqB,GAH9C,cAaV,kBAACK,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,wCACA,uCAGJ,+BACE,4BACE,sCACA,wBAAInE,UAAU,kBAAkB4C,EAAMwB,SAExC,4BACE,sCACA,wBAAIpE,UAAU,kBAAkB4C,EAAMyB,SAExC,4BACE,yCACA,4BAAKzB,EAAM/I,WAEb,4BACE,yCACA,4BAAK+I,EAAM9I,WAEb,4BACE,qDACA,4BAAK8I,EAAM7I,sBAEb,4BACE,wCACA,wBAAIiG,UAAU,iBAAiBiB,MAAO,CAAEqD,SAAU,aAC/C1B,EAAM5I,WAGX,4BACE,wCACA,4BAAK4I,EAAM3I,WAEb,4BACE,2CACA,4BAAK2I,EAAM1I,iBAKnB,kBAACqK,GAAA,EAAD,KACE,kBAACzE,EAAA,EAAD,CAAQG,QAAS4C,GAAjB,Y,YA9HmB1C,iBA8Id9F,gBAJS,SAAC,GAAD,MAAc,CACpCvF,aADsB,EAAGgB,IACPhB,gBAGLuF,CAAyBsI,ICxIlC6B,G,4MACJpP,MAAQ,CACNqP,cAAc,EACdC,cAAe,GACfC,WAAY,GACZC,eAAgB,GAChBC,gBAAgB,EAChBrO,MAAO,I,EAoGTsO,yBAA2B,SAAClC,GAAD,OAAW,EAAKP,SAAS,CAClDqC,cAAe9B,EACf6B,cAAc,K,EAGhBM,aAAe,SAAC7N,GACdA,EAAE8N,OAAO/D,MAAMc,OAAS,W,uDAvG1B,WACMI,KAAKjC,MAAMpL,cACbqN,KAAK8C,kB,gCAIT,SAAmBjD,EAAWC,EAAWC,IAClCF,EAAUlN,cAAgBqN,KAAKjC,MAAMpL,cACxCqN,KAAK8C,kB,kEAIT,sDAAAjN,EAAA,6DACQ2M,EAAa,GACbC,EAAiB,GAFzB,kBAMoCvL,GAAqB8I,KAAKjC,MAAMpL,cANpE,OAMUoQ,EANV,OASaC,EAAI,EATjB,YASoBA,GAAKD,EAAkB3J,YAT3C,kCAWiCpC,GAAgBgJ,KAAKjC,MAAMpL,aAAcqQ,GAX1E,eAWYC,EAXZ,OAcYvL,EAAWvB,GAAW8M,EAAavL,SAAS0B,YAC5CzB,EAAWxB,GAAW8M,EAAatL,SAASyB,YAC5CxB,EAAsBzB,GAAW8M,EAAarL,oBAAoBwB,YAGlE8J,EAAa,CACjB,+BACA,0BACA,qBAtBR,UA0B6B/L,GACrB6I,KAAKjC,MAAMpL,aACXqN,KAAKjC,MAAMnL,gBACXoQ,GA7BR,WA0BYG,EA1BZ,OA+BU3B,EAAmB2B,EAAS,GAAG/J,WAC/BqI,EAAiB0B,EAAS,GAAG/J,WAGA,IAA7B6J,EAAazL,cACfgK,GAAoBA,EAAmB,KAAM9L,QAAQ,GACrD+L,GAAkBA,EAAiB,KAAM/L,QAAQ,MAG7C+K,EAAQ,CACZxJ,QAASgM,EAAahM,QAAQmC,WAC9BsI,UAAWwB,EAAWD,EAAazL,YAAc,GACjDgK,mBACAC,iBACAQ,OAAQgB,EAAahB,OACrBC,OAAQe,EAAaf,OACrBxK,WACAC,WACAC,sBACAC,SAAUoL,EAAapL,SACvBC,SAAUmL,EAAanL,SACvBC,YAAakL,EAAalL,cAIlByJ,iBAAmB,GAAKf,EAAMgB,eAAiB,KACvDe,EAAWY,KAAX,eAAqB3C,IACrBlM,QAAQ+F,IAAI,wBAAyBkI,IAEnC/B,EAAMwB,OAAOoB,gBAAkBrD,KAAKjC,MAAMnL,gBAAgByQ,cA5DpE,wBA6DQZ,EAAeW,KAAK3C,GA7D5B,UA8DqCtJ,GAC3B6I,KAAKjC,MAAMpL,aACXsQ,EAAaf,OACbc,GAjEV,QA8DcM,EA9Dd,OAmEQ7C,EAAMa,uBAAyBgC,EAAe,GAAGlK,WACjDqH,EAAMc,qBAAuB+B,EAAe,GAAGlK,WAC/CqH,EAAMW,mBAAoB,EArElC,QASuD4B,IATvD,yEAyEIzO,QAAQ+F,IAAR,MACA0F,KAAKE,SAAS,CAAE7L,MAAO,gGA1E3B,QA6EE2L,KAAKE,SAAS,CACZsC,aACAC,iBACAC,gBAAgB,EAChBrO,MAAO,KAjFX,0D,0EA8FA,WAAU,IAAD,OACDkP,EAAYvD,KAAKjC,MAAMlL,MAAMiC,OAAS,IAAMkL,KAAKjC,MAAMlL,MAAM,IAAMmN,KAAKjC,MAAMlL,MAAM,IAAMmN,KAAKjC,MAAMlL,MAAM,IAAMmN,KAAKjC,MAAMlL,MAAM,IACxI,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CACE2M,KAAMQ,KAAK/M,MAAMqP,aACjB7B,MAAOT,KAAK/M,MAAMsP,cAClB7B,OAAQ,kBAAM,EAAKR,SAAS,CAC1BoC,cAAc,EACdC,cAAe,QAInB,yCACA,uBAAG1E,UAAU,QAAb,sDAEA,uBAAGA,UAAU,eAAemC,KAAK/M,MAAMoB,OAEvC,yBAAKwJ,UAAWmC,KAAK/M,MAAMyP,eAAiB,SAAW,IAEpD1C,KAAK/M,MAAMyP,gBACV,yBAAK7E,UAAU,oBACb,kBAAC2F,GAAA,EAAD,CAASC,UAAU,SAAStF,KAAK,UAC/B,0BAAMN,UAAU,WAAhB,kBAKHmC,KAAKjC,MAAMnL,iBACZ,yBAAKiL,UAAU,QACb,2CACA,kBAACgE,GAAA,EAAD,CAAOG,OAAK,EAACjB,KAAK,MAChB,+BACE,4BACE,kCACA,oCACA,uCACA,yCAGJ,+BACqC,IAAjCf,KAAK/M,MAAMuP,WAAW1N,SAAiBkL,KAAK/M,MAAMyP,gBAAmB1C,KAAK/M,MAAMuP,WAAWkB,KAAI,SAAAjD,GAAK,OACpG,wBACEtE,IAAKsE,EAAMxJ,QACX6G,QAAS,kBAAM,EAAK6E,yBAAyBlC,IAC7CkD,YAAa,EAAKf,aAClB/E,UAAW+D,OAAOnB,EAAMe,mBAAqB,EAAI,kBAAoB,IAErE,4BAAKf,EAAMxJ,SACX,4BAAKwJ,EAAMiB,WACX,4BAAKjB,EAAMe,kBACX,4BAAKf,EAAMgB,uBAStB8B,GACC,yBAAK1F,UAAU,QACb,oDACA,kBAACgE,GAAA,EAAD,CAAOG,OAAK,EAACjB,KAAK,MAChB,+BACE,4BACE,kCACA,oCACA,6CAGJ,+BACyC,IAArCf,KAAK/M,MAAMwP,eAAe3N,SAAiBkL,KAAK/M,MAAMyP,gBAAmB1C,KAAK/M,MAAMwP,eAAeiB,KAAI,SAAAjD,GAAK,OAC5G,wBACEtE,IAAKsE,EAAMxJ,QACX6G,QAAS,kBAAM,EAAK6E,yBAAyBlC,IAC7CkD,YAAa,EAAKf,cAElB,4BAAKnC,EAAMxJ,SACX,4BAAKwJ,EAAMiB,WACX,4BAAKjB,EAAM1I,0B,GApMTiG,iBAyNT9F,gBAPS,SAAC,GAAD,IAAGvE,EAAH,EAAGA,IAAH,MAAc,CACpChB,aAAcgB,EAAIhB,aAClBC,gBAAiBe,EAAIf,gBACrBC,MAAOc,EAAId,MACXC,YAAaa,EAAIb,eAGJoF,CAAyBmK,I,gFC9NlCuB,G,4MACJ3Q,MAAQ,CACN4Q,OAAQ,GACRC,cAAc,G,EAGhBC,aAAe,WACb,OAAQ,EAAKhG,MAAM5K,MACjB,IAAK,QAEH,YADA,EAAK6Q,cAEP,IAAK,UAEH,YADA,EAAKC,gBAEP,IAAK,SAEH,YADA,EAAKC,eAEP,QAEE,YADA3P,QAAQ+F,IAAI,yB,wFAKlB,4BAAAzE,EAAA,6DACEmK,KAAKE,SAAS,CAAE4D,cAAc,IADhC,kBAG4BhJ,GACtBkF,KAAKjC,MAAMpL,aACXqN,KAAKjC,MAAMvB,IALjB,OAGU2H,EAHV,OAOInE,KAAKE,SAAS,CACZ2D,OAAQM,EAAU5O,WAClBuO,cAAc,IATpB,gDAYI9D,KAAKE,SAAS,CACZ2D,OAAQ,KAAErP,QACVsP,cAAc,IAdpB,yD,wHAmBA,4BAAAjO,EAAA,6DACEmK,KAAKE,SAAS,CAAE4D,cAAc,IADhC,kBAG8B/I,GACxBiF,KAAKjC,MAAMpL,aACXqN,KAAKjC,MAAMvB,IALjB,OAGU4H,EAHV,OAOIpE,KAAKE,SAAS,CACZ2D,OAAQO,EAAY7O,WACpBuO,cAAc,IATpB,gDAYI9D,KAAKE,SAAS,CACZ2D,OAAQ,KAAErP,QACVsP,cAAc,IAdpB,yD,uHAmBA,4BAAAjO,EAAA,6DACEmK,KAAKE,SAAS,CAAE4D,cAAc,IADhC,kBAG6B9I,GACvBgF,KAAKjC,MAAMpL,aACXqN,KAAKjC,MAAMvB,IALjB,OAGU6H,EAHV,OAOIrE,KAAKE,SAAS,CACZ2D,OAAQQ,EAAW9O,WACnBuO,cAAc,IATpB,gDAYI9D,KAAKE,SAAS,CACZ2D,OAAQ,KAAErP,QACVsP,cAAc,IAdpB,yD,0EAmBA,WACE,MAAgD9D,KAAKjC,MAA7CvB,EAAR,EAAQA,GAAIrJ,EAAZ,EAAYA,KAAMuN,EAAlB,EAAkBA,OAAqBC,GAAvC,EAA0BC,SAA1B,mDACA,OACE,kBAACC,GAAA,EAAD,iBAAWF,EAAX,CAAiBG,UAAQ,EAACC,KAAK,OAC7B,kBAACF,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,GAAA,EAAMyD,MAAP,KACE,kBAAC,GAAD,CAAanR,KAAMA,MAGvB,kBAAC0N,GAAA,EAAM0D,KAAP,KACE,kBAAC,GAAD,CAAmBpR,KAAMA,IACzB,kBAACqR,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,oBACA,kBAACF,GAAA,EAAKG,QAAN,CACExR,KAAK,OACLwO,UAAQ,EACRiD,MAAOpI,MAIZwD,KAAK/M,MAAM6Q,cACV,yBAAKjG,UAAU,oBACb,kBAAC2F,GAAA,EAAD,CAASC,UAAU,SAAStF,KAAK,UAC/B,0BAAMN,UAAU,WAAhB,kBAIHmC,KAAK/M,MAAM4Q,QACZ,uBAAGhG,UAAU,QAAQmC,KAAK/M,MAAM4Q,SAGpC,kBAAChD,GAAA,EAAMgE,OAAP,KACE,kBAAClH,EAAA,EAAD,CAAQG,QAAS4C,GAAjB,SACA,kBAAC,GAAD,CACEvN,KAAMA,EACN+J,SAAU8C,KAAKjC,MAAMpL,aACrBmL,QAASkC,KAAK+D,qB,GArHc/F,iBAuIzB9F,gBAJS,SAAC,GAAD,MAAc,CACpCvF,aADsB,EAAGgB,IACPhB,gBAGLuF,CAAyB0L,IAIlCkB,G,4JACJ,WACE,OAAQ9E,KAAKjC,MAAM5K,MACjB,IAAK,QACH,OAAO,kBAACwK,EAAA,EAAD,CAAQC,QAAQ,UAAUE,QAASkC,KAAKjC,MAAMD,SAA9C,SACT,IAAK,UACH,OAAO,kBAACH,EAAA,EAAD,CAAQC,QAAQ,UAAUE,QAASkC,KAAKjC,MAAMD,SAA9C,WACT,IAAK,SACH,OAAO,kBAACH,EAAA,EAAD,CAAQC,QAAQ,SAASE,QAASkC,KAAKjC,MAAMD,SAA7C,mBACT,QAEE,OADAvJ,QAAQ+F,IAAI,uBACL,kBAAC,WAAD,iC,GAXY0D,iBAuBrB+G,G,4JACJ,WACE,OAAQ/E,KAAKjC,MAAM5K,MACjB,IAAK,QACH,OAAO,qEAA0C,wCAA1C,iDACT,IAAK,UACH,OAAO,qEAA0C,qCAA1C,iDACT,IAAK,SACH,OAAO,yDACT,QACE,OAAO,kBAAC,WAAD,W,GAViB6K,iBAqB1BgH,G,4JACJ,WACE,OAAQhF,KAAKjC,MAAM5K,MACjB,IAAK,QACH,MAAO,iCACT,IAAK,UACH,MAAO,4BACT,IAAK,SACH,MAAO,4BACT,QACE,OAAO,kBAAC,WAAD,W,GAVW6K,iBCvLpBiH,G,4MACJhS,MAAQ,CACNqG,UAAW,GACXuK,OAAQ,GACRC,cAAc,G,EAGhBoB,e,sBAAiB,4BAAArP,EAAA,6DACf,EAAKqK,SAAS,CAAE4D,cAAc,IADf,kBAGczK,GACzB,EAAK0E,MAAMpL,aACX,EAAKM,MAAMqG,WALA,OAGP6L,EAHO,OAOb,EAAKjF,SAAS,CACZ2D,OAAQsB,EAAa5P,WACrBuO,cAAc,IATH,gDAYb,EAAK5D,SAAS,CACZ2D,OAAQ,KAAErP,QACVsP,cAAc,IAdH,yD,EAmBjBsB,sBAAwB,SAACC,GAAD,OAAW,EAAKnF,SAAS,CAC/C5G,UAAW+L,EAAMxC,OAAO+B,S,4CAG1B,WACE,MAAsD5E,KAAKjC,MAAnDuH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAAS7E,EAAxB,EAAwBA,OAAqBC,GAA7C,EAAgCC,SAAhC,yDACA,OACE,kBAACC,GAAA,EAAD,iBAAWF,EAAX,CAAiBG,UAAQ,EAACC,KAAK,OAC7B,kBAACF,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,GAAA,EAAMyD,MAAP,KAAcgB,IAEhB,kBAACzE,GAAA,EAAM0D,KAAP,KACE,+FAAoE,0BAAM1G,UAAU,gBAAgB0H,GAApG,2FACA,kBAACf,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,kBACA,kBAACF,GAAA,EAAKG,QAAN,CACExR,KAAK,OACLqS,YAAY,WACZC,SAAUzF,KAAKoF,wBAEjB,kBAACZ,GAAA,EAAKkB,KAAN,CAAW7H,UAAU,cAArB,+EAKHmC,KAAK/M,MAAM6Q,cACV,yBAAKjG,UAAU,oBACb,kBAAC2F,GAAA,EAAD,CAASC,UAAU,SAAStF,KAAK,UAC/B,0BAAMN,UAAU,WAAhB,kBAIHmC,KAAK/M,MAAM4Q,QACZ,uBAAGhG,UAAU,QAAQmC,KAAK/M,MAAM4Q,SAGpC,kBAAChD,GAAA,EAAMgE,OAAP,KACE,kBAAClH,EAAA,EAAD,CAAQG,QAAS4C,GAAjB,SACA,kBAAC/C,EAAA,EAAD,CACEG,QAASkC,KAAKkF,eACdtH,QAAQ,WAFV,kB,GAjE2BI,iBAuFtB9F,gBAJS,SAAC,GAAD,MAAc,CACpCvF,aADsB,EAAGgB,IACPhB,gBAGLuF,CAAyB+M,ICvFlCU,G,4MACJ1S,MAAQ,CACN2S,QAAS,I,uDAGX,WACE5F,KAAK6F,uBAAuB,K,2EAG9B,WAA6BC,GAA7B,qBAAAjQ,EAAA,6DAEQkQ,EADS,cACQC,KAAKhG,KAAKjC,MAAMkI,QAAQ9L,WAAW2L,IACpD/P,EAAQgQ,EAAQ,GAAGG,MAAM,KAHjC,SAI4BpQ,GAAiBC,EAAOiK,KAAKjC,MAAMkI,QAAQ7L,UAAU0L,IAJjF,OAIQK,EAJR,OAKQP,EAAU,CACdjP,QAASwP,EAAY,GACrBC,SAAUD,EAAY,GACtBzE,UAAWvN,GAAYgS,EAAY,GAAG,GACtC1O,SAAU0O,EAAY,GAAG/M,WACzB1B,SAAUvB,GAAWgQ,EAAY,GAAG/M,YACpCzB,SAAUxB,GAAWgQ,EAAY,GAAG/M,YACpCxB,oBAAqBzB,GAAWgQ,EAAY,GAAG/M,YAC/CvB,SAAUsO,EAAY,GACtBrO,SAAUqO,EAAY,GACtBpO,YAAaoO,EAAY,IAE3BnG,KAAKE,SAAS,CAAE0F,YAjBlB,gD,2EAoBA,WACE,MAAsD5F,KAAKjC,MAAnDuH,EAAR,EAAQA,MAAOW,EAAf,EAAeA,QAASvF,EAAxB,EAAwBA,OAAqBC,GAA7C,EAAgCC,SAAhC,yDACA,OACE,kBAACC,GAAA,EAAD,iBAAWF,EAAX,CAAiBG,UAAQ,EAACC,KAAK,OAC7B,kBAACF,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,GAAA,EAAMyD,MAAP,KAAcgB,IAEhB,kBAACzE,GAAA,EAAM0D,KAAP,KACE,oIACA,kBAACC,GAAA,EAAD,KAKE,kBAACA,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,2BACA,kBAACF,GAAA,EAAKkB,KAAN,KAAYO,EAAQ9L,aAEtB,kBAACqK,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,4BACA,kBAACF,GAAA,EAAKkB,KAAN,6BAAiC1F,KAAK/M,MAAM2S,QAAQjP,SACpD,kBAAC6N,GAAA,EAAKkB,KAAN,yBAA6B1F,KAAK/M,MAAM2S,QAAQQ,UAChD,kBAAC5B,GAAA,EAAKkB,KAAN,oBAAwB1F,KAAK/M,MAAM2S,QAAQlE,WAC3C,kBAAC8C,GAAA,EAAKkB,KAAN,4BAAgC1F,KAAK/M,MAAM2S,QAAQnO,UACnD,kBAAC+M,GAAA,EAAKkB,KAAN,mBAAuB1F,KAAK/M,MAAM2S,QAAQlO,UAC1C,kBAAC8M,GAAA,EAAKkB,KAAN,sBAA0B1F,KAAK/M,MAAM2S,QAAQjO,UAC7C,kBAAC6M,GAAA,EAAKkB,KAAN,+BAAmC1F,KAAK/M,MAAM2S,QAAQhO,qBACtD,kBAAC4M,GAAA,EAAKkB,KAAN,kBAAsB1F,KAAK/M,MAAM2S,QAAQ/N,UACzC,kBAAC2M,GAAA,EAAKkB,KAAN,kBAAsB1F,KAAK/M,MAAM2S,QAAQ9N,UACzC,kBAAC0M,GAAA,EAAKkB,KAAN,qBAAyB1F,KAAK/M,MAAM2S,QAAQ7N,gBAIlD,kBAAC8I,GAAA,EAAMgE,OAAP,KACE,kBAAClH,EAAA,EAAD,CAAQG,QAAS4C,GAAjB,e,GA/D6B1C,iBAmFxB9F,gBAJS,SAAC,GAAD,MAAc,CACpCvF,aADsB,EAAGgB,IACPhB,gBAGLuF,CAAyByN,ICnDlCU,GAAM,CACVC,eAAgB,IAChBC,UAAW,GAGPC,G,kDACJ,WAAYzI,GAAQ,IAAD,8BACjB,cAAMA,IA0FR0I,yBAA2B,SAACpB,GAAD,OAAW,EAAKnF,SAAS,CAClDwG,iBAAkBrB,EAAMxC,OAAO+B,SA5Fd,EA+FnB+B,oBAAsB,SAACtB,GAAD,OAAW,EAAKnF,SAAS,CAC7C0G,YAAavB,EAAMxC,OAAO+B,SA9F1B,EAAK3R,MAAQ,CACX4T,uBAAuB,EACvBC,mBAAmB,EACnBC,sBAAsB,EACtBC,iBAAkB,EAClBC,kBAAmB,KACnBC,yBAAyB,EACzBnN,UAAW,GACXoN,iBAAkB,EAClBC,mBAAmB,EACnBC,aAAc,EACdC,qBAAqB,EACrBC,kBAAkB,EAClB1D,OAAQ,GACR6C,iBAAkB,GAClBc,mBAAoB,GACpBC,iBAAkB,EAClBb,YAAa,EACbc,0BAA2B,EAC3BC,SAAS,EACTC,QAAS,EACTC,gBAAgB,EAChBxM,mBAAoB,EACpByM,2BAA2B,GAE7B,EAAKC,iBAAoB,EAAK9U,MAAM+T,gBAnCzB,IAmCqD,KAAKtR,QAAQ,GA3B5D,E,qDA8BnB,WACOsS,kBAAQhI,KAAKjC,MAAMlL,QACtBmN,KAAKE,SAAS,CACZyH,QAAS3H,KAAKjC,MAAMlL,MAAMoV,MAAK,SAAAlT,GAAC,OAAU,IAANA,OAGpCiL,KAAKjC,MAAMpL,cAAkBqN,KAAKjC,MAAMnL,kBAC1CoN,KAAKkI,uBACLlI,KAAKmI,kBAEHnI,KAAKjC,MAAMpL,eACbqN,KAAKoI,mBACLpI,KAAKqI,cACLrI,KAAKsI,4B,gCAIT,SAAmBzI,EAAWC,EAAWC,GACnCiI,kBAAQnI,EAAUhN,SAAWmV,kBAAQhI,KAAKjC,MAAMlL,OAC7CmN,KAAK/M,MAAM0U,SACd3H,KAAKE,SAAS,CACZyH,QAAS3H,KAAKjC,MAAMlL,MAAMoV,MAAK,SAAAlT,GAAC,OAAU,IAANA,QAG9BiT,kBAAQnI,EAAUhN,QAAUmV,kBAAQhI,KAAKjC,MAAMlL,QACzDmN,KAAKE,SAAS,CACZyH,SAAS,KAGP9H,EAAUlN,cAAgBqN,KAAKjC,MAAMpL,eAAmBkN,EAAUjN,iBAAqBoN,KAAKjC,MAAMnL,kBAClE,IAAhCoN,KAAK/M,MAAM+T,iBAA2BhH,KAAK/M,MAAMiU,yBACnDlH,KAAKkI,wBAE6B,IAAhClI,KAAK/M,MAAMkU,iBAA2BnH,KAAK/M,MAAMmU,mBACnDpH,KAAKmI,kBAEGtI,EAAUlN,eAAiBqN,KAAKjC,MAAMpL,cAAoBkN,EAAUjN,kBAAoBoN,KAAKjC,MAAMnL,iBAC7GoN,KAAKE,SAAS,CACZ8G,iBAAkB,EAClBG,iBAAkB,KAGjBtH,EAAUlN,cAAgBqN,KAAKjC,MAAMpL,eACR,IAA5BqN,KAAK/M,MAAMoU,aAAuBrH,KAAK/M,MAAMqU,qBAC/CtH,KAAKoI,oBAEoB,IAAvBpI,KAAK/M,MAAM2U,QAAkB5H,KAAK/M,MAAM4U,gBAC1C7H,KAAKqI,eAE+B,IAAlCrI,KAAK/M,MAAMoI,mBAA6B2E,KAAK/M,MAAM6U,2BACrD9H,KAAKsI,0BAEEzI,EAAUlN,eAAiBqN,KAAKjC,MAAMpL,cAC/CqN,KAAKE,SAAS,CACZmH,aAAc,EACdO,QAAS,EACTvM,mBAAoB,M,qEAa1B,WAAuBkN,GAAvB,qBAAA1S,EAAA,sDACQ2S,EAAgB,IAAIC,KAD5B,SAIIC,EAAMxT,SAASqT,EAAQ,IAJ3B,sDAMIhU,QAAQF,MAAM,sEANlB,0BASE2L,KAAKE,SAAS,CAAEqH,kBAAkB,IAC5BF,EAAgBrH,KAAK/M,MAArBoU,YACGrE,EAAI,EAXf,aAWkBA,EAAI0F,GAXtB,kCAYUF,EAAcG,KAAK,YAZ7B,QAaItB,IACArH,KAAKE,SAAS,CAAEmH,gBAdpB,QAW2BrE,IAX3B,wBAgBEhD,KAAKE,SAAS,CACZqH,kBAAkB,EAClB1D,OAAO,WAAD,OAAa0E,EAAb,gFAlBV,yD,+HAsBA,WAA0BK,GAA1B,iBAAA/S,EAAA,6DACQ2S,EAAgB,IAAIC,KACpBI,EAAkB,GAAPD,EAAY,GAAK,GAFpC,SAGQJ,EAAcG,KAAK,mBAAoB,CAACE,IAHhD,uBAIQL,EAAcG,KAAK,YAJ3B,OAKE3I,KAAKE,SAAS,CACZ2D,OAAO,SAAD,OAAW+E,EAAX,mDANV,gD,gIAUA,gCAAA/S,EAAA,6DACEmK,KAAKE,SAAS,CAAEgH,yBAAyB,IAD3C,SAEgCnO,GAAkBiH,KAAKjC,MAAMpL,aAAcqN,KAAKjC,MAAMnL,iBAFtF,cAEQoU,EAFR,gBAG8BzN,GAAUyG,KAAKjC,MAAMpL,aAAcqN,KAAKjC,MAAMnL,iBAH5E,OAGQkW,EAHR,OAIQ7B,EAAoB6B,EAAczF,gBAAkBrD,KAAKjC,MAAMnL,gBAAgByQ,cAAgByF,EAAgB,MACrH9I,KAAKE,SAAS,CACZ8G,kBACAC,oBACAC,yBAAyB,IAR7B,gD,2HAYA,4BAAArR,EAAA,6DACEmK,KAAKE,SAAS,CAAEoH,qBAAqB,IADvC,SAE4B3R,GAAeqK,KAAKjC,MAAMpL,cAFtD,OAEQ0U,EAFR,OAGErH,KAAKE,SAAS,CACZmH,cACAC,qBAAqB,IALzB,gD,sHASA,8BAAAzR,EAAA,6DACEmK,KAAKE,SAAS,CAAE2H,gBAAgB,IADlC,SAEkB3M,GAAU8E,KAAKjC,MAAMpL,cAFvC,OAEQoW,EAFR,OAGQnB,EAASzO,KAAQ4P,EAAExT,WAAY,MAAO,QAClC,IAAIyT,KAAUpB,GAAQqB,SAAS5C,IACzCrG,KAAKE,SAAS,CACZ0H,OAAQ,IAAIoB,KAAUpB,GAAQqB,SAAS5C,IACvCwB,gBAAgB,IAPpB,gD,iIAWA,8BAAAhS,EAAA,6DACEmK,KAAKE,SAAS,CAAE4H,2BAA2B,IAD7C,SAEkB1M,GAAqB4E,KAAKjC,MAAMpL,cAFlD,OAEQuW,EAFR,OAGQC,EAAYhQ,KAAQ+P,EAAE3T,WAAY,MAAO,SAC/CyK,KAAKE,SAAS,CACZ7E,kBAAmB,IAAI2N,KAAUG,GAAWF,SAAS5C,IACrDyB,2BAA2B,IAN/B,gD,yHAUA,gEAAAjS,EAAA,sEACkC8D,GAAiBqG,KAAKjC,MAAMpL,cAD9D,OACQyW,EADR,OAEQC,EAAI,GAEDrG,EAAIoG,EAJf,YAIkCpG,EAAI,GAJtC,iBAKQsG,OALR,EAMI,IACEA,EAAgBtG,EAAE5J,WAClB,MAAOrE,GACPuU,EAAgBtG,EATtB,iBAYkCnJ,GAAmBmG,KAAKjC,MAAMpL,aAAcqQ,GAZ9E,eAYUuG,EAZV,iBAagCvP,GAAiBgG,KAAKjC,MAAMpL,aAAcqQ,GAb1E,eAaUwG,EAbV,iBAcsC9O,GAAesF,KAAKjC,MAAMpL,aAAcqQ,GAd9E,eAcUyG,EAdV,iBAekChP,GAAWuF,KAAKjC,MAAMpL,aAAcqQ,GAftE,eAeU0G,EAfV,OAiBUC,EAAW,IAAIX,KAAU,cACzBY,EAAc,sBACdC,EAAWN,EAAgB,GAAGO,IAAIH,GAAUvQ,WAC5C2Q,EAAeR,EAAgB,GAAGO,IAAIH,GAAUvQ,WAChD4Q,EAAcT,EAAgB,GAAGO,IAAIF,GAAaxQ,WAClD6Q,EAAkBV,EAAgB,GAAGO,IAAIF,GAAaxQ,WAtBhE,UAyBkCmB,GAAWyF,KAAKjC,MAAMpL,aAAcqQ,EAAGhD,KAAKjC,MAAMnL,iBAzBpF,WAyBUsX,EAzBV,OA0BQC,EAAiB,IAAInB,KAAU,KAAK5P,WAElB,WAAlBoQ,GAAgD,kBAAlBA,IAChCW,EAAiBD,EAAgB,GAAGJ,IAAIF,GAAaxQ,YAGnD4G,KAAKjC,MAAMnL,gBAAgByQ,gBAAkBkG,EAAgB,GAAGlG,cAhCxE,kCAiCuCjI,GAAqB4E,KAAKjC,MAAMpL,cAjCvE,QAiCY0I,EAjCZ,OAiCsFyO,IAAIF,GAAaxQ,WAC3FgR,EAAeF,EAAgB,GAAGJ,IAAIF,GAAaxQ,WACnC,cAAlBoQ,EACFW,EAAiB,IAAInB,KAAUoB,EAAe/O,GAAmBgP,IAAI,GAAGP,IAAI,GAAG1Q,WACpD,aAAlBoQ,GAAkD,kBAAlBA,IACzCW,EAAiB,IAAInB,KAAUoB,EAAe/O,GAAmBgP,IAAI,GAAGP,IAAI,GAAG1Q,YAtCvF,QA0CUkR,EAA8C,WAAlBd,GAA8BxJ,KAAK/M,MAAM+T,gBAAkB,EAE7FqC,EAAEjG,KAAK,CACL5G,GAAI8M,EACJiB,QAAS,CACPnE,SAAUmD,EAAgB,GAC1BM,SAAUA,EACVE,aAAcA,EACdC,YAAaA,EACbC,gBAAiBA,EACjBO,WAAYjB,EAAgB,GAAGnQ,WAAa,EAC5CqR,SAAUlB,EAAgB,GAAGnQ,YAE/BnG,MAAOuW,EACPvD,QAASyD,EACTgB,QAAS,CACPC,SAAUT,EAAgB,GAC1BU,iBAAkBV,EAAgB,GAClCW,iBAAkBX,EAAgB,GAClCtP,QAASsP,EAAgB,GACzBrP,MAAOqP,EAAgB,GAAGJ,IAAIH,GAAUpU,WACxCuV,SAAUZ,EAAgB,GAAGJ,IAAIF,GACjCmB,UAAWZ,GAEbpS,YAAa0R,EACbuB,iBAAkBV,IAnExB,QAIyCtH,IAJzC,uBAuEEzO,QAAQ+F,IAAI+O,GAEZrJ,KAAKE,SAAS,CACZnG,UAAWsP,EACXlC,gBAAiBkC,EAAEvU,QAAU,EAC7BsS,mBAAmB,IA5EvB,iD,+GAgFA,WAAWtN,EAAYc,GAAvB,iBAAA/E,EAAA,6DACQoV,EAAiB9R,KAAQ6G,KAAK/M,MAAM2T,YAAa,QAAS,OADlE,SAEqBjM,GAASqF,KAAKjC,MAAMpL,aAAcmH,EAAYc,EAASqQ,GAF5E,OAEQC,EAFR,OAGElL,KAAKE,SAAS,CAAE2D,OAAQqH,IAH1B,gD,yHAMA,WAAkBpR,GAAlB,eAAAjE,EAAA,sEACkBoF,GAAO+E,KAAKjC,MAAMpL,aAAcmH,GADlD,OACQqR,EADR,OAEEnL,KAAKE,SAAS,CAAE2D,OAAQsH,IAF1B,gD,yFAKA,SAAqBjY,EAAQsJ,GAC3BwD,KAAKE,SAAS,CACZsH,mBAAoBtU,EACpBuU,iBAAkBjL,EAClBqK,uBAAuB,M,oBAI3B,WAAU,IAAD,OACP,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CACErH,KAAMQ,KAAK/M,MAAM4T,sBACjBnG,OAAQ,kBAAM,EAAKR,SAAS,CAAE2G,uBAAuB,KACrD3J,SAAU8C,KAAKjC,MAAMpL,aACrBQ,KAAM6M,KAAK/M,MAAMuU,mBACjBhL,GAAIwD,KAAK/M,MAAMwU,mBAEjB,kBAAC,GAAD,CACEjI,KAAMQ,KAAK/M,MAAM6T,kBACjBxB,MAAM,gCACNC,QAAS,IAAIyD,KAAUhJ,KAAK/M,MAAM+T,iBAAiBiC,SAAS5C,IAC5D3F,OAAQ,kBAAM,EAAKR,SAAS,CAAE4G,mBAAmB,KACjD5J,SAAU8C,KAAKjC,MAAMpL,eAEtBqN,KAAK/M,MAAM8G,UAAUjF,OAAS,GAC7B,kBAAC,GAAD,CACE0K,KAAMQ,KAAK/M,MAAM8T,qBACjBzB,MAAK,oBAAetF,KAAK/M,MAAMyU,0BAA1B,iBACLhH,OAAQ,kBAAM,EAAKR,SAAS,CAAE6G,sBAAsB,KACpDd,QAASjG,KAAK/M,MAAM8G,UAAUiG,KAAK/M,MAAMyU,0BAA4B,GAAGzB,UAG3EjG,KAAK/M,MAAMsU,kBACV,kBAAC6D,GAAA,EAAD,CACExN,QAAQ,YACRC,UAAU,eAFZ,gBAGemC,KAAK/M,MAAMoU,YAAc,EAHxC,SAKCrH,KAAK/M,MAAM4Q,QACZ,kBAACuH,GAAA,EAAD,CACExN,QAAQ,UACRyN,aAAW,EACXC,QAAS,kBAAM,EAAKpL,SAAS,CAAE2D,OAAQ,OACvC7D,KAAK/M,MAAM4Q,QAGf,0CACA,mQACqC,SAApC7D,KAAK/M,MAAMsY,sBACV,2BACE,uBAAG3M,KAAMoB,KAAK/M,MAAMuY,gBAApB,+BAIJ,yBAAK3N,UAAU,mDACb,yBAAKA,UAAU,QACb,kBAACF,EAAA,EAAD,CACE8N,OAAK,EACL1K,KAAK,KACLjD,QAAS,kBAAM,EAAKoC,SAAS,CAAE4G,mBAAmB,KAClDnF,SAAU3B,KAAK/M,MAAM+T,iBAAmB,EACxCnJ,UAAU,mBACVD,QAAQ,WANV,uBAUA,2BAAOC,UAAU,cAAjB,sBAAkDmC,KAAK/M,MAAMgU,oBAE1B,YAApCjH,KAAK/M,MAAMsY,sBACV,yBAAK1N,UAAU,WACb,kBAAC6N,GAAA,EAAD,CAAY3K,KAAK,KAAKlD,UAAU,QAC9B,kBAAC8N,GAAA,EAAD,CACEnG,YAAY,oBACZC,SAAUzF,KAAKyG,2BAEjB,kBAACiF,GAAA,EAAWE,OAAZ,KACE,kBAACjO,EAAA,EAAD,CACEC,QAAQ,UACRE,QAAS,kBAAM,EAAK+N,iBAAiB,EAAK5Y,MAAMyT,oBAFlD,UAQJ,kBAACgF,GAAA,EAAD,CAAY3K,KAAK,KAAKlD,UAAU,QAC9B,kBAAC8N,GAAA,EAAD,CACEnG,YAAY,mBACZC,SAAUzF,KAAKyG,2BAEjB,kBAACiF,GAAA,EAAWE,OAAZ,KACE,kBAACjO,EAAA,EAAD,CACEC,QAAQ,UACRE,QAAS,kBAAM,EAAK+N,iBAAiBjK,OAAO,EAAK3O,MAAMyT,kBAAoB9E,OAAO,EAAK3O,MAAMoU,gBAF/F,UAQJ,kBAAC1J,EAAA,EAAD,CACE8N,OAAK,EACL1K,KAAK,KACLnD,QAAQ,YACRE,QAAS,kBAAM,EAAKgO,oBAAoB,KAJ1C,mCAUN,6BAEA,kBAAC9M,EAAA,EAAD,KACE,kBAACqC,GAAA,EAAD,MACoC,IAAhCrB,KAAK/M,MAAM+T,iBACX,kBAAC,WAAD,KACE,mDACoB,IAAIgC,KAAUhJ,KAAK/M,MAAM+T,iBAAiBiC,SAAS5C,IACrC,IAA/BrG,KAAK/M,MAAM+T,iBACV,kBAAC,WAAD,WAAchH,KAAK/M,MAAM8U,gBAAzB,0BAMV,kBAAC1G,GAAA,EAAD,CAAKxD,UAAU,cACb,gCAC+B,IAA5BmC,KAAK/M,MAAMoU,aACV,kBAAC,WAAD,uBAA0BrH,KAAK/M,MAAMoU,aAEvC,8BACwB,IAAvBrH,KAAK/M,MAAM2U,QACV,kBAAC,WAAD,gBAAmB5H,KAAK/M,MAAM2U,OAA9B,YAA+C,IAAIoB,KAAJ,SAAchJ,KAAK/M,MAAM2U,OAAU,IAAGqB,SAAS5C,IAA9F,WAEF,8BACmC,IAAlCrG,KAAK/M,MAAMoI,mBACV,kBAAC,WAAD,4BAA+B2E,KAAK/M,MAAMoI,kBAA1C,aAMP2E,KAAK/M,MAAMmU,mBACV,yBAAKvJ,UAAU,oBACb,kBAAC2F,GAAA,EAAD,CAASC,UAAU,SAAStF,KAAK,UAC/B,0BAAMN,UAAU,WAAhB,gBAK2B,IAA/BmC,KAAK/M,MAAMkU,kBAA0BnH,KAAK/M,MAAMmU,mBAChD,kDAGF,yBAAKvJ,UAAU,+CACoB,IAAhCmC,KAAK/M,MAAM8G,UAAUjF,QAAgBkL,KAAK/M,MAAM8G,UAAU2J,KAAI,SAACqI,EAAU5P,GAAX,OAC7D,kBAAC6P,GAAA,EAAD,CAAM7P,IAAKA,EAAK0B,UAAU,mBACxB,kBAACmO,GAAA,EAAKzH,KAAN,KACE,kBAACvF,EAAA,EAAD,CAAKnB,UAAU,QACb,kBAACwD,GAAA,EAAD,KACE,wBAAIvC,MAAO,CAAEmN,QAAS,iBACpB,0BAAMpO,UAAU,QAAhB,aAAkCkO,EAASvP,IAC3C,kBAACmB,EAAA,EAAD,CACEoD,KAAK,KACLnD,QAAQ,YACRC,UAAU,mBACVC,QAAS,kBAAM,EAAKoC,SAAS,CAC3BwH,0BAA2BqE,EAASvP,GACpCuK,sBAAsB,MAN1B,aAcJ,kBAAC1F,GAAA,EAAD,CAAKxD,UAAU,cAEQ,aAAnBkO,EAAS9Y,OAA2C,aAAnB8Y,EAAS9Y,OAAwB,EAAKA,MAAM0U,SAC7E,kBAAChK,EAAA,EAAD,CACEoD,KAAK,KACLjD,QAAS,kBAAM,EAAKoO,qBAAqB,SAAUH,EAASvP,KAC5DmF,SAAU,EAAK1O,MAAM+T,iBAAmB,EACxCnJ,UAAU,wBACVD,QAAQ,UALV,UAWmB,cAAnBmO,EAAS9Y,OAAyB,EAAKA,MAAM0U,SAC7C,kBAAChK,EAAA,EAAD,CACEoD,KAAK,KACLjD,QAAS,kBAAM,EAAKoO,qBAAqB,QAASH,EAASvP,KAC3DmF,SAAU,EAAK1O,MAAM+T,iBAAmB,EACxCnJ,UAAU,wBACVD,QAAQ,WALV,SAWmB,WAAnBmO,EAAS9Y,OAAsB,EAAKA,MAAM0U,SAC1C,kBAAChK,EAAA,EAAD,CACEoD,KAAK,KACLjD,QAAS,kBAAM,EAAKoO,qBAAqB,UAAWH,EAASvP,KAC7DmF,SAAU,EAAK1O,MAAM+T,iBAAmB,EACxCnJ,UAAU,wBACVD,QAAQ,WALV,aAcN,kBAACoO,GAAA,EAAKtG,KAAN,CAAW7H,UAAU,gBACnB,2BAAIkO,EAAS9Y,QAEf,kBAAC+Y,GAAA,EAAKtG,KAAN,KACE,4CAAkBqG,EAASxB,QAAQnE,WAGrC,kBAAC4F,GAAA,EAAKtG,KAAN,CAAW7H,UAAU,QAAQkO,EAAShU,aACtC,kBAACiU,GAAA,EAAKtG,KAAN,MACA,kBAACsG,GAAA,EAAKtG,KAAN,CAAW7H,UAAU,uBAAsB,qDAA2BkO,EAASxB,QAAQC,WAA5C,gBAAqEuB,EAASxB,QAAQE,SAAtF,MAC3C,kBAACzL,EAAA,EAAD,CAAKnB,UAAU,oBAGZkO,EAASf,kBACR,kBAAC,WAAD,KACE,kBAAC3J,GAAA,EAAD,CAAKxD,UAAU,wBAAf,cACc,IAAImL,KAAU+C,EAASxB,QAAQV,UAAUZ,SAAS5C,IADhE,WAC8E,IAAI2C,KAAU+C,EAASxB,QAAQP,aAAaf,SAAS5C,IADnI,iBACsJ,6BACpJ,kBAACqF,GAAA,EAAD,CAAY7N,UAAU,QACpB,kBAAC8N,GAAA,EAAD,CACEnG,YAAY,sBACZC,SAAU,EAAKkB,sBAEjB,kBAAC+E,GAAA,EAAWE,OAAZ,KACE,kBAACjO,EAAA,EAAD,CACEC,QAAQ,UACRE,QAAS,kBAAM,EAAKoN,KAAKa,EAASvP,IAAI,KAFxC,eAON,kBAAC6E,GAAA,EAAD,CAAKxD,UAAU,uBAAf,kBACkB,IAAImL,KAAU+C,EAASxB,QAAQR,cAAcd,SAAS5C,IADxE,WACsF,IAAI2C,KAAU+C,EAASxB,QAAQN,iBAAiBhB,SAAS5C,IAD/I,iBACkK,6BAChK,kBAACqF,GAAA,EAAD,CAAY7N,UAAU,QACpB,kBAAC8N,GAAA,EAAD,CACEnG,YAAY,2BACZC,SAAU,EAAKkB,sBAEjB,kBAAC+E,GAAA,EAAWE,OAAZ,KACE,kBAACjO,EAAA,EAAD,CACEC,QAAQ,SACRE,QAAS,kBAAM,EAAKoN,KAAKa,EAASvP,IAAI,KAFxC,oBAWW,YAAnBuP,EAAS9Y,QAAwB8Y,EAASf,kBAC1C,kBAAC,WAAD,KACE,kBAAC3J,GAAA,EAAD,CAAKxD,UAAU,wBAAf,cACc,IAAImL,KAAU+C,EAASxB,QAAQV,UAAUZ,SAAS5C,IADhE,WAC8E,IAAI2C,KAAU+C,EAASxB,QAAQP,aAAaf,SAAS5C,IADnI,UAC+I,8BAE/I,kBAAChF,GAAA,EAAD,CAAKxD,UAAU,uBAAf,kBACkB,IAAImL,KAAU+C,EAASxB,QAAQR,cAAcd,SAAS5C,IADxE,WACsF,IAAI2C,KAAU+C,EAASxB,QAAQN,iBAAiBhB,SAAS5C,IAD/I,UAC2J,iCAMlI,IAA9B0F,EAASrB,QAAQC,UAChB,uBAAG9M,UAAU,oBAAb,aACakO,EAASrB,QAAQ9P,QAAU,MAAQ,UADhD,SACiE,IAAIoO,KAAU+C,EAASrB,QAAQ7P,OAAOoO,SAAS5C,IADhH,WAKmB,WAAnB0F,EAAS9Y,QAAoD,IAA9B8Y,EAASrB,QAAQC,UAChD,kBAACtJ,GAAA,EAAD,CAAKxD,UAAU,uBACb,uBAAGA,UAAU,8BACX,yEAMHkO,EAASrB,QAAQC,UAAaoB,EAASxB,QAAQnE,SAAS/C,gBAAkB,EAAKtF,MAAMnL,gBAAgByQ,gBAAqC,aAAnB0I,EAAS9Y,OAA2C,cAAnB8Y,EAAS9Y,OAA4C,aAAnB8Y,EAAS9Y,WAClM8Y,EAASrB,QAAQE,mBAAqBmB,EAASrB,QAAQG,mBACzDkB,EAASrB,QAAQK,UAAY,GAE7B,uBAAGlN,UAAU,oBACX,kBAACF,EAAA,EAAD,CACEoD,KAAK,KACLjD,QAAS,kBAAM,EAAKqO,YAAYJ,EAASvP,KACzCqB,UAAU,mBACVD,QAAQ,UAEY,WAAnBmO,EAAS9Y,MACR,gDAEA,wCAAc,IAAI+V,KAAU+C,EAASrB,QAAQK,WAAW9B,SAAS5C,IAAjE,uB,GA3jBUrI,iBA+kBnB9F,gBANS,SAAC,GAAD,IAAGvE,EAAH,EAAGA,IAAH,MAAc,CACpChB,aAAcgB,EAAIhB,aAClBC,gBAAiBe,EAAIf,gBACrBC,MAAOc,EAAId,SAGEqF,CAAyBsO,I,qBCtlBzB4F,G,4JAhCb,WACE,MAAmDpM,KAAKjC,MAAhDuH,EAAR,EAAQA,MAAO+G,EAAf,EAAeA,KAAM3L,EAArB,EAAqBA,OAAqBC,GAA1C,EAA6BC,SAA7B,sDACA,OACE,kBAACC,GAAA,EAAD,iBAAWF,EAAX,CAAiBG,UAAQ,IACvB,kBAACD,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,GAAA,EAAMyD,MAAP,KAAcgB,IAEhB,kBAACzE,GAAA,EAAM0D,KAAP,KACI8H,EAOA,2BAAIA,GANJ,yBAAKxO,UAAU,oBACb,kBAAC2F,GAAA,EAAD,CAASC,UAAU,SAAStF,KAAK,UAC/B,0BAAMN,UAAU,WAAhB,iBAOR,kBAACgD,GAAA,EAAMgE,OAAP,KACE,kBAAClH,EAAA,EAAD,CAAQG,QAAS4C,GAAjB,e,GApBoB1C,iBCIxBsO,G,4MACJrZ,MAAQ,CACN8E,YAAa,GACb8L,OAAQ,GACRC,cAAc,G,EAWhByI,O,sBAAS,8BAAA1W,EAAA,6DACP,EAAKqK,SAAS,CAAE4D,cAAc,IADvB,SAGC0I,EAAO,CACXtS,QAAS,CACPzD,GAAS,QAAqCC,aAAaC,SAE7DX,OAAQ,CAAC,GACTmE,WAAY,CACV,6FAEFsS,SAAU,CACR,EAAK1O,MAAM0O,UAEb1U,YAAa,EAAKgG,MAAMhG,aAdrB,SAgBqBkC,GACxB,EAAK8D,MAAMpL,aACX6Z,EAAKtS,QACLsS,EAAKxW,OACLwW,EAAKrS,WACLqS,EAAKC,SACLD,EAAKzU,aAtBF,OAgBC2U,EAhBD,OAwBL,EAAKxM,SAAS,CACZ2D,OAAQ6I,EAAYnX,WACpBuO,cAAc,IA1BX,gDA6BL,EAAK5D,SAAS,CACZ2D,OAAQ,KAAErP,QACVsP,cAAc,IA/BX,yD,EAoCT6I,oBAAsB,SAACtH,GAAD,OAAW,EAAKnF,SAAS,CAC7CnI,YAAasN,EAAMxC,OAAO+B,S,sEA7C5B,SAAiCgI,GAC3BA,EAAU7U,cAAgBiI,KAAKjC,MAAMhG,aACvCiI,KAAKE,SAAS,CACZnI,YAAa6U,EAAU7U,gB,oBA6C7B,WACE,MAAoEiI,KAAKjC,MAAjEuH,EAAR,EAAQA,MAAOmH,EAAf,EAAeA,SAAuB/L,GAAtC,EAAyB3I,YAAzB,EAAsC2I,QAAqBC,GAA3D,EAA8CC,SAA9C,wEACA,OACE,kBAACC,GAAA,EAAD,iBAAWF,EAAX,CAAiBG,UAAQ,EAACC,KAAK,OAC7B,kBAACF,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,GAAA,EAAMyD,MAAP,KAAcgB,IAEhB,kBAACzE,GAAA,EAAM0D,KAAP,KACE,mDAAwB,2CAAxB,2WACA,2BAAG,yIACH,kBAACC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,oBACA,kBAACF,GAAA,EAAKG,QAAN,CAAckI,GAAG,WAAWC,KAAM,EAAGtH,YAAY,2CAA2CZ,MAAO5E,KAAK/M,MAAM8E,YAAa0N,SAAUzF,KAAK2M,uBAE5I,kBAACnI,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,iBACA,kBAACF,GAAA,EAAKG,QAAN,CAAckI,GAAG,WAAWlL,UAAQ,EAACmL,KAAM,EAAGlI,MAAO6H,IACrD,kBAACjI,GAAA,EAAKkB,KAAN,CAAW7H,UAAU,cAArB,uIAGHmC,KAAK/M,MAAM6Q,cACV,yBAAKjG,UAAU,oBACb,kBAAC2F,GAAA,EAAD,CAASC,UAAU,SAAStF,KAAK,UAC/B,0BAAMN,UAAU,WAAhB,kBAIHmC,KAAK/M,MAAM4Q,QACZ,uBAAGhG,UAAU,QAAQmC,KAAK/M,MAAM4Q,SAGpC,kBAAChD,GAAA,EAAMgE,OAAP,KACE,kBAAClH,EAAA,EAAD,CAAQG,QAAS4C,GAAjB,SACA,kBAAC/C,EAAA,EAAD,CAAQC,QAAQ,UAAUE,QAASkC,KAAKuM,QAAxC,yB,GAzFwBvO,iBA2GnB9F,gBAJS,SAAC,GAAD,MAAc,CACpCvF,aADsB,EAAGgB,IACPhB,gBAGLuF,CAAyBoU,IC1GlCS,G,4MACJ9Z,MAAQ,CACN+Z,qBAAqB,EACrBC,iBAAiB,EAEjBC,aAAc,GAEdvW,QAAS,GACTa,YAAa,EACbC,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,oBAAqB,GACrBC,SAAU,GACVC,SAAU,GACVC,YAAa,GACb8L,OAAQ,GAER4I,SAAU,GAEVU,yBAAyB,EACzBC,0BAA0B,G,EAwB5BC,gBAAkB,SAAChI,GAAD,OAAW,EAAKnF,SAAS,CACzCvJ,QAAS0O,EAAMxC,OAAO+B,S,EAGxB0I,oBAAsB,SAACjI,GAAD,OAAW,EAAKnF,SAAS,CAC7C1I,YAAa6N,EAAMxC,OAAO+B,S,EAG5B2I,iBAAmB,SAAClI,GAAD,OAAW,EAAKnF,SAAS,CAC1CzI,SAAU4N,EAAMxC,OAAO+B,S,EAGzB4I,iBAAmB,SAACnI,GAAD,OAAW,EAAKnF,SAAS,CAC1CxI,SAAU2N,EAAMxC,OAAO+B,S,EAGzB6I,iBAAmB,SAACpI,GAAD,OAAW,EAAKnF,SAAS,CAC1CvI,SAAU0N,EAAMxC,OAAO+B,S,EAGzB8I,4BAA8B,SAACrI,GAAD,OAAW,EAAKnF,SAAS,CACrDtI,oBAAqByN,EAAMxC,OAAO+B,S,EAGpC+I,iBAAmB,SAACtI,GAAD,OAAW,EAAKnF,SAAS,CAC1CrI,SAAUwN,EAAMxC,OAAO+B,S,EAGzBgJ,iBAAmB,SAACvI,GAAD,OAAW,EAAKnF,SAAS,CAC1CpI,SAAUuN,EAAMxC,OAAO+B,S,EAGzB+H,oBAAsB,SAACtH,GAAD,OAAW,EAAKnF,SAAS,CAC7CnI,YAAasN,EAAMxC,OAAO+B,S,EAG5BiJ,aAAe,WACb,EAAKtB,SACL,EAAKrM,SAAS,CACZ8M,qBAAqB,K,uDA5DzB,WACMhN,KAAKjC,MAAMjL,aAAekN,KAAKjC,MAAMpL,cACvCqN,KAAK8N,e,gCAIT,SAAmBjO,EAAWC,EAAWC,IAClCF,EAAU/M,aAAekN,KAAKjC,MAAMjL,YACnCkN,KAAKjC,MAAMpL,cACbqN,KAAK8N,aAEEjO,EAAU/M,cAAgBkN,KAAKjC,MAAMjL,aAC9CkN,KAAKE,SAAS,CAAEgN,aAAc,O,+DAIlC,4BAAArX,EAAA,sEAC6BwB,GAAS2I,KAAKjC,MAAMpL,cADjD,OACQua,EADR,OAEElN,KAAKE,SAAS,CAAEgN,iBAFlB,gD,iHAgDA,8BAAArX,EAAA,6DAEQkY,EAAgD,MAA3B/N,KAAK/M,MAAMuE,YAAsBwW,KAAKC,MAA4B,IAAtBjO,KAAK/M,MAAMwE,UAAmBuI,KAAK/M,MAAMwE,SAFlH,SAG0BF,GACtByI,KAAKjC,MAAMpL,aACXqN,KAAK/M,MAAM0D,QACXqJ,KAAK/M,MAAMuE,YACXuW,EACA/N,KAAK/M,MAAMyE,SACXsI,KAAK/M,MAAM0E,SACXqI,KAAK/M,MAAM2E,oBACXoI,KAAK/M,MAAM4E,SACXmI,KAAK/M,MAAM6E,SACXkI,KAAK/M,MAAM8E,aAbf,OAGQmW,EAHR,OAeElO,KAAKE,SAAS,CACZ2D,OAAQqK,EAAU3Y,aAhBtB,gD,kFAqBA,WACE,IACE,IAAM4Y,GZ/CqBpY,EYiDzB,CACE,UACA,UACA,QACA,UACA,UACA,UACA,UACA,SACA,SACA,UZ3D8BC,EY8DhC,CACEgK,KAAKjC,MAAMjL,YAAckN,KAAK/M,MAAMia,aAAelN,KAAK/M,MAAM0D,QAC9DqJ,KAAKjC,MAAMnL,gBACXoN,KAAK/M,MAAMuE,YACXoK,OAAO5B,KAAK/M,MAAMwE,UAClBmK,OAAO5B,KAAK/M,MAAMyE,UAAY,IAC9BkK,OAAO5B,KAAK/M,MAAM0E,UAAY,IAC9BiK,OAAO5B,KAAK/M,MAAM2E,qBAAuB,IACzCoI,KAAK/M,MAAM4E,SACXmI,KAAK/M,MAAM6E,SACX,kBAAoBkI,KAAK/M,MAAM8E,cZvE3B,IAAI9B,KACLmY,OAAOrY,EAAOC,IYyErBgK,KAAKE,SAAS,CAAEuM,SAAU0B,IAC1B,MAAOpZ,GACPiL,KAAKE,SAAS,CAAEuM,SAAU,KZ7EzB,IAA0B1W,EAAOC,I,oBYiFtC,WAAU,IAAD,OACDqY,EAAa,CACjBC,UAAW,kCACXC,YAAa,WAEf,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CACE/O,KAAMQ,KAAK/M,MAAMga,gBACjB3H,MAAM,oBACN5E,OAAQ,kBAAM,EAAKR,SAAS,CAC1B+M,iBAAiB,KAEnB/P,SAAU8C,KAAKjC,MAAMpL,aACrB8Z,SAAUzM,KAAK/M,MAAMwZ,SACrB1U,YAAaiI,KAAK/M,MAAM8E,cAE1B,kBAAC,GAAD,CACEyH,KAAMQ,KAAK/M,MAAM+Z,oBACjB1H,MAAM,eACN+G,KAAMrM,KAAK/M,MAAM4Q,OACjBnD,OAAQ,kBAAM,EAAKR,SAAS,CAC1B2D,OAAQ,GACRmJ,qBAAqB,OAGzB,4CACA,kJAEGhN,KAAKjC,MAAMjL,aAA0C,MAA3BkN,KAAK/M,MAAMuE,YAkBtC,kBAACgN,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,gBACA,kBAACF,GAAA,EAAKG,QAAN,CACExR,KAAK,QACLyR,MAAO5E,KAAK/M,MAAMia,aAClBvL,UAAQ,EACR6M,OAAQ,kBAAM,EAAKtO,SAAS,CAC1BiN,yBAAyB,KAE3BrO,MAAUkB,KAAK/M,MAAM0D,UAAYqJ,KAAK/M,MAAMka,wBAA2B,GAAKkB,IAE9E,kBAAC7J,GAAA,EAAKkB,KAAN,CAAW7H,UAAU,cAArB,iDA5BF,kBAAC2G,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,gBACA,kBAACF,GAAA,EAAKG,QAAN,CACExR,KAAK,QACLqS,YAAY,WACZZ,MAAO5E,KAAK/M,MAAM0D,QAClB8O,SAAUzF,KAAKqN,gBACfmB,OAAQ,kBAAM,EAAKtO,SAAS,CAC1BiN,yBAAyB,KAE3BrO,MAAUkB,KAAK/M,MAAM0D,UAAYqJ,KAAK/M,MAAMka,wBAA2B,GAAKkB,IAE9E,kBAAC7J,GAAA,EAAKkB,KAAN,CAAW7H,UAAU,cAArB,mCAsBJ,kBAAC2G,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,mBACA,kBAACF,GAAA,EAAKG,QAAN,CAAckI,GAAG,SAASpH,SAAUzF,KAAKsN,qBACvC,4BAAQ1I,MAAO,GAAIzQ,GAAY,IAC/B,4BAAQyQ,MAAO,GAAIzQ,GAAY,IAC/B,4BAAQyQ,MAAO,GAAIzQ,GAAY,MAGnC,kBAACqQ,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,iBACA,kBAACF,GAAA,EAAKG,QAAN,CACExR,KAAK,QACLqS,YAAwC,MAA3BxF,KAAK/M,MAAMuE,YAAsB,UAAY,MAC1DoN,MAAO5E,KAAK/M,MAAMwE,SAClBgO,SAAUzF,KAAKuN,iBACfiB,OAAQ,kBAAM,EAAKtO,SAAS,CAC1BiN,yBAAyB,KAE3BrO,MAAUkB,KAAK/M,MAAMwE,WAAauI,KAAK/M,MAAMma,yBAA4B,GAAKiB,IAGhF,kBAAC7J,GAAA,EAAKkB,KAAN,CAAW7H,UAAU,cACS,MAA3BmC,KAAK/M,MAAMuE,YAAsB,mDAAqD,8BAG3F,kBAACgN,GAAA,EAAKxF,IAAN,KACE,kBAACwF,GAAA,EAAKC,MAAN,CAAYoI,GAAIxL,MACd,kBAACmD,GAAA,EAAKE,MAAN,kBACA,kBAAC,KAAD,CAAUe,SAAUzF,KAAKwN,oBAE3B,kBAAChJ,GAAA,EAAKC,MAAN,CAAYoI,GAAIxL,MACd,kBAACmD,GAAA,EAAKE,MAAN,qBACA,kBAAC,KAAD,CAAUe,SAAUzF,KAAKyN,oBAE3B,kBAACjJ,GAAA,EAAKC,MAAN,CAAYoI,GAAIxL,MACd,kBAACmD,GAAA,EAAKE,MAAN,8BACA,kBAAC,KAAD,CAAUe,SAAUzF,KAAK0N,gCAG7B,kBAAClJ,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,oBACA,kBAACF,GAAA,EAAKG,QAAN,CACEkI,GAAG,WACHrH,YAAY,GACZZ,MAAO5E,KAAK/M,MAAM8E,YAClB0N,SAAUzF,KAAK2M,uBAGnB,kBAACnI,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,iBACA,kBAACF,GAAA,EAAKG,QAAN,CACEkI,GAAG,WACHrH,YAAY,4EACZZ,MAAO5E,KAAK/M,MAAM4E,SAClB4N,SAAUzF,KAAK2N,oBAGnB,kBAACnJ,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,iBACA,kBAACF,GAAA,EAAKG,QAAN,CACEkI,GAAG,WACHrH,YAAY,qFACZZ,MAAO5E,KAAK/M,MAAM6E,SAClB2N,SAAUzF,KAAK4N,oBAInB,kBAAC5O,EAAA,EAAD,CAAKnB,UAAU,QACb,kBAACwD,GAAA,EAAD,MAEIrB,KAAKjC,MAAMjL,aAAiBkN,KAAKjC,MAAMlL,MAAM,IAAOmN,KAAKjC,MAAMlL,MAAM,IAAOmN,KAAKjC,MAAMlL,MAAM,GAU7F,kBAAC8K,EAAA,EAAD,CACEC,QAAQ,UACRmD,KAAK,KACL0K,OAAK,EACL3N,QAAS,kBAAM,EAAKoC,SAAS,CAAE+M,iBAAiB,KAChDtL,SACiC,IAA/B3B,KAAK/M,MAAMwZ,SAAS3X,QACmB,IAAvC2Z,OAAOzO,KAAK/M,MAAMwE,UAAU3C,QACD,MAA3BkL,KAAK/M,MAAMuE,aARf,yBATA,kBAACmG,EAAA,EAAD,CACEC,QAAQ,UACRmD,KAAK,KACL0K,OAAK,EACL9J,UAAQ,GAJV,kCAyBD3B,KAAKjC,MAAMjL,aAA0C,MAA3BkN,KAAK/M,MAAMuE,cACtC,kBAAC6J,GAAA,EAAD,KAEIrB,KAAKjC,MAAMlL,MAAM,IAAMmN,KAAKjC,MAAMlL,MAAM,IAAMmN,KAAKjC,MAAMlL,MAAM,IAAMmN,KAAKjC,MAAMlL,MAAM,GACtF,kBAAC8K,EAAA,EAAD,CACEC,QAAQ,UACRmD,KAAK,KACL0K,OAAK,EACL3N,QAASkC,KAAK6N,aACdlM,UAAW3B,KAAK/M,MAAMwZ,UAAmD,IAAvCgC,OAAOzO,KAAK/M,MAAMwE,UAAU3C,QAAsD,IAAtC2Z,OAAOzO,KAAK/M,MAAM0D,SAAS7B,QAL3G,SAUA,kBAAC6I,EAAA,EAAD,CACEC,QAAQ,UACRmD,KAAK,KACL0K,OAAK,EACL9J,UAAQ,GAJV,sC,GA/TQ3D,iBAuVT9F,gBAPS,SAAC,GAAD,IAAGvE,EAAH,EAAGA,IAAH,MAAc,CACpChB,aAAcgB,EAAIhB,aAClBC,gBAAiBe,EAAIf,gBACrBC,MAAOc,EAAId,MACXC,YAAaa,EAAIb,eAGJoF,CAAyB6U,ICzVlC2B,G,4MACJzb,MAAQ,CACN0b,WAAW,EAEXhY,QAAS,GACTM,QAAS,GACToB,OAAQ,GACRwL,OAAQ,GAERsJ,yBAAyB,EACzByB,yBAAyB,EACzBC,wBAAwB,G,EA0B1BxB,gBAAkB,SAAChI,GAAD,OAAW,EAAKnF,SAAS,CACzCvJ,QAAS0O,EAAMxC,OAAO+B,S,EAGxBkK,gBAAkB,SAACzJ,GAAD,OAAW,EAAKnF,SAAS,CACzCjJ,QAASoO,EAAMxC,OAAO+B,S,EAGxBmK,eAAiB,SAAC1J,GAAD,OAAW,EAAKnF,SAAS,CACxC7H,OAAQgN,EAAMxC,OAAO+B,S,EAGvBoK,eAAiB,WACf,EAAKC,gBACL,EAAK/O,SAAS,CAAEyO,WAAW,K,uDArC7B,WACE,IAAMO,EAAc,IAAIC,gBAAgB7b,OAAOC,SAAS6b,QAClDC,EAAoBH,EAAYI,IAAI,WACpCC,EAAoBL,EAAYI,IAAI,WACpCE,EAAqBN,EAAYI,IAAI,YAEvCD,GACFrP,KAAKE,SAAS,CACZvJ,QAAS0Y,IAGTE,GACFvP,KAAKE,SAAS,CACZjJ,QAASsY,IAGTC,GACFxP,KAAKE,SAAS,CACZ7H,OAAQmX,M,kEAsBd,4BAAA3Z,EAAA,sEACuByC,GAAS0H,KAAKjC,MAAMpL,aAAcqN,KAAK/M,MAAM0D,QAASqJ,KAAK/M,MAAMgE,QAAS+I,KAAK/M,MAAMoF,QAD5G,OACQwL,EADR,OAEE7D,KAAKE,SAAS,CACZ2D,OAAQA,EAAOtO,aAHnB,gD,0EAOA,WAAU,IAAD,OACD8Y,EAAa,CACjBC,UAAW,kCACXC,YAAa,WAEf,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CACE/O,KAAMQ,KAAK/M,MAAM0b,UACjBrJ,MAAM,kBACN+G,KAAMrM,KAAK/M,MAAM4Q,OACjBnD,OAAQ,kBAAM,EAAKR,SAAS,CAC1ByO,WAAW,EACX9K,OAAQ,QAGZ,+CACA,6NACA,kBAACW,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,gBACA,kBAACF,GAAA,EAAKG,QAAN,CACExR,KAAK,QACLqS,YAAY,WACZZ,MAAO5E,KAAK/M,MAAM0D,QAClB8O,SAAUzF,KAAKqN,gBACfmB,OAAQ,kBAAM,EAAKtO,SAAS,CAC1BiN,yBAAyB,KAE3BrO,MAAQkB,KAAK/M,MAAM0D,UAAYqJ,KAAK/M,MAAMka,wBAA2B,GAAKkB,KAG9E,kBAAC7J,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,iBACA,kBAACF,GAAA,EAAKG,QAAN,CACExR,KAAK,QACLqS,YAAY,eACZZ,MAAO5E,KAAK/M,MAAMgE,QAClBwO,SAAUzF,KAAK8O,gBACfN,OAAQ,kBAAM,EAAKtO,SAAS,CAC1B0O,yBAAyB,KAE3B9P,MAAQkB,KAAK/M,MAAMgE,UAAY+I,KAAK/M,MAAM2b,wBAA2B,GAAKP,KAG9E,kBAAC7J,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,iBACA,kBAACF,GAAA,EAAKG,QAAN,CACExR,KAAK,QACLqS,YAAY,MACZZ,MAAO5E,KAAK/M,MAAMoF,OAClBoN,SAAUzF,KAAK+O,eACfP,OAAQ,kBAAM,EAAKtO,SAAS,CAC1B2O,wBAAwB,KAE1B/P,MAAQkB,KAAK/M,MAAMoF,SAAW2H,KAAK/M,MAAM4b,uBAA0B,GAAKR,KAI9C,IAA5BrO,KAAKjC,MAAMlL,MAAMiC,QAAgBkL,KAAKjC,MAAMlL,MAAMoV,MAAK,SAAAkD,GAAC,OAAU,IAANA,KAC5D,kBAACxN,EAAA,EAAD,CACEC,QAAQ,UACRmD,KAAK,KACL0K,OAAK,EACL3N,QAASkC,KAAKgP,gBAJhB,YASA,kBAACrR,EAAA,EAAD,CACEgE,UAAQ,EACR/D,QAAQ,UACRmD,KAAK,KACL0K,OAAK,GAJP,kC,GAjIiBzN,iBAoJZ9F,gBALS,SAAC,GAAD,IAAGvE,EAAH,EAAGA,IAAH,MAAc,CACpChB,aAAcgB,EAAIhB,aAClBE,MAAOc,EAAId,SAGEqF,CAAyBwW,ICpJlCe,G,4MACJxc,MAAQ,CACN0b,WAAW,EAEX1X,QAAS,GACToB,OAAQ,GACRwL,OAAQ,GAER+K,yBAAyB,EACzBC,wBAAwB,G,EAoB1BC,gBAAkB,SAACzJ,GAAD,OAAW,EAAKnF,SAAS,CACzCjJ,QAASoO,EAAMxC,OAAO+B,S,EAGxBmK,eAAiB,SAAC1J,GAAD,OAAW,EAAKnF,SAAS,CACxC7H,OAAQgN,EAAMxC,OAAO+B,S,EAcvB8K,aAAe,WACb,EAAKC,cACL,EAAKzP,SAAS,CAAEyO,WAAW,K,uDAtC7B,WACE,IAAMO,EAAc,IAAIC,gBAAgB7b,OAAOC,SAAS6b,QAClDG,EAAoBL,EAAYI,IAAI,WACpCE,EAAqBN,EAAYI,IAAI,YAEvCC,GACFvP,KAAKE,SAAS,CACZjJ,QAASsY,IAGTC,GACFxP,KAAKE,SAAS,CACZ7H,OAAQmX,M,gEAad,4BAAA3Z,EAAA,sEAC2BuC,GACvB4H,KAAKjC,MAAMpL,aACXqN,KAAK/M,MAAMgE,QACX+I,KAAK/M,MAAMoF,QAJf,OACQuX,EADR,OAME5P,KAAKE,SAAS,CACZ2D,OAAQ+L,EAAWra,aAPvB,gD,0EAgBA,WAAU,IAAD,OACD8Y,EAAa,CACjBC,UAAW,kCACXC,YAAa,WAEf,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CACE/O,KAAMQ,KAAK/M,MAAM0b,UACjBrJ,MAAM,gBACN+G,KAAMrM,KAAK/M,MAAM4Q,OACjBnD,OAAQ,kBAAM,EAAKR,SAAS,CAC1ByO,WAAW,EACX9K,OAAQ,QAGZ,6CACA,4MACA,kBAACW,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,iBACA,kBAACF,GAAA,EAAKG,QAAN,CACExR,KAAK,QACLqS,YAAY,eACZZ,MAAO5E,KAAK/M,MAAMgE,QAClBwO,SAAUzF,KAAK8O,gBACfN,OAAQ,kBAAM,EAAKtO,SAAS,CAC1B0O,yBAAyB,KAE3B9P,MAAQkB,KAAK/M,MAAMgE,UAAY+I,KAAK/M,MAAM2b,wBAA2B,GAAKP,KAG9E,kBAAC7J,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,iBACA,kBAACF,GAAA,EAAKG,QAAN,CACExR,KAAK,QACLqS,YAAY,MACZZ,MAAO5E,KAAK/M,MAAMoF,OAClBoN,SAAUzF,KAAK+O,eACfP,OAAQ,kBAAM,EAAKtO,SAAS,CAC1B2O,wBAAwB,KAE1B/P,MAAQkB,KAAK/M,MAAMoF,SAAW2H,KAAK/M,MAAM4b,uBAA0B,GAAKR,KAI9C,IAA5BrO,KAAKjC,MAAMlL,MAAMiC,QAAgBkL,KAAKjC,MAAMlL,MAAMoV,MAAK,SAAAkD,GAAC,OAAU,IAANA,KAC5D,kBAACxN,EAAA,EAAD,CACEC,QAAQ,SACRmD,KAAK,KACL0K,OAAK,EACL3N,QAASkC,KAAK0P,cAJhB,UASA,kBAAC/R,EAAA,EAAD,CACEgE,UAAQ,EACR/D,QAAQ,SACRmD,KAAK,KACL0K,OAAK,GAJP,kC,GA5GezN,iBA+HV9F,gBALS,SAAC,GAAD,IAAGvE,EAAH,EAAGA,IAAH,MAAc,CACpChB,aAAcgB,EAAIhB,aAClBE,MAAOc,EAAId,SAGEqF,CAAyBuX,ICtHlCI,G,4MACJ5c,MAAQ,CACN0b,WAAW,EACXhY,QAAS,GACTwH,KAAM,WACN0F,OAAQ,GAERiM,aAAc,GACdC,WAAY,GACZC,oBAAoB,G,EAGtB3C,gBAAkB,SAAChI,GAAD,OAAW,EAAKnF,SAAS,CACzCvJ,QAAS0O,EAAMxC,OAAO+B,S,EAGxBqL,qBAAuB,SAAC5K,GAAD,OAAW,EAAKnF,SAAS,CAC9C4P,aAAczK,EAAMxC,OAAO+B,S,EAG7BsL,aAAe,SAAC7K,GAAD,OAAW,EAAKnF,SAAS,CACtC/B,KAAMkH,EAAMxC,OAAO+B,S,EAGrBuL,gB,sBAAkB,4BAAAta,EAAA,6DAChB,EAAKqK,SAAS,CACZ6P,WAAY,GACZC,oBAAoB,IAHN,SAKKlZ,GAAS,EAAKiH,MAAMpL,aAAc,EAAKM,MAAM6c,cALlD,OAKVjM,EALU,OAMhB,EAAK3D,SAAS,CACZ6P,WAAYlM,EACZmM,oBAAoB,IARN,2C,EAgFlBtS,OAAS,kBACP,kBAAC,WAAD,KACE,kBAAC,GAAD,CACE8B,KAAM,EAAKvM,MAAM0b,UACjBrJ,MAAM,eACN+G,KAAM,EAAKpZ,MAAM4Q,OACjBnD,OAAQ,kBAAM,EAAKR,SAAS,CAC1ByO,WAAW,EACX9K,OAAQ,QAGZ,4CACA,qLACC,EAAK9F,MAAMnL,iBACV,kBAAC,WAAD,KACE,wCAC6B,IAA5B,EAAKmL,MAAMlL,MAAMiC,OAChB,kBAAC,GAAD,CAAWjC,MAAO,EAAKkL,MAAMlL,QAE7B,yBAAKgL,UAAU,yBACb,kBAAC2F,GAAA,EAAD,CAASC,UAAU,SAAStF,KAAK,UAC/B,0BAAMN,UAAU,WAAhB,iBAOV,6CACA,kBAAC6N,GAAA,EAAD,CAAY7N,UAAU,QACpB,kBAAC8N,GAAA,EAAD,CACEnG,YAAY,WACZC,SAAU,EAAKwK,uBAEjB,kBAACvE,GAAA,EAAWE,OAAZ,KACE,kBAACjO,EAAA,EAAD,CAAQC,QAAQ,oBAAoBE,QAAS,EAAKqS,iBAAlD,aAGH,EAAKld,MAAM+c,oBACV,yBAAKnS,UAAU,yBACb,kBAAC2F,GAAA,EAAD,CAASC,UAAU,SAAStF,KAAK,UAC/B,0BAAMN,UAAU,WAAhB,gBAI4B,IAAjC,EAAK5K,MAAM8c,WAAWjb,QACrB,kBAAC,GAAD,CAAWjC,MAAO,EAAKI,MAAM8c,cAIN,IAAxB,EAAKhS,MAAMlL,MAAM,IAChB,kBAAC,WAAD,KACE,yEACA,kBAAC2R,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,gBACA,kBAACF,GAAA,EAAKG,QAAN,CACExR,KAAK,QACLqS,YAAY,WACZZ,MAAO,EAAK3R,MAAM0D,QAClB8O,SAAU,EAAK4H,mBAGnB,kBAAC7I,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,aACA,kBAACF,GAAA,EAAKG,QAAN,CAAckI,GAAG,SAASpH,SAAU,EAAKyK,cACvC,4BAAQtL,MAAM,YAAd,YACA,4BAAQA,MAAM,OAAd,6CACA,4BAAQA,MAAM,OAAd,iBACA,4BAAQA,MAAM,MAAd,uBAGJ,kBAACJ,GAAA,EAAKC,MAAN,KACE,kBAACzF,EAAA,EAAD,KACE,kBAACqC,GAAA,EAAD,KACE,kBAAC1D,EAAA,EAAD,CAAQC,QAAQ,UAAUmD,KAAK,KAAK0K,OAAK,EAAC3N,QAAS,EAAKsS,gBAAxD,aAIF,kBAAC/O,GAAA,EAAD,KACE,kBAAC1D,EAAA,EAAD,CAAQC,QAAQ,SAASmD,KAAK,KAAK0K,OAAK,EAAC3N,QAAS,EAAKuS,kBAAvD,mBASP,EAAKtS,MAAMjL,cAAwC,IAAxB,EAAKiL,MAAMlL,MAAM,MAAyC,IAAxB,EAAKkL,MAAMlL,MAAM,KAAuC,IAAxB,EAAKkL,MAAMlL,MAAM,KAAuC,IAAxB,EAAKkL,MAAMlL,MAAM,KAC/I,kBAAC,WAAD,KACE,6DACA,kBAAC2R,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,gBACA,kBAACF,GAAA,EAAKG,QAAN,CACExR,KAAK,QACLqS,YAAY,WACZZ,MAAO,EAAK3R,MAAM0D,QAClB8O,SAAU,EAAK4H,mBAGnB,kBAAC7I,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,aACA,kBAACF,GAAA,EAAKG,QAAN,CAAckI,GAAG,SAASlL,UAAQ,GAChC,4BAAQiD,MAAM,YAAd,cAGJ,kBAACJ,GAAA,EAAKC,MAAN,KACE,kBAACzF,EAAA,EAAD,KACE,kBAACqC,GAAA,EAAD,KACE,kBAAC1D,EAAA,EAAD,CAAQC,QAAQ,UAAUmD,KAAK,KAAK0K,OAAK,EAAC3N,QAAS,EAAKsS,gBAAxD,aAIF,kBAAC/O,GAAA,EAAD,KACE,kBAAC1D,EAAA,EAAD,CAAQC,QAAQ,SAASmD,KAAK,KAAK0K,OAAK,EAAC3N,QAAS,EAAKuS,kBAAvD,oB,kGAtLd,4BAAAxa,EAAA,sEACuB0C,GAAiByH,KAAKjC,MAAMpL,aAAcqN,KAAK/M,MAAM0D,SAD5E,OACQkN,EADR,OAEE7D,KAAKE,SAAS,CACZ2D,OAAQA,EAAOtO,aAHnB,gD,kIAOA,4BAAAM,EAAA,sEACuB2C,GAAmBwH,KAAKjC,MAAMpL,aAAcqN,KAAK/M,MAAM0D,SAD9E,OACQkN,EADR,OAEE7D,KAAKE,SAAS,CACZ2D,OAAQA,EAAOtO,aAHnB,gD,8HAOA,WAA0BiC,GAA1B,eAAA3B,EAAA,sEACuB4C,GAAeuH,KAAKjC,MAAMpL,aAAcqN,KAAK/M,MAAM0D,QAASa,GADnF,OACQqM,EADR,OAEE7D,KAAKE,SAAS,CACZ2D,OAAQA,EAAOtO,aAHnB,gD,iIAOA,WAA4BiC,GAA5B,eAAA3B,EAAA,sEACuB6C,GAAiBsH,KAAKjC,MAAMpL,aAAcqN,KAAK/M,MAAM0D,QAASa,GADrF,OACQqM,EADR,OAEE7D,KAAKE,SAAS,CACZ2D,OAAQA,EAAOtO,aAHnB,gD,mFAOA,WACE,OAAQyK,KAAK/M,MAAMkL,MACjB,IAAK,WACH6B,KAAKsQ,wBACL,MACF,IAAK,MACHtQ,KAAKuQ,oBAAoB,GACzB,MACF,IAAK,MACHvQ,KAAKuQ,oBAAoB,GACzB,MACF,IAAK,KACHvQ,KAAKuQ,oBAAoB,GACzB,MACF,QACEhc,QAAQF,MAAM,mBAElB2L,KAAKE,SAAS,CAAEyO,WAAW,M,8BAG7B,WACE,OAAQ3O,KAAK/M,MAAMkL,MACjB,IAAK,WACH6B,KAAKwQ,0BACL,MACF,IAAK,MACHxQ,KAAKyQ,sBAAsB,GAC3B,MACF,IAAK,MACHzQ,KAAKyQ,sBAAsB,GAC3B,MACF,IAAK,KACHzQ,KAAKyQ,sBAAsB,GAC3B,MACF,QACElc,QAAQF,MAAM,mBAElB2L,KAAKE,SAAS,CAAEyO,WAAW,Q,GArGC3Q,iBA6OjB9F,gBAPS,SAAC,GAAD,IAAGvE,EAAH,EAAGA,IAAH,MAAc,CACpChB,aAAcgB,EAAIhB,aAClBC,gBAAiBe,EAAIf,gBACrBC,MAAOc,EAAId,MACXC,YAAaa,EAAIb,eAGJoF,CAAyB2X,IAIlCa,G,4JACJ,WACE,IAAMC,EAAY,CAAC,QAAS,aAAc,gBAAiB,oBAAqB,YAChF,OACE,4BACG3Q,KAAKjC,MAAMlL,MAAM6Q,KAAI,SAACvF,EAAM3B,GAAP,OACpB,yBAAKL,IAAKK,GACP2B,GACC,4BAAKwS,EAAUnU,GAAf,qB,GARUwB,iBChPlB4S,G,uKACJ,WACE5Q,KAAK6Q,SAAW7Q,KAAKjC,MAAM+S,QAAQC,QAAO,SAACxd,EAAUL,S,kCAGvD,WACE8M,KAAK6Q,a,oBAGP,WACE,IAAMG,EAAkBhR,KAAKjC,MAAMlL,MAAMiC,OAAS,IAAMkL,KAAKjC,MAAMlL,MAAM,IAAMmN,KAAKjC,MAAMlL,MAAM,IAAMmN,KAAKjC,MAAMlL,MAAM,IAAMmN,KAAKjC,MAAMlL,MAAM,IACxIoe,EAAUjR,KAAKjC,MAAMlL,MAAMiC,OAAS,GAAKkL,KAAKjC,MAAMlL,MAAM,GAChE,OACE,yBAAKgL,UAAU,OACb,kBAAC,GAAD,MAEA,kBAACa,EAAA,EAAD,CAAKwS,MAAI,EAACtT,QAAQ,OAAOC,UAAU,6BAGC,eAAjCmC,KAAKjC,MAAMxK,SAAS4d,SACnB,kBAACzS,EAAA,EAAIC,KAAL,CAAUyS,SAAS,aAAnB,aAEA,kBAAC1S,EAAA,EAAIG,KAAL,KACE,kBAACH,EAAA,EAAIC,KAAL,CAAUkO,GAAIlO,IAAM0S,GAAG,aAAaD,SAAS,aAA7C,cAIJ,kBAAC1S,EAAA,EAAIG,KAAL,KACE,kBAACH,EAAA,EAAIC,KAAL,CAAUkO,GAAIlO,IAAM0S,GAAG,cAAcD,SAAS,cAA9C,eAEF,kBAAC1S,EAAA,EAAIG,KAAL,KACE,kBAACH,EAAA,EAAIC,KAAL,CAAUkO,GAAIlO,IAAM0S,GAAG,SAASD,SAAS,SAAzC,kBAGCpR,KAAKjC,MAAMjL,aAAeme,IAAajR,KAAKjC,MAAMjL,cACnD,kBAAC4L,EAAA,EAAIG,KAAL,KACE,kBAACH,EAAA,EAAIC,KAAL,CAAUkO,GAAIlO,IAAM0S,GAAG,YAAYD,SAAS,YAA5C,oBAIJ,kBAAC1S,EAAA,EAAIG,KAAL,KACE,kBAACH,EAAA,EAAIC,KAAL,CAAUkO,GAAIlO,IAAM0S,GAAG,UAAUD,SAAS,UAA1C,kBAIF,kBAAC1S,EAAA,EAAIG,KAAL,KACE,kBAACH,EAAA,EAAIC,KAAL,CAAUkO,GAAIlO,IAAM0S,GAAG,kBAAkBD,SAAS,oBAAqBpR,KAAKjC,MAAMjL,aAAeke,IAAoBhR,KAAKjC,MAAMjL,aAAeme,GAAW,eAAiB,cAI/K,kBAACK,EAAA,EAAD,CAAWzT,UAAU,QACnB,kBAAC0T,EAAA,EAAD,CAAcC,iBAAkBxR,KAAKjC,MAAMxK,SAAS4d,UAAY,cAC9D,kBAACM,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,IAAD,CAAUN,GAAG,gBAEf,kBAAC,IAAD,CACEM,KAAK,aACLC,UAAWvP,KAEb,kBAAC,IAAD,CACEsP,KAAK,cACLC,UAAWpL,KAEb,kBAAC,IAAD,CACEmL,KAAK,SACLC,UAAW7E,KAEb,kBAAC,IAAD,CACE4E,KAAK,YACLC,UAAWlD,KAEb,kBAAC,IAAD,CACEiD,KAAK,UACLC,UAAWnC,KAEb,kBAAC,IAAD,CACEkC,KAAK,kBACLC,UAAW/B,QAKnB,yBAAKhS,UAAU,e,GApFPG,iBAuGH6T,eACbC,IACA5Z,aAdsB,SAAC,GAAD,IAAGvE,EAAH,EAAGA,IAAH,MAAc,CACpChB,aAAcgB,EAAIhB,aAClBC,gBAAiBe,EAAIf,gBACrBC,MAAOc,EAAId,MACXC,YAAaa,EAAIb,gBAGQ,SAACmL,GAAD,MAAe,CACxCpB,cAAe,kBAAMoB,EAASpB,OAC9BS,gBAAiB,kBAAMW,EAASX,WAGnBuU,CAGbjB,IC/GkBmB,QACW,cAA7Bze,OAAOC,SAASye,UAEe,UAA7B1e,OAAOC,SAASye,UAEhB1e,OAAOC,SAASye,SAASnd,MACvB,2DCNNod,IAASvU,OACP,kBAAC,IAAD,CAAU9J,MAAOA,GACf,kBAAC,IAAD,CAAese,SAAUlW,mCACvB,kBAAC,GAAD,QAGHmW,SAASC,eAAe,SD+GrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtV,MAAK,SAAAuV,GACjCA,EAAaC,kB","file":"static/js/main.ce0d192a.chunk.js","sourcesContent":["import * as types from './types';\r\n\r\nconst initialState = {\r\n  web3Provider: null,\r\n  signedInAddress: '',\r\n  roles: [],\r\n  limitedMode: true,\r\n  loading: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.LOAD_WEB3_MODAL:\r\n      const { web3Provider, signedInAddress, roles, limitedMode } = action.payload;\r\n      return {\r\n        ...state,\r\n        web3Provider,\r\n        signedInAddress,\r\n        roles,\r\n        limitedMode,\r\n        loading: false\r\n      };\r\n    case types.UNLOAD_WEB3_MODAL:\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 1000);\r\n      return {\r\n        ...state,\r\n        web3Provider: null,\r\n        signedInAddress: '',\r\n        roles: [],\r\n        limitedMode: true,\r\n        loading: false\r\n      };\r\n    case types.UPDATE_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default appReducer;","export const LOAD_WEB3_MODAL = 'LOAD_WEB3_MODAL';\r\nexport const UNLOAD_WEB3_MODAL = 'UNLOAD_WEB3_MODAL';\r\nexport const UPDATE_LOADING = 'UPDATE_LOADING';","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport appReducer from './app/reducer';\r\n\r\nconst reducers = combineReducers({\r\n  app: appReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;","import { AbiCoder } from '@ethersproject/abi';\r\nimport { Contract } from '@ethersproject/contracts';\r\nimport convert from 'ether-converter';\r\n\r\nimport addresses from '../contracts/addresses.json';\r\nimport DAOToken from '../contracts/abis/DAOToken.json';\r\nimport Governor from '../contracts/abis/Governor.json';\r\nimport CarbonEmissionsTokenNetwork from '../contracts/abis/CarbonEmissionsTokenNetwork.json';\r\n\r\nconst SUCCESS_MSG = 'Success! Transaction has been submitted to the network. Please wait for confirmation on the blockchain.';\r\nconst EXTRACT_ERROR_MESSAGE = /(?<=\"message\":\")(.*?)(?=\")/g;\r\n\r\nconst PROPOSAL_STATES = [\r\n  'Pending',\r\n  'Active',\r\n  'Canceled',\r\n  'Quorum Failed',\r\n  'Defeated',\r\n  'Succeeded',\r\n  'Queued',\r\n  'Expired',\r\n  'Executed'\r\n];\r\n\r\nexport const TOKEN_TYPES = [\r\n  'Renewable Energy Certificate',\r\n  'Carbon Emissions Offset',\r\n  'Audited Emissions'\r\n]\r\n\r\n/*\r\n *  helper functions\r\n */\r\n\r\nfunction catchError(error) {\r\n  console.error(error.message);\r\n\r\n  // try to extract error message, otherwise return raw error\r\n  let formatted_error;\r\n\r\n  if (error.message.startsWith('invalid ENS name')) {\r\n    formatted_error = 'Missing or invalid parameter.';\r\n  } else if (error.message.startsWith('invalid BigNumber string')) {\r\n    formatted_error = 'Invalid number parameter.';\r\n  } else {\r\n    try {\r\n      let errors = JSON.stringify(error).match(EXTRACT_ERROR_MESSAGE);\r\n      formatted_error = errors[errors.length - 1];\r\n    } catch (e) {\r\n      formatted_error = error.message;\r\n    }\r\n  }\r\n\r\n  return formatted_error;\r\n}\r\n\r\n// Helper function to prevent ambiguous failure message when dates aren't passed\r\nfunction convertToZeroIfBlank(num) {\r\n  return parseInt(num) || 0;\r\n}\r\n\r\nfunction toUnixTime(date) {\r\n  // Return date if not a Date object\r\n  if (Object.prototype.toString.call(date) !== '[object Date]') {\r\n    return date;\r\n  }\r\n  return parseInt((date.getTime() / 1000).toFixed(0));\r\n}\r\n\r\nexport async function getBlockNumber(w3provider) {\r\n  return w3provider.getBlockNumber();\r\n}\r\n\r\nexport function encodeParameters(types, values) {\r\n  const abi = new AbiCoder();\r\n  return abi.encode(types, values);\r\n}\r\n\r\nexport function decodeParameters(types, values) {\r\n  const abi = new AbiCoder();\r\n  return abi.decode(types, values);\r\n}\r\n\r\nexport function formatDate(timestamp) {\r\n  if (timestamp === 0) {\r\n    return 'None';\r\n  } else {\r\n    return new Date(timestamp * 1000).toLocaleString();\r\n  }\r\n}\r\n\r\n/*\r\n *  CarbonEmissionsTokenNetwork contract functions\r\n */\r\n\r\nfunction getTokenNetworkContract(w3provider) {\r\n  return new Contract(addresses[process.env.REACT_APP_NETWORK_NAME].tokenNetwork.address, CarbonEmissionsTokenNetwork.abi, w3provider);\r\n}\r\n\r\nexport async function getRoles(w3provider, address) {\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  try {\r\n    return await contract.getRoles(address);\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport async function getIssuer(w3provider, tokenId) {\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  try {\r\n    return await contract.getIssuer(tokenId);\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport async function getTokenDetails(w3provider, tokenId) {\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  try {\r\n    return await contract.getTokenDetails(tokenId);\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport async function getNumOfUniqueTokens(w3provider) {\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  try {\r\n    return await contract.getNumOfUniqueTokens();\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport async function getAvailableAndRetired(w3provider, address, tokenId) {\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  try {\r\n    return await contract.getAvailableAndRetired(address, tokenId);\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport async function getTokenType(w3provider, tokenId) {\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  try {\r\n    return await contract.getTokenType(tokenId);\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport async function getLimitedMode(w3provider) {\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  try {\r\n    return await contract.limitedMode();\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport async function getAdmin(w3provider) {\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  try {\r\n    return await contract.admin();\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport async function issue(\r\n  w3provider,\r\n  address,\r\n  tokenTypeId,\r\n  quantity,\r\n  fromDate,\r\n  thruDate,\r\n  automaticRetireDate,\r\n  metadata,\r\n  manifest,\r\n  description\r\n) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    await signed.issue(\r\n      address,\r\n      tokenTypeId,\r\n      quantity,\r\n      convertToZeroIfBlank(toUnixTime(fromDate)),\r\n      convertToZeroIfBlank(toUnixTime(thruDate)),\r\n      convertToZeroIfBlank(toUnixTime(automaticRetireDate)),\r\n      metadata,\r\n      manifest,\r\n      description\r\n    );\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function retire(w3provider, tokenId, amount) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    await signed.retire(tokenId, amount);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function transfer(w3provider, address, tokenId, amount) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    await signed.transfer(address, tokenId, amount);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function registerConsumer(w3provider, address) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    await signed.registerConsumer(address);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function unregisterConsumer(w3provider, address) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    await signed.unregisterConsumer(address);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function registerDealer(w3provider, address, tokenTypeId) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    await signed.registerDealer(address, tokenTypeId);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function unregisterDealer(w3provider, address, tokenTypeId) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getTokenNetworkContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    await signed.unregisterDealer(address, tokenTypeId);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\n/*\r\n *  DAO token contract functions\r\n */\r\n\r\nfunction getDAOTokenContract(w3provider) {\r\n  return new Contract(addresses[process.env.REACT_APP_NETWORK_NAME].dao.daoToken.address, DAOToken.abi, w3provider);\r\n}\r\n\r\nexport async function daoTokenBalanceOf(w3provider, account) {\r\n  const contract = getDAOTokenContract(w3provider);\r\n  try {\r\n    const fetchedBalance = await contract.balanceOf(account);\r\n    return convert(fetchedBalance, 'wei', 'ether').toNumber();\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport async function delegate(w3provider, delegatee) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getDAOTokenContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    const delegateCall = await signed.delegate(delegatee);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function delegates(w3provider, address) {\r\n  const contract = getDAOTokenContract(w3provider);\r\n  try {\r\n    return await contract.delegates(address);\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\n/*\r\n *  Governor contract functions\r\n */\r\n\r\nfunction getGovernorContract(w3provider) {\r\n  return new Contract(addresses[process.env.REACT_APP_NETWORK_NAME].dao.governor.address, Governor.abi, w3provider);\r\n}\r\n\r\nexport async function getProposalCount(w3provider) {\r\n  const contract = getGovernorContract(w3provider);\r\n  try {\r\n    return await contract.proposalCount();\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport async function getProposalDetails(w3provider, proposalId) {\r\n  const contract = getGovernorContract(w3provider);\r\n  try {\r\n    return await contract.proposals(proposalId);\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport async function getProposalState(w3provider, proposalId) {\r\n  const contract = getGovernorContract(w3provider);\r\n  try {\r\n    const state = await contract.state(proposalId);\r\n    return PROPOSAL_STATES[state];\r\n  } catch (e) {\r\n    return e.message;\r\n  }\r\n}\r\n\r\nexport async function propose(w3provider, targets, values, signatures, calldatas, description) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getGovernorContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    const proposalCall = await signed.propose(targets, values, signatures, calldatas, description);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    const err = catchError(e);\r\n    console.log(err);\r\n    return err + ' Is your delegatee set?';\r\n  }\r\n}\r\n\r\nexport async function getReceipt(w3provider, proposalId, voter) {\r\n  const contract = getGovernorContract(w3provider);\r\n  try {\r\n    return await contract.getReceipt(proposalId, voter);\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function getActions(w3provider, proposalId) {\r\n  const contract = getGovernorContract(w3provider);\r\n  try {\r\n    return await contract.getActions(proposalId);\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function getDescription(w3provider, proposalId) {\r\n  const contract = getGovernorContract(w3provider);\r\n  try {\r\n    return await contract.getDescription(proposalId);\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function castVote(w3provider, proposalId, support, votes) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getGovernorContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    const castVoteCall = await signed.castVote(proposalId, support, votes);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function queue(w3provider, proposalId) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getGovernorContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    const queueCall = await signed.queue(proposalId);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function execute(w3provider, proposalId) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getGovernorContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    const executeCall = await signed.execute(proposalId);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function cancel(w3provider, proposalId) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getGovernorContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    const cancelCall = await signed.cancel(proposalId);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function refund(w3provider, proposalId) {\r\n  const signer = w3provider.getSigner();\r\n  const contract = getGovernorContract(w3provider);\r\n  const signed = await contract.connect(signer);\r\n  try {\r\n    const refundCall = await signed.refund(proposalId);\r\n    return SUCCESS_MSG;\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function getQuorum(w3provider) {\r\n  const contract = getGovernorContract(w3provider);\r\n  try {\r\n    return await contract.quorumVotes();\r\n  } catch (e) {\r\n    return catchError(e);\r\n  }\r\n}\r\n\r\nexport async function getProposalThreshold(w3provider) {\r\n  const contract = getGovernorContract(w3provider);\r\n  try {\r\n    return await contract.proposalThreshold();\r\n  } catch (error) {\r\n    return catchError(error);\r\n  }\r\n}\r\n","import Web3Modal from 'web3modal';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport WalletConnectProvider from '@walletconnect/web3-provider';\r\nimport Fortmatic from 'fortmatic';\r\nimport Torus from '@toruslabs/torus-embed';\r\nimport Portis from '@portis/web3';\r\nimport Authereum from 'authereum';\r\nimport ethProvider from 'eth-provider';\r\n\r\nimport * as types from './types';\r\nimport { getRoles, getLimitedMode } from '../../helpers/contracts';\r\n\r\nconst web3Modal = new Web3Modal({\r\n  network: 'hardhat',\r\n  cacheProvider: true,\r\n  providerOptions: {\r\n    walletconnect: {\r\n      package: WalletConnectProvider,\r\n      options: {\r\n        infuraId: process.env.REACT_APP_INFURA_PROJECT_ID\r\n      }\r\n    },\r\n    fortmatic: {\r\n      package: Fortmatic,\r\n      options: {\r\n        key: process.env.REACT_APP_FORTMATIC_KEY\r\n      }\r\n    },\r\n    torus: {\r\n      package: Torus,\r\n      // options: {\r\n      //   networkParams: {\r\n      //     host: 'http://localhost:8545',\r\n      //     chainId: 1337,\r\n      //     networkId: 1337\r\n      //   },\r\n      //   config: {\r\n      //     buildEnv: 'development'\r\n      //   }\r\n      // }\r\n    },\r\n    portis: {\r\n      package: Portis,\r\n      options: {\r\n        id: process.env.REACT_APP_PORTIS_ID\r\n      }\r\n    },\r\n    authereum: {\r\n      package: Authereum\r\n    },\r\n    frame: {\r\n      package: ethProvider\r\n    }\r\n  }\r\n});\r\n\r\nexport const loadWeb3Modal = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch(updateLoading(true));\r\n    web3Modal.connect().then(async (provider) => {\r\n      const signedInAddress = provider.selectedAddress;\r\n      const web3Provider = new Web3Provider(provider);\r\n      try {\r\n        const roles = await getRoles(web3Provider, signedInAddress);\r\n        const limitedMode = await getLimitedMode(web3Provider);\r\n        dispatch({\r\n          type: types.LOAD_WEB3_MODAL,\r\n          payload: {\r\n            web3Provider,\r\n            signedInAddress,\r\n            roles,\r\n            limitedMode\r\n          }\r\n        });\r\n      } catch (e) {\r\n        throw e;\r\n      }\r\n    }).catch(e => {\r\n      dispatch(updateLoading(false));\r\n    });\r\n  }\r\n}\r\n\r\nexport const unloadWeb3Modal = () => {\r\n  return (dispatch, getState) => {\r\n    web3Modal.clearCachedProvider();\r\n    dispatch({ type: types.UNLOAD_WEB3_MODAL });\r\n  }\r\n}\r\n\r\nconst updateLoading = (flag) => ({\r\n  type: types.UPDATE_LOADING,\r\n  payload: flag\r\n})","import React, { PureComponent } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadWeb3Modal, unloadWeb3Modal } from '../controllers/app/actions';\r\n\r\nclass WalletButton extends PureComponent {\r\n  render = () => (\r\n    <Button\r\n      variant=\"primary\"\r\n      className=\"ml-1\"\r\n      onClick={() => !this.props.web3Provider ? this.props.loadWeb3Modal() : this.props.unloadWeb3Modal()}\r\n    >\r\n      {!this.props.web3Provider ? 'Connect Wallet' : 'Disconnect Wallet'}\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider\r\n});\r\n\r\nconst mapDispatchToProps = (dispacth) => ({\r\n  loadWeb3Modal: () => dispacth(loadWeb3Modal()),\r\n  unloadWeb3Modal: () => dispacth(unloadWeb3Modal())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletButton);","import React, { Fragment, Component } from 'react';\r\nimport { Nav, Navbar, OverlayTrigger, Row, Tooltip } from 'react-bootstrap';\r\nimport { FaGithub, FaRegClipboard } from 'react-icons/fa';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { isEqual } from 'lodash/fp';\r\nimport { connect } from 'react-redux';\r\n\r\nimport WalletButton from '../components/WalletButton';\r\n\r\nclass NavigationBar extends Component {\r\n  state = {\r\n    role: ''\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    // if roles are fetched and (the display role is empty or cached roles differ from current roles), find the correct string to display\r\n    if (this.props.roles.length === 5 && (this.state.role === '' || !isEqual(this.props.roles, prevProps.roles))) {\r\n      if (this.props.roles[0] === true) {\r\n        this.setState({ role: 'Admin (superuser)' });\r\n      } else if (this.props.roles[1] === true) {\r\n        this.setState({ role: 'REC Dealer' });\r\n      } else if (this.props.roles[2] === true) {\r\n        this.setState({ role: 'Offset Dealer' });\r\n      } else if (this.props.roles[3] === true) {\r\n        this.setState({ role: 'Emissions Auditor' });\r\n      } else if (this.props.roles[4] === true) {\r\n        this.setState({ role: 'Consumer' });\r\n      } else {\r\n        this.setState({ role: 'Unregistered' });\r\n      }\r\n    }\r\n  }\r\n\r\n  truncateAddress(addr) {\r\n    const prefix = addr.substring(0, 6); // including \"0x\"\r\n    const suffix = addr.substring(addr.length - 4);\r\n    return `${prefix}...${suffix}`;\r\n  }\r\n\r\n  render = () => (\r\n    <Navbar bg=\"white\" expand=\"md\" className=\"m-2\">\r\n      <Navbar.Brand>Carbon Emissions Token Network</Navbar.Brand>\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"https://github.com/bitfriend/carbon-emissions-token-network-hardhat\">\r\n            <FaGithub />\r\n          </Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          {!!this.props.signedInAddress && (\r\n            <Fragment>\r\n              <Nav.Item style={{ padding: '0 1.2rem' }}>\r\n                <Row className=\"d-flex justify-content-center\">\r\n                  <span className={this.state.role === 'Unregistered' ? 'text-danger' : 'text-success'}>{this.state.role}</span>\r\n                </Row>\r\n                <Row className=\"d-flex justify-content-center\">\r\n                  <span className=\"text-secondary\">{process.env.REACT_APP_NETWORK_NAME}</span>\r\n                </Row>\r\n                {this.props.limitedMode && (\r\n                  <Row className=\"d-flex justify-content-center\">\r\n                    <span className=\"text-danger\">Limited mode</span>\r\n                  </Row>\r\n                )}\r\n              </Nav.Item>\r\n              <Nav.Item style={{ padding: '.5rem .5rem' }}>\r\n                <span className=\"text-secondary\">{this.truncateAddress(this.props.signedInAddress)}</span>\r\n                <CopyToClipboard text={this.props.signedInAddress}>\r\n                  <span className=\"text-secondary\">\r\n                    <OverlayTrigger\r\n                      trigger=\"click\"\r\n                      placement=\"bottom\"\r\n                      rootClose\r\n                      delay={{ show: 250, hide: 400 }}\r\n                      overlay={(props) => (\r\n                        <Tooltip {...props}>Copied to clipboard!</Tooltip>\r\n                      )}\r\n                    >\r\n                      <span style={{ cursor: 'pointer' }}>&nbsp;<FaRegClipboard /></span>\r\n                    </OverlayTrigger>\r\n                  </span>\r\n                </CopyToClipboard>\r\n              </Nav.Item>\r\n            </Fragment>\r\n          )}\r\n          <WalletButton />\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  signedInAddress: app.signedInAddress,\r\n  roles: app.roles,\r\n  limitedMode: app.limitedMode\r\n});\r\n\r\nexport default connect(mapStateToProps)(NavigationBar);","import React, { PureComponent } from 'react';\r\nimport { Button, Col, Modal, ModalBody, ModalFooter, ModalTitle, Row, Table } from 'react-bootstrap';\r\nimport { FaCoins } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass TokenInfoModal extends PureComponent {\r\n  render = () => {\r\n    const { token, onHide, children, ...rest } = this.props;\r\n    return (\r\n      <Modal {...rest} centered size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <ModalTitle >Token Details</ModalTitle>\r\n        </Modal.Header>\r\n        <ModalBody>\r\n          <Row className=\"mt-2 mb-4 mr-3\">\r\n            {/* Available and retired balances */}\r\n            {token.showIssueeBalance ? (\r\n              <Col className=\"col-5 offset-1 text-right\">\r\n                <h5 className=\"text-secondary\">Issuee's Available Balance</h5>\r\n                <h1>{token.issueeAvailableBalance}</h1>\r\n                <h5 className=\"text-secondary\">Issuee's Retired Balance</h5>\r\n                <h2>{token.issueeRetiredBalance}</h2>\r\n              </Col>\r\n            ) : (\r\n              <Col className=\"col-4 offset-1 text-right\">\r\n                <h5 className=\"text-secondary\">Available Balance</h5>\r\n                <h1>{token.availableBalance}</h1>\r\n                <h5 className=\"text-secondary\">Retired Balance</h5>\r\n                <h2>{token.retiredBalance}</h2>\r\n              </Col>\r\n            )}\r\n\r\n            {/* token ID, icon, and type */}\r\n            <Col className=\"col-3\">\r\n              <Row className=\"text-center\">\r\n                <Col>\r\n                  <h3 className=\"mb-1 mt-2\">ID: {token.tokenId}</h3>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"text-center\">\r\n                <Col>\r\n                  <h1 className=\"display-4\">\r\n                    <FaCoins />\r\n                  </h1>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"text-center mt-1\">\r\n                <Col>\r\n                  <small className=\"text-secondary text-uppercase\">\r\n                    {token.tokenType}\r\n                  </small>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n\r\n            {/* transfer and retire buttons (enabled if available balance) */}\r\n            {!token.showIssueeBalance && (\r\n              <Col className=\"col-3\">\r\n                <br />\r\n                <Row className=\"text-left mb-2\">\r\n                  <Col>\r\n                    <Button\r\n                      variant=\"success\"\r\n                      href={`/transfer?tokenId=${token.tokenId}`}\r\n                      disabled={Number(token.availableBalance) <= 0}\r\n                    >\r\n                      Transfer\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"text-left mb-2\">\r\n                  <Col>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      href={`/retire?tokenId=${token.tokenId}`}\r\n                      disabled={Number(token.availableBalance) <= 0}\r\n                    >\r\n                      Retire\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Property</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Issuer</td>\r\n                <td className=\"text-monospace\">{token.issuer}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Issuee</td>\r\n                <td className=\"text-monospace\">{token.issuee}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>From date</td>\r\n                <td>{token.fromDate}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Thru date</td>\r\n                <td>{token.thruDate}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Automatic retire date</td>\r\n                <td>{token.automaticRetireDate}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Metadata</td>\r\n                <td className=\"text-monospace\" style={{ wordWrap: 'anywhere' }}>\r\n                  {token.metadata}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Manifest</td>\r\n                <td>{token.manifest}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Description</td>\r\n                <td>{token.description}</td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button onClick={onHide}>Close</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nTokenInfoModal.propTypes = {\r\n  token: PropTypes.object,\r\n  onHide: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider\r\n});\r\n\r\nexport default connect(mapStateToProps)(TokenInfoModal);","import React, { Fragment, PureComponent } from 'react';\r\nimport { Spinner, Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TokenInfoModal from '../components/TokenInfoModal';\r\nimport {\r\n  formatDate,\r\n  getAvailableAndRetired,\r\n  getNumOfUniqueTokens,\r\n  getTokenDetails\r\n} from '../helpers/contracts';\r\n\r\nclass Dashboard extends PureComponent {\r\n  state = {\r\n    modalVisible: false,\r\n    selectedToken: {},\r\n    myBalances: [],\r\n    myIssuedTokens: [],\r\n    fetchingTokens: false,\r\n    error: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.web3Provider) {\r\n      this.fetchBalances();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (!prevProps.web3Provider && this.props.web3Provider) {\r\n      this.fetchBalances();\r\n    }\r\n  }\r\n\r\n  async fetchBalances() {\r\n    const myBalances = [];\r\n    const myIssuedTokens = [];\r\n\r\n    try {\r\n      // First, fetch number of unique tokens\r\n      const numOfUniqueTokens = await getNumOfUniqueTokens(this.props.web3Provider);\r\n\r\n      // Iterate over each tokenId and find balance of signed in address\r\n      for (let i = 1; i <= numOfUniqueTokens.toNumber(); i++) {\r\n        // Fetch token details\r\n        const tokenDetails = await getTokenDetails(this.props.web3Provider, i);\r\n\r\n        // Format unix times to Date objects\r\n        const fromDate = formatDate(tokenDetails.fromDate.toNumber());\r\n        const thruDate = formatDate(tokenDetails.thruDate.toNumber());\r\n        const automaticRetireDate = formatDate(tokenDetails.automaticRetireDate.toNumber());\r\n\r\n        // Format tokenType from tokenTypeId\r\n        const tokenTypes = [\r\n          'Renewable Energy Certificate',\r\n          'Carbon Emissions Offset',\r\n          'Audited Emissions'\r\n        ];\r\n\r\n        // Fetch available and retired balances\r\n        const balances = await getAvailableAndRetired(\r\n          this.props.web3Provider,\r\n          this.props.signedInAddress,\r\n          i\r\n        );\r\n        let availableBalance = balances[0].toNumber();\r\n        let retiredBalance = balances[1].toNumber();\r\n\r\n        // Format decimal points for audited emissions tokens\r\n        if (tokenDetails.tokenTypeId === 3) {\r\n          availableBalance = (availableBalance / 1000).toFixed(3);\r\n          retiredBalance = (retiredBalance / 1000).toFixed(3);\r\n        }\r\n\r\n        const token = {\r\n          tokenId: tokenDetails.tokenId.toNumber(),\r\n          tokenType: tokenTypes[tokenDetails.tokenTypeId - 1],\r\n          availableBalance,\r\n          retiredBalance,\r\n          issuer: tokenDetails.issuer,\r\n          issuee: tokenDetails.issuee,\r\n          fromDate,\r\n          thruDate,\r\n          automaticRetireDate,\r\n          metadata: tokenDetails.metadata,\r\n          manifest: tokenDetails.manifest,\r\n          description: tokenDetails.description,\r\n        };\r\n\r\n        // Push token to myBalances or myIssuedTokens in state\r\n        if (token.availableBalance > 0 || token.retiredBalance > 0) {\r\n          myBalances.push({ ...token });\r\n          console.log('myBalances pushed -> ', myBalances);\r\n        }\r\n        if (token.issuer.toLowerCase() === this.props.signedInAddress.toLowerCase()) {\r\n          myIssuedTokens.push(token);\r\n          const issueeBalances = await getAvailableAndRetired(\r\n            this.props.web3Provider,\r\n            tokenDetails.issuee,\r\n            i\r\n          );\r\n          token.issueeAvailableBalance = issueeBalances[0].toNumber();\r\n          token.issueeRetiredBalance = issueeBalances[1].toNumber();\r\n          token.showIssueeBalance = true;\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setState({ error: 'Could not connect to contract on the selected network. Check your wallet provider settings.' });\r\n    }\r\n\r\n    this.setState({\r\n      myBalances,\r\n      myIssuedTokens,\r\n      fetchingTokens: false,\r\n      error: ''\r\n    });\r\n  }\r\n\r\n  handleOpenTokenInfoModal = (token) => this.setState({\r\n    selectedToken: token,\r\n    modalVisible: true\r\n  })\r\n\r\n  pointerHover = (e) => {\r\n    e.target.style.cursor = 'pointer';\r\n  }\r\n\r\n  render() {\r\n    const isDealer = (this.props.roles.length > 0 && (this.props.roles[0] || this.props.roles[1] || this.props.roles[2] || this.props.roles[3]));\r\n    return (\r\n      <Fragment>\r\n        <TokenInfoModal\r\n          show={this.state.modalVisible}\r\n          token={this.state.selectedToken}\r\n          onHide={() => this.setState({\r\n            modalVisible: false,\r\n            selectedToken: {}\r\n          })}\r\n        />\r\n\r\n        <h2>Dashboard</h2>\r\n        <p className=\"mb-1\">View your token balances and tokens you've issued.</p>\r\n\r\n        <p className=\"text-danger\">{this.state.error}</p>\r\n\r\n        <div className={this.state.fetchingTokens ? 'dimmed' : ''}>\r\n\r\n          {this.state.fetchingTokens && (\r\n            <div className=\"text-center my-4\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          )}\r\n\r\n          {!!this.props.signedInAddress &&\r\n            <div className=\"mb-4\">\r\n              <h4>Your Tokens</h4>\r\n              <Table hover size=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Type</th>\r\n                    <th>Balance</th>\r\n                    <th>Retired</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {(this.state.myBalances.length !== 0 && !this.state.fetchingTokens) && this.state.myBalances.map(token => (\r\n                    <tr\r\n                      key={token.tokenId}\r\n                      onClick={() => this.handleOpenTokenInfoModal(token)}\r\n                      onMouseOver={this.pointerHover}\r\n                      className={Number(token.availableBalance) <= 0 ? 'table-secondary' : ''}\r\n                    >\r\n                      <td>{token.tokenId}</td>\r\n                      <td>{token.tokenType}</td>\r\n                      <td>{token.availableBalance}</td>\r\n                      <td>{token.retiredBalance}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          }\r\n\r\n          {/* Only display issued tokens if owner or dealer */}\r\n          {isDealer && (\r\n            <div className=\"mt-4\">\r\n              <h4>Tokens You've Issued</h4>\r\n              <Table hover size=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>Type</th>\r\n                    <th>Description</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {(this.state.myIssuedTokens.length !== 0 && !this.state.fetchingTokens) && this.state.myIssuedTokens.map(token => (\r\n                    <tr\r\n                      key={token.tokenId}\r\n                      onClick={() => this.handleOpenTokenInfoModal(token)}\r\n                      onMouseOver={this.pointerHover}\r\n                    >\r\n                      <td>{token.tokenId}</td>\r\n                      <td>{token.tokenType}</td>\r\n                      <td>{token.description}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider,\r\n  signedInAddress: app.signedInAddress,\r\n  roles: app.roles,\r\n  limitedMode: app.limitedMode\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React, { Fragment, PureComponent } from 'react';\r\nimport { Button, Form, Modal, Spinner } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { cancel, execute, queue } from '../helpers/contracts';\r\n\r\nclass QueueExecuteProposalModal extends PureComponent {\r\n  state = {\r\n    result: '',\r\n    isSubmitting: false\r\n  }\r\n\r\n  handleAction = () => {\r\n    switch (this.props.type) {\r\n      case 'queue':\r\n        this.submitQueue();\r\n        return;\r\n      case 'execute':\r\n        this.submitExecute();\r\n        return;\r\n      case 'cancel':\r\n        this.submitCancel();\r\n        return;\r\n      default:\r\n        console.log('Invalid action type');\r\n        return;\r\n    }\r\n  }\r\n\r\n  async submitQueue() {\r\n    this.setState({ isSubmitting: true });\r\n    try {\r\n      const queueCall = await queue(\r\n        this.props.web3Provider,\r\n        this.props.id\r\n      );\r\n      this.setState({\r\n        result: queueCall.toString(),\r\n        isSubmitting: false\r\n      });\r\n    } catch (e) {\r\n      this.setState({\r\n        result: e.message,\r\n        isSubmitting: false\r\n      });\r\n    }\r\n  }\r\n\r\n  async submitExecute() {\r\n    this.setState({ isSubmitting: true });\r\n    try {\r\n      const executeCall = await execute(\r\n        this.props.web3Provider,\r\n        this.props.id\r\n      );\r\n      this.setState({\r\n        result: executeCall.toString(),\r\n        isSubmitting: false\r\n      });\r\n    } catch (e) {\r\n      this.setState({\r\n        result: e.message,\r\n        isSubmitting: false\r\n      });\r\n    }\r\n  }\r\n\r\n  async submitCancel() {\r\n    this.setState({ isSubmitting: true });\r\n    try {\r\n      const cancelCall = await cancel(\r\n        this.props.web3Provider,\r\n        this.props.id\r\n      );\r\n      this.setState({\r\n        result: cancelCall.toString(),\r\n        isSubmitting: false\r\n      });\r\n    } catch (e) {\r\n      this.setState({\r\n        result: e.message,\r\n        isSubmitting: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id, type, onHide, children, ...rest } = this.props;\r\n    return (\r\n      <Modal {...rest} centered size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <ActionTitle type={type}></ActionTitle>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ActionDescription type={type}></ActionDescription>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Proposal ID</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                disabled\r\n                value={id}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n          {this.state.isSubmitting && (\r\n            <div className=\"text-center mt-3\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          )}\r\n          {!!this.state.result && (\r\n            <p className=\"mt-3\">{this.state.result}</p>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={onHide}>Close</Button>\r\n          <ActionButton\r\n            type={type}\r\n            provider={this.props.web3Provider}\r\n            onClick={this.handleAction}\r\n          />\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nQueueExecuteProposalModal.propTypes = {\r\n  id: PropTypes.any,\r\n  type: PropTypes.string,\r\n  onHide: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider\r\n});\r\n\r\nexport default connect(mapStateToProps)(QueueExecuteProposalModal);\r\n\r\n// Renders appropriate button (queue, execute, or cancel)\r\n\r\nclass ActionButton extends PureComponent {\r\n  render() {\r\n    switch (this.props.type) {\r\n      case 'queue':\r\n        return <Button variant=\"warning\" onClick={this.props.onClick}>Queue</Button>;\r\n      case 'execute':\r\n        return <Button variant=\"success\" onClick={this.props.onClick}>Execute</Button>;\r\n      case 'cancel':\r\n        return <Button variant=\"danger\" onClick={this.props.onClick}>Cancel proposal</Button>;\r\n      default:\r\n        console.log('Invalid action type');\r\n        return <Fragment>Invalid action type</Fragment>;\r\n    }\r\n  }\r\n}\r\n\r\nActionButton.propTypes = {\r\n  type: PropTypes.string,\r\n  onClick: PropTypes.func\r\n}\r\n\r\n// Renders appropriate description\r\n\r\nclass ActionDescription extends PureComponent {\r\n  render() {\r\n    switch (this.props.type) {\r\n      case 'queue':\r\n        return <p>Queue a proposal. A proposal must have <b>succeeded</b> in order to be queued by a DAO token holder.</p>;\r\n      case 'execute':\r\n        return <p>Execute a proposal. A proposal must be <b>queued</b> before being executed by a DAO token holder.</p>;\r\n      case 'cancel':\r\n        return <p>Cancel an active proposal.</p>;\r\n      default:\r\n        return <Fragment></Fragment>;\r\n    }\r\n  }\r\n}\r\n\r\nActionDescription.propTypes = {\r\n  type: PropTypes.string\r\n}\r\n\r\n// Renders appropriate title\r\n\r\nclass ActionTitle extends PureComponent {\r\n  render() {\r\n    switch (this.props.type) {\r\n      case 'queue':\r\n        return 'Queue a proposal for execution';\r\n      case 'execute':\r\n        return 'Execute a queued proposal';\r\n      case 'cancel':\r\n        return 'Cancel an active proposal';\r\n      default:\r\n        return <Fragment></Fragment>;\r\n    }\r\n  }\r\n}\r\n\r\nActionTitle.propTypes = {\r\n  type: PropTypes.string\r\n}","import React, { PureComponent } from 'react';\r\nimport { Button, Form, Modal, Spinner } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { delegate } from '../helpers/contracts';\r\n\r\nclass DelegateDAOTokensModal extends PureComponent {\r\n  state = {\r\n    delegatee: '',\r\n    result: '',\r\n    isSubmitting: false\r\n  }\r\n\r\n  submitDelegate = async () => {\r\n    this.setState({ isSubmitting: true });\r\n    try {\r\n      const delegateCall = await delegate(\r\n        this.props.web3Provider,\r\n        this.state.delegatee\r\n      );\r\n      this.setState({\r\n        result: delegateCall.toString(),\r\n        isSubmitting: false\r\n      });\r\n    } catch (e) {\r\n      this.setState({\r\n        result: e.message,\r\n        isSubmitting: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDelegateeChange = (event) => this.setState({\r\n    delegatee: event.target.value\r\n  })\r\n\r\n  render() {\r\n    const { title, balance, onHide, children, ...rest } = this.props;\r\n    return (\r\n      <Modal {...rest} centered size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Delegate your vote to an address using your DAO token balance of <span className=\"text-success\">{balance}</span> as your voting power. Must be a registered consumer, and you can delegate to yourself.</p>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Delegatee</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"0x000...\"\r\n                onChange={this.handleDelegateeChange}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Please check to make sure the delegatee address is a registered consumer.\r\n              </Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n          {this.state.isSubmitting && (\r\n            <div className=\"text-center mt-3\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          )}\r\n          {!!this.state.result && (\r\n            <p className=\"mt-3\">{this.state.result}</p>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={onHide}>Close</Button>\r\n          <Button\r\n            onClick={this.submitDelegate}\r\n            variant=\"success\"\r\n          >\r\n            Delegate\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nDelegateDAOTokensModal.propTypes = {\r\n  title: PropTypes.string,\r\n  balance: PropTypes.any,\r\n  onHide: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider\r\n});\r\n\r\nexport default connect(mapStateToProps)(DelegateDAOTokensModal);","import React, { PureComponent } from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { TOKEN_TYPES, decodeParameters, formatDate } from '../helpers/contracts';\r\n\r\nclass ProposalCallDetailsModal extends PureComponent {\r\n  state = {\r\n    decoded: {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDecodedParameters(0);\r\n  }\r\n\r\n  async fetchDecodedParameters(actionNumber) {\r\n    const regExp = /\\(([^)]+)\\)/;\r\n    const matches = regExp.exec(this.props.actions.signatures[actionNumber]);\r\n    const types = matches[1].split(\",\");\r\n    const decodedCall = await decodeParameters(types, this.props.actions.calldatas[actionNumber]);\r\n    const decoded = {\r\n      address: decodedCall[0],\r\n      proposer: decodedCall[1],\r\n      tokenType: TOKEN_TYPES[decodedCall[2]-1],\r\n      quantity: decodedCall[3].toNumber(),\r\n      fromDate: formatDate(decodedCall[4].toNumber()),\r\n      thruDate: formatDate(decodedCall[5].toNumber()),\r\n      automaticRetireDate: formatDate(decodedCall[6].toNumber()),\r\n      metadata: decodedCall[7],\r\n      manifest: decodedCall[8],\r\n      description: decodedCall[9]\r\n    };\r\n    this.setState({ decoded });\r\n  }\r\n\r\n  render() {\r\n    const { title, actions, onHide, children, ...rest } = this.props;\r\n    return (\r\n      <Modal {...rest} centered size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>If passed, this is the contract call that the DAO will make when the proposal is queued and executed.</p>\r\n          <Form>\r\n            {/* <Form.Group> */}\r\n            {/*   <Form.Label>Target</Form.Label> */}\r\n            {/*   <Form.Text>{props.actions.targets}</Form.Text> */}\r\n            {/* </Form.Group> */}\r\n            <Form.Group>\r\n              <Form.Label>Function signature</Form.Label>\r\n              <Form.Text>{actions.signatures}</Form.Text>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Function parameters</Form.Label>\r\n              <Form.Text>Address to issue to: {this.state.decoded.address}</Form.Text>\r\n              <Form.Text>Issuer/proposer: {this.state.decoded.proposer}</Form.Text>\r\n              <Form.Text>Token type: {this.state.decoded.tokenType}</Form.Text>\r\n              <Form.Text>Quantity of tokens: {this.state.decoded.quantity}</Form.Text>\r\n              <Form.Text>From date: {this.state.decoded.fromDate}</Form.Text>\r\n              <Form.Text>Through date: {this.state.decoded.thruDate}</Form.Text>\r\n              <Form.Text>Automatic retire date: {this.state.decoded.automaticRetireDate}</Form.Text>\r\n              <Form.Text>Metadata: {this.state.decoded.metadata}</Form.Text>\r\n              <Form.Text>Manifest: {this.state.decoded.manifest}</Form.Text>\r\n              <Form.Text>Description: {this.state.decoded.description}</Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nProposalCallDetailsModal.propTypes = {\r\n  title: PropTypes.string,\r\n  actions: PropTypes.shape({\r\n    signatures: PropTypes.array,\r\n    calldatas: PropTypes.array\r\n  }),\r\n  onHide: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProposalCallDetailsModal);","import React, { Fragment, PureComponent } from 'react';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  FormControl,\r\n  InputGroup,\r\n  Row,\r\n  Spinner\r\n} from 'react-bootstrap';\r\nimport { isEmpty, isEqual } from 'lodash/fp';\r\nimport { JsonRpcProvider } from '@ethersproject/providers';\r\nimport convert from 'ether-converter';\r\nimport BigNumber from 'bignumber.js';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  castVote,\r\n  daoTokenBalanceOf,\r\n  delegates,\r\n  getActions,\r\n  getBlockNumber,\r\n  getDescription,\r\n  getProposalCount,\r\n  getProposalDetails,\r\n  getProposalState,\r\n  getProposalThreshold,\r\n  getQuorum,\r\n  getReceipt,\r\n  refund\r\n} from '../helpers/contracts';\r\n\r\nimport QueueExecuteProposalModal from '../components/QueueExecuteProposalModal';\r\nimport DelegateDAOTokensModal from '../components/DelegateDAOTokensModal';\r\nimport ProposalCallDetailsModal from '../components/ProposalCallDetailsModal';\r\n\r\nconst supply = 10000000; // 10 million total DAO tokens\r\n\r\nconst fmt = {\r\n  groupSeparator: ',',\r\n  groupSize: 3\r\n};\r\n\r\nclass GovernanceDashboard extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      queueExecuteModalShow: false,\r\n      delegateModalShow: false,\r\n      callDetailsModalShow: false,\r\n      daoTokenBalance: -1,\r\n      daoTokenDelegates: null,\r\n      fetchingDaoTokenBalance: false,\r\n      proposals: [],\r\n      proposalsLength: -1,\r\n      fetchingProposals: false,\r\n      blockNumber: -1,\r\n      fetchingBlockNumber: false,\r\n      isFetchingBlocks: false,\r\n      result: '',\r\n      skipBlocksAmount: '',\r\n      proposalActionType: '',\r\n      proposalActionId: 1,\r\n      votesAmount: 0,\r\n      selectedProposalIdDetails: 1,\r\n      hasRole: false,\r\n      quorum: -1,\r\n      fetchingQuorum: false,\r\n      proposalThreshold: -1,\r\n      fetchingProposalThreshold: false\r\n    };\r\n    this.percentOfSupply = ((this.state.daoTokenBalance / supply) * 100).toFixed(2);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!isEmpty(this.props.roles)) {\r\n      this.setState({\r\n        hasRole: this.props.roles.some(e => e === true)\r\n      });\r\n    }\r\n    if (this.props.web3Provider && !!this.props.signedInAddress) {\r\n      this.fetchDaoTokenBalance();\r\n      this.fetchProposals();\r\n    }\r\n    if (this.props.web3Provider) {\r\n      this.fetchBlockNumber();\r\n      this.fetchQuorum();\r\n      this.fetchProposalThreshold();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (isEmpty(prevProps.roles) && !isEmpty(this.props.roles)) {\r\n      if (!this.state.hasRole) {\r\n        this.setState({\r\n          hasRole: this.props.roles.some(e => e === true)\r\n        });\r\n      }\r\n    } else if (!isEmpty(prevProps.roles) && isEmpty(this.props.roles)) {\r\n      this.setState({\r\n        hasRole: false\r\n      });\r\n    }\r\n    if ((!prevProps.web3Provider && this.props.web3Provider) && (!prevProps.signedInAddress && !!this.props.signedInAddress)) {\r\n      if (this.state.daoTokenBalance === -1 && !this.state.fetchingDaoTokenBalance) {\r\n        this.fetchDaoTokenBalance();\r\n      }\r\n      if (this.state.proposalsLength === -1 && !this.state.fetchingProposals) {\r\n        this.fetchProposals();\r\n      }\r\n    } else if ((prevProps.web3Provider && !this.props.web3Provider) && (!!prevProps.signedInAddress && !this.props.signedInAddress)) {\r\n      this.setState({\r\n        daoTokenBalance: -1,\r\n        proposalsLength: -1\r\n      });\r\n    }\r\n    if (!prevProps.web3Provider && this.props.web3Provider) {\r\n      if (this.state.blockNumber === -1 && !this.state.fetchingBlockNumber) {\r\n        this.fetchBlockNumber();\r\n      }\r\n      if (this.state.quorum === -1 && !this.state.fetchingQuorum) {\r\n        this.fetchQuorum();\r\n      }\r\n      if (this.state.proposalThreshold === -1 && !this.state.fetchingProposalThreshold) {\r\n        this.fetchProposalThreshold();\r\n      }\r\n    } else if (prevProps.web3Provider && !this.props.web3Provider) {\r\n      this.setState({\r\n        blockNumber: -1,\r\n        quorum: -1,\r\n        proposalThreshold: -1\r\n      });\r\n    }\r\n  }\r\n\r\n  onSkipBlocksAmountChange = (event) => this.setState({\r\n    skipBlocksAmount: event.target.value\r\n  })\r\n\r\n  onVotesAmountChange = (event) => this.setState({\r\n    votesAmount: event.target.value\r\n  })\r\n\r\n  async handleSkipBlocks(blocks) {\r\n    const localProvider = new JsonRpcProvider();\r\n    let cnt;\r\n    try {\r\n      cnt = parseInt(blocks, 10);\r\n    } catch (e) {\r\n      console.error('Must enter a valid integer of blocks to skip on local EVM network.');\r\n      return;\r\n    }\r\n    this.setState({ isFetchingBlocks: true });\r\n    let { blockNumber } = this.state;\r\n    for (let i = 0; i < cnt; i++) {\r\n      await localProvider.send('evm_mine');\r\n      blockNumber++;\r\n      this.setState({ blockNumber });\r\n    }\r\n    this.setState({\r\n      isFetchingBlocks: false,\r\n      result: `Skipped ${blocks} blocks. Please refresh in a few seconds to see the updated current block!`\r\n    });\r\n  }\r\n\r\n  async handleSkipTimestamp(days) {\r\n    const localProvider = new JsonRpcProvider();\r\n    const seconds = (days * 24 * 60 * 60); // 1 day\r\n    await localProvider.send('evm_increaseTime', [seconds]);\r\n    await localProvider.send('evm_mine');\r\n    this.setState({\r\n      result: `Added ${days} days to block timestamp. No need to refresh!`\r\n    });\r\n  }\r\n\r\n  async fetchDaoTokenBalance() {\r\n    this.setState({ fetchingDaoTokenBalance: true });\r\n    const daoTokenBalance = await daoTokenBalanceOf(this.props.web3Provider, this.props.signedInAddress);\r\n    const delegatesCall = await delegates(this.props.web3Provider, this.props.signedInAddress);\r\n    const daoTokenDelegates = delegatesCall.toLowerCase() !== this.props.signedInAddress.toLowerCase() ? delegatesCall : 'You'; // just display first address for now, @TODO display multisig delegatees\r\n    this.setState({\r\n      daoTokenBalance,\r\n      daoTokenDelegates,\r\n      fetchingDaoTokenBalance: false\r\n    });\r\n  }\r\n\r\n  async fetchBlockNumber() {\r\n    this.setState({ fetchingBlockNumber: false });\r\n    const blockNumber = await getBlockNumber(this.props.web3Provider);\r\n    this.setState({\r\n      blockNumber,\r\n      fetchingBlockNumber: false\r\n    });\r\n  }\r\n\r\n  async fetchQuorum() {\r\n    this.setState({ fetchingQuorum: true });\r\n    const q = await getQuorum(this.props.web3Provider);\r\n    const quorum = convert(q.toString(), 'wei', 'gwei');\r\n    const v = new BigNumber(quorum).toFormat(fmt);\r\n    this.setState({\r\n      quorum: new BigNumber(quorum).toFormat(fmt),\r\n      fetchingQuorum: false\r\n    });\r\n  }\r\n\r\n  async fetchProposalThreshold() {\r\n    this.setState({ fetchingProposalThreshold: true });\r\n    const t = await getProposalThreshold(this.props.web3Provider);\r\n    const threshold = convert(t.toString(), 'wei', 'ether');\r\n    this.setState({\r\n      proposalThreshold: new BigNumber(threshold).toFormat(fmt),\r\n      fetchingProposalThreshold: false\r\n    });\r\n  }\r\n\r\n  async fetchProposals() {\r\n    const numberOfProposals = await getProposalCount(this.props.web3Provider);\r\n    const p = [];\r\n\r\n    for (let i = numberOfProposals; i > 0; i--) {\r\n      let i_toNumberFix;\r\n      try {\r\n        i_toNumberFix = i.toNumber();\r\n      } catch (e) {\r\n        i_toNumberFix = i;\r\n      }\r\n\r\n      const proposalDetails = await getProposalDetails(this.props.web3Provider, i);\r\n      const proposalState = await getProposalState(this.props.web3Provider, i);\r\n      const proposalDescription = await getDescription(this.props.web3Provider, i);\r\n      const proposalActions = await getActions(this.props.web3Provider, i);\r\n\r\n      const decimals = new BigNumber('1000000000');\r\n      const decimalsRaw = '1000000000000000000';\r\n      const forVotes = proposalDetails[5].div(decimals).toNumber();\r\n      const againstVotes = proposalDetails[6].div(decimals).toNumber();\r\n      const rawForVotes = proposalDetails[7].div(decimalsRaw).toNumber();\r\n      const rawAgainstVotes = proposalDetails[8].div(decimalsRaw).toNumber();\r\n\r\n      // get votes for signed in user\r\n      const proposalReceipt = await getReceipt(this.props.web3Provider, i, this.props.signedInAddress);\r\n      let refundProposal = new BigNumber('0').toNumber();\r\n\r\n      if (proposalState === 'Active' || proposalState === 'Quorum Failed') {\r\n        refundProposal = proposalReceipt[3].div(decimalsRaw).toNumber();\r\n      }\r\n\r\n      if (this.props.signedInAddress.toLowerCase() === proposalDetails[1].toLowerCase()) {\r\n        const proposalThreshold = (await getProposalThreshold(this.props.web3Provider)).div(decimalsRaw).toNumber();\r\n        const currentVotes = proposalReceipt[3].div(decimalsRaw).toNumber()\r\n        if (proposalState === 'Succeeded') {\r\n          refundProposal = new BigNumber(currentVotes + proposalThreshold).mul(3).div(2).toNumber();\r\n        } else if (proposalState === 'Canceled' || proposalState === 'Quorum Failed') {\r\n          refundProposal = new BigNumber(currentVotes + proposalThreshold).mul(3).div(4).toNumber();\r\n        }\r\n      }\r\n\r\n      const proposalIsEligibleToVote = (proposalState === 'Active' && this.state.daoTokenBalance > 0);\r\n\r\n      p.push({\r\n        id: i_toNumberFix,\r\n        details: {\r\n          proposer: proposalDetails[1],\r\n          forVotes: forVotes,\r\n          againstVotes: againstVotes,\r\n          rawForVotes: rawForVotes,\r\n          rawAgainstVotes: rawAgainstVotes,\r\n          startBlock: proposalDetails[3].toNumber() + 1,\r\n          endBlock: proposalDetails[4].toNumber()\r\n        },\r\n        state: proposalState,\r\n        actions: proposalActions,\r\n        receipt: {\r\n          hasVoted: proposalReceipt[0],\r\n          hasVotesRefunded: proposalReceipt[4],\r\n          hasStakeRefunded: proposalReceipt[5],\r\n          support: proposalReceipt[1],\r\n          votes: proposalReceipt[2].div(decimals).toString(),\r\n          rawVotes: proposalReceipt[3].div(decimalsRaw),\r\n          rawRefund: refundProposal\r\n        },\r\n        description: proposalDescription,\r\n        isEligibleToVote: proposalIsEligibleToVote\r\n      });\r\n    }\r\n\r\n    console.log(p);\r\n\r\n    this.setState({\r\n      proposals: p,\r\n      proposalsLength: p.length || 0,\r\n      fetchingProposals: false\r\n    });\r\n  }\r\n\r\n  async vote(proposalId, support) {\r\n    const convertedVotes = convert(this.state.votesAmount, 'ether', 'wei');\r\n    const vote = await castVote(this.props.web3Provider, proposalId, support, convertedVotes);\r\n    this.setState({ result: vote });\r\n  }\r\n\r\n  async refundDclm8(proposalId) {\r\n    const r = await refund(this.props.web3Provider, proposalId);\r\n    this.setState({ result: r });\r\n  }\r\n\r\n  handleProposalAction(action, id) {\r\n    this.setState({\r\n      proposalActionType: action,\r\n      proposalActionId: id,\r\n      queueExecuteModalShow: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <QueueExecuteProposalModal\r\n          show={this.state.queueExecuteModalShow}\r\n          onHide={() => this.setState({ queueExecuteModalShow: false })}\r\n          provider={this.props.web3Provider}\r\n          type={this.state.proposalActionType}\r\n          id={this.state.proposalActionId}\r\n        />\r\n        <DelegateDAOTokensModal\r\n          show={this.state.delegateModalShow}\r\n          title=\"Delegate your DAO tokens vote\"\r\n          balance={new BigNumber(this.state.daoTokenBalance).toFormat(fmt)}\r\n          onHide={() => this.setState({ delegateModalShow: false })}\r\n          provider={this.props.web3Provider}\r\n        />\r\n        {this.state.proposals.length > 0 && (\r\n          <ProposalCallDetailsModal\r\n            show={this.state.callDetailsModalShow}\r\n            title={`Proposal #${this.state.selectedProposalIdDetails} call details`}\r\n            onHide={() => this.setState({ callDetailsModalShow: false })}\r\n            actions={this.state.proposals[this.state.selectedProposalIdDetails - 1].actions}\r\n          />\r\n        )}\r\n        {this.state.isFetchingBlocks && (\r\n          <Alert\r\n            variant=\"secondary\"\r\n            className=\"text-center\"\r\n          >Mining block {this.state.blockNumber + 1}...</Alert>\r\n        )}\r\n        {!!this.state.result && (\r\n          <Alert\r\n            variant=\"primary\"\r\n            dismissible\r\n            onClose={() => this.setState({ result: '' })}\r\n          >{this.state.result}</Alert>\r\n        )}\r\n\r\n        <h2>Governance</h2>\r\n        <p>View, vote on, or modify proposals to issue CLM8 tokens for DAO token (dCLM8) holders. Your votes count as the square root of dCLM8 you vote on a proposal with, and the full amount you voted with is burned after you cast a vote.</p>\r\n        {this.state.networkNameLowercase === 'xdai' && (\r\n          <p>\r\n            <a href={this.state.blockscoutPage}>See contract on Blockscout</a>\r\n          </p>\r\n        )}\r\n\r\n        <div className=\"d-flex justify-content-start align-items-center\">\r\n          <div className=\"pr-2\">\r\n            <Button\r\n              block\r\n              size=\"sm\"\r\n              onClick={() => this.setState({ delegateModalShow: true })}\r\n              disabled={this.state.daoTokenBalance <= 0}\r\n              className=\"text-nowrap mr-2\"\r\n              variant=\"primary\"\r\n            >\r\n              Delegate DAO tokens\r\n            </Button>\r\n            <small className=\"text-muted\">Current delegatee: {this.state.daoTokenDelegates}</small>\r\n          </div>\r\n          {this.state.networkNameLowercase === 'hardhat' && (\r\n            <div className=\"ml-auto\">\r\n              <InputGroup size=\"sm\" className=\"mb-1\">\r\n                <FormControl\r\n                  placeholder=\"Advance blocks...\"\r\n                  onChange={this.onSkipBlocksAmountChange}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => this.handleSkipBlocks(this.state.skipBlocksAmount)}\r\n                  >\r\n                    Skip\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n              <InputGroup size=\"sm\" className=\"mb-1\">\r\n                <FormControl\r\n                  placeholder=\"Skip to block...\"\r\n                  onChange={this.onSkipBlocksAmountChange}\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => this.handleSkipBlocks(Number(this.state.skipBlocksAmount) - Number(this.state.blockNumber))}\r\n                  >\r\n                    Skip\r\n                  </Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n              <Button\r\n                block\r\n                size=\"sm\"\r\n                variant=\"secondary\"\r\n                onClick={() => this.handleSkipTimestamp(2)}\r\n              >Add 2 days to block timestamp</Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <hr/>\r\n\r\n        <Row>\r\n          <Col>\r\n            {(this.state.daoTokenBalance !== -1) &&\r\n              <Fragment>\r\n                <small>\r\n                  Your DAO tokens: {new BigNumber(this.state.daoTokenBalance).toFormat(fmt)}\r\n                  {this.state.daoTokenBalance !== 0 && (\r\n                    <Fragment> (~{this.state.percentOfSupply}% of entire supply)</Fragment>\r\n                  )}\r\n                </small>\r\n              </Fragment>\r\n            }\r\n          </Col>\r\n          <Col className=\"text-right\">\r\n            <small>\r\n              {this.state.blockNumber !== -1 && (\r\n                <Fragment>Current block: {this.state.blockNumber}</Fragment>\r\n              )}\r\n              <br/>\r\n              {this.state.quorum !== -1 && (\r\n                <Fragment>Quorum: {this.state.quorum} votes (~{new BigNumber(this.state.quorum ** 2).toFormat(fmt)} dCLM8)</Fragment>\r\n              )}\r\n              <br/>\r\n              {this.state.proposalThreshold !== -1 && (\r\n                <Fragment>Proposal threshold: {this.state.proposalThreshold} dCLM8</Fragment>\r\n              )}\r\n            </small>\r\n          </Col>\r\n        </Row>\r\n\r\n        {this.state.fetchingProposals && (\r\n          <div className=\"text-center my-4\">\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        )}\r\n\r\n        {(this.state.proposalsLength === 0 && !this.state.fetchingProposals) && (\r\n          <p>No proposals found.</p>\r\n        )}\r\n\r\n        <div className=\"d-flex flex-wrap justify-content-around row\">\r\n          {this.state.proposals.length !== 0 && this.state.proposals.map((proposal, key) => (\r\n            <Card key={key} className=\"m-2 col-lg pt-2\">\r\n              <Card.Body>\r\n                <Row className=\"pb-2\">\r\n                  <Col>\r\n                    <h5 style={{ display: 'inline-block' }}>\r\n                      <span className=\"mr-3\">Proposal #{proposal.id}</span>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        variant=\"secondary\"\r\n                        className=\"my-1 text-nowrap\"\r\n                        onClick={() => this.setState({\r\n                          selectedProposalIdDetails: proposal.id,\r\n                          callDetailsModalShow: true\r\n                        })}\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                    </h5>\r\n                  </Col>\r\n                  {/* proposal action buttons */}\r\n                  <Col className=\"text-right\">\r\n                    {/* cancel button */}\r\n                    {(proposal.state !== 'Executed' && proposal.state !== 'Canceled' && this.state.hasRole) && (\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => this.handleProposalAction('cancel', proposal.id)}\r\n                        disabled={this.state.daoTokenBalance <= 0}\r\n                        className=\"text-nowrap ml-1 my-1\"\r\n                        variant=\"danger\"\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    )}\r\n                    {/* queue button */}\r\n                    {(proposal.state === 'Succeeded' && this.state.hasRole) && (\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => this.handleProposalAction('queue', proposal.id)}\r\n                        disabled={this.state.daoTokenBalance <= 0}\r\n                        className=\"text-nowrap ml-2 my-1\"\r\n                        variant=\"warning\"\r\n                      >\r\n                        Queue\r\n                      </Button>\r\n                    )}\r\n                    {/* execute button */}\r\n                    {(proposal.state === 'Queued' && this.state.hasRole) && (\r\n                      <Button\r\n                        size=\"sm\"\r\n                        onClick={() => this.handleProposalAction('execute', proposal.id)}\r\n                        disabled={this.state.daoTokenBalance <= 0}\r\n                        className=\"text-nowrap ml-2 my-1\"\r\n                        variant=\"success\"\r\n                      >\r\n                        Execute\r\n                      </Button>\r\n                    )}\r\n                  </Col>\r\n                </Row>\r\n\r\n                {/* proposal state */}\r\n                <Card.Text className=\"text-primary\">\r\n                  <b>{proposal.state}</b>\r\n                </Card.Text>\r\n                <Card.Text>\r\n                  <small>Proposer: {proposal.details.proposer}</small>\r\n                </Card.Text>\r\n\r\n                <Card.Text className=\"py-2\">{proposal.description}</Card.Text>\r\n                <Card.Text></Card.Text>\r\n                <Card.Text className=\"text-secondary mb-4\"><i>Voting starts on block {proposal.details.startBlock} and ends on {proposal.details.endBlock}.</i></Card.Text>\r\n                <Row className=\"text-center mb-3\">\r\n\r\n                  {/* voting buttons if eligible */}\r\n                  {proposal.isEligibleToVote && (\r\n                    <Fragment>\r\n                      <Col className=\"text-success my-auto\">\r\n                        Total For: {new BigNumber(proposal.details.forVotes).toFormat(fmt)} votes ({new BigNumber(proposal.details.rawForVotes).toFormat(fmt)} dCLM8 locked)<br/>\r\n                        <InputGroup className=\"mt-1\">\r\n                          <FormControl\r\n                            placeholder=\"dCLM8 to vote for..\"\r\n                            onChange={this.onVotesAmountChange}\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              variant=\"success\"\r\n                              onClick={() => this.vote(proposal.id, true)}\r\n                            >Vote for</Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                      </Col>\r\n                      <Col className=\"text-danger my-auto\">\r\n                        Total Against: {new BigNumber(proposal.details.againstVotes).toFormat(fmt)} votes ({new BigNumber(proposal.details.rawAgainstVotes).toFormat(fmt)} dCLM8 locked)<br/>\r\n                        <InputGroup className=\"mt-1\">\r\n                          <FormControl\r\n                            placeholder=\"dCLM8 to vote against...\"\r\n                            onChange={this.onVotesAmountChange}\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              variant=\"danger\"\r\n                              onClick={() => this.vote(proposal.id, false)}\r\n                            >Vote against</Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                      </Col>\r\n                    </Fragment>\r\n                  )}\r\n\r\n                  {/* voting results if ineligible */}\r\n                  {(proposal.state !== 'Pending' && !proposal.isEligibleToVote) && (\r\n                    <Fragment>\r\n                      <Col className=\"text-success my-auto\">\r\n                        Total For: {new BigNumber(proposal.details.forVotes).toFormat(fmt)} votes ({new BigNumber(proposal.details.rawForVotes).toFormat(fmt)} dCLM8)<br/>\r\n                      </Col>\r\n                      <Col className=\"text-danger my-auto\">\r\n                        Total Against: {new BigNumber(proposal.details.againstVotes).toFormat(fmt)} votes ({new BigNumber(proposal.details.rawAgainstVotes).toFormat(fmt)} dCLM8)<br/>\r\n                      </Col>\r\n                    </Fragment>\r\n                  )}\r\n                </Row>\r\n\r\n                {proposal.receipt.hasVoted === true && (\r\n                  <p className=\"text-center py-2\">\r\n                    You voted {proposal.receipt.support ? 'FOR' : 'AGAINST'} with {new BigNumber(proposal.receipt.votes).toFormat(fmt)} votes.\r\n                  </p>\r\n                )}\r\n\r\n                {(proposal.state !== 'Active' && proposal.receipt.hasVoted !== true) && (\r\n                  <Col className=\"text-danger my-auto\">\r\n                    <p className=\"text-secondary text-center\">\r\n                      <small>Must be an active proposal to vote.</small>\r\n                    </p>\r\n                  </Col>\r\n                )}\r\n\r\n                {(\r\n                  (proposal.receipt.hasVoted || (proposal.details.proposer.toLowerCase() === this.props.signedInAddress.toLowerCase() && (proposal.state === 'Canceled' || proposal.state === 'Succeeded' || proposal.state === 'Defeated'))) &&\r\n                  (!proposal.receipt.hasVotesRefunded || !proposal.receipt.hasStakeRefunded) &&\r\n                  proposal.receipt.rawRefund > 0\r\n                ) && (\r\n                  <p className=\"text-center py-2\">\r\n                    <Button\r\n                      size=\"sm\"\r\n                      onClick={() => this.refundDclm8(proposal.id)}\r\n                      className=\"text-nowrap mt-2\"\r\n                      variant=\"danger\"\r\n                    >\r\n                      {proposal.state === 'Active' ? (\r\n                        <span>Cancel My Vote</span>\r\n                      ) : (\r\n                        <span>Refund {new BigNumber(proposal.receipt.rawRefund).toFormat(fmt)} dCLM8</span>\r\n                      )}\r\n                    </Button>\r\n                  </p>\r\n                )}\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider,\r\n  signedInAddress: app.signedInAddress,\r\n  roles: app.roles\r\n});\r\n\r\nexport default connect(mapStateToProps)(GovernanceDashboard);","import React, { PureComponent } from 'react';\r\nimport { Button, Modal, Spinner } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SubmissionModal extends PureComponent {\r\n  render() {\r\n    const { title, body, onHide, children, ...rest } = this.props;\r\n    return (\r\n      <Modal {...rest} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {!body ? (\r\n            <div className=\"text-center mt-3\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          ) : (\r\n            <p>{body}</p>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nSubmissionModal.propTypes = {\r\n  title: PropTypes.string,\r\n  body: PropTypes.string,\r\n  onHide: PropTypes.func\r\n}\r\n\r\nexport default SubmissionModal;","import React, { PureComponent } from 'react';\r\nimport { Button, Form, Modal, Spinner } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport addresses from '../contracts/addresses.json';\r\nimport { propose } from '../helpers/contracts';\r\n\r\nclass CreateProposalModal extends PureComponent {\r\n  state = {\r\n    description: '',\r\n    result: '',\r\n    isSubmitting: false\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.description !== this.props.description) {\r\n      this.setState({\r\n        description: nextProps.description\r\n      });\r\n    }\r\n  }\r\n\r\n  submit = async () => {\r\n    this.setState({ isSubmitting: false });\r\n    try {\r\n      const args = {\r\n        targets: [\r\n          addresses[process.env.REACT_APP_NETWORK_NAME].tokenNetwork.address\r\n        ],\r\n        values: [0],\r\n        signatures: [\r\n          'issueOnBehalf(address,address,uint8,uint256,uint256,uint256,uint256,string,string,string)'\r\n        ],\r\n        calldata: [\r\n          this.props.calldata\r\n        ],\r\n        description: this.props.description\r\n      };\r\n      const proposeCall = await propose(\r\n        this.props.web3Provider,\r\n        args.targets,\r\n        args.values,\r\n        args.signatures,\r\n        args.calldata,\r\n        args.description\r\n      );\r\n      this.setState({\r\n        result: proposeCall.toString(),\r\n        isSubmitting: false\r\n      });\r\n    } catch (e) {\r\n      this.setState({\r\n        result: e.message,\r\n        isSubmitting: false\r\n      });\r\n    }\r\n  }\r\n\r\n  onDescriptionChange = (event) => this.setState({\r\n    description: event.target.value\r\n  })\r\n\r\n  render() {\r\n    const { title, calldata, description, onHide, children, ...rest } = this.props;\r\n    return (\r\n      <Modal {...rest} centered size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Create a proposal to <b>issue tokens</b> from the DAO. If it passes through a vote of the DAO token holders, it can be queued and executed to issue new tokens to any registered consumer. 400,000 tokens or 4% of the DAO token supply is required to submit a proposal. Only one active proposal is allowed per user. Proposals, votes, DAO token balance, and delgates can be viewed on the Governance page.</p>\r\n          <p><small>Be sure to double-check all form inputs before submitting! You can cancel proposals but it costs gas.</small></p>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control as=\"textarea\" rows={2} placeholder=\"Describe the purpose of this proposal...\" value={this.state.description} onChange={this.onDescriptionChange} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Calldata</Form.Label>\r\n              <Form.Control as=\"textarea\" disabled rows={3} value={calldata} />\r\n              <Form.Text className=\"text-muted\">This is the encoded data of the issue contract call. Don't worry about this unless you're calling the Governor contract manually.</Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n          {this.state.isSubmitting && (\r\n            <div className=\"text-center mt-3\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          )}\r\n          {!!this.state.result && (\r\n            <p className=\"mt-3\">{this.state.result}</p>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={onHide}>Close</Button>\r\n          <Button variant=\"success\" onClick={this.submit}>Submit proposal</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nCreateProposalModal.propTypes = {\r\n  title: PropTypes.string,\r\n  calldata: PropTypes.string,\r\n  description: PropTypes.string,\r\n  onHide: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider\r\n});\r\n\r\nexport default connect(mapStateToProps)(CreateProposalModal);","import React, { Fragment, PureComponent } from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport DateTime from 'react-datetime';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { TOKEN_TYPES, encodeParameters, getAdmin, issue } from '../helpers/contracts';\r\nimport SubmissionModal from '../components/SubmissionModal';\r\nimport CreateProposalModal from '../components/CreateProposalModal';\r\n\r\nclass IssueForm extends PureComponent {\r\n  state = {\r\n    submissionModalShow: false,\r\n    createModalShow: false,\r\n    // admin address (if contract is in limitedMode)\r\n    adminAddress: '',\r\n    // Form inputs\r\n    address: '',\r\n    tokenTypeId: 1,\r\n    quantity: '',\r\n    fromDate: '',\r\n    thruDate: '',\r\n    automaticRetireDate: '',\r\n    metadata: '',\r\n    manifest: '',\r\n    description: '',\r\n    result: '',\r\n    // Calldata\r\n    calldata: '',\r\n    // After initial onFocus for required inputs, display red outline if invalid\r\n    initializedAddressInput: false,\r\n    initializedQuantityInput: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.limitedMode && this.props.web3Provider) {\r\n      this.fetchAdmin();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (!prevProps.limitedMode && this.props.limitedMode) {\r\n      if (this.props.web3Provider) {\r\n        this.fetchAdmin();\r\n      }\r\n    } else if (prevProps.limitedMode && !this.props.limitedMode) {\r\n      this.setState({ adminAddress: '' });\r\n    }\r\n  }\r\n\r\n  async fetchAdmin() {\r\n    const adminAddress = await getAdmin(this.props.web3Provider);\r\n    this.setState({ adminAddress });\r\n  }\r\n\r\n  onAddressChange = (event) => this.setState({\r\n    address: event.target.value\r\n  })\r\n\r\n  onTokenTypeIdChange = (event) => this.setState({\r\n    tokenTypeId: event.target.value\r\n  })\r\n\r\n  onQuantityChange = (event) => this.setState({\r\n    quantity: event.target.value\r\n  })\r\n\r\n  onFromDateChange = (event) => this.setState({\r\n    fromDate: event.target.value\r\n  })\r\n\r\n  onThruDateChange = (event) => this.setState({\r\n    thruDate: event.target.value\r\n  })\r\n\r\n  onAutomaticRetireDateChange = (event) => this.setState({\r\n    automaticRetireDate: event.target.value\r\n  })\r\n\r\n  onMetadataChange = (event) => this.setState({\r\n    metadata: event.target.value\r\n  })\r\n\r\n  onManifestChange = (event) => this.setState({\r\n    manifest: event.target.value\r\n  })\r\n\r\n  onDescriptionChange = (event) => this.setState({\r\n    description: event.target.value\r\n  })\r\n\r\n  handleSubmit = () => {\r\n    this.submit();\r\n    this.setState({\r\n      submissionModalShow: true\r\n    });\r\n  }\r\n\r\n  async submit() {\r\n    // If quantity has 3 decimals, multiply by 1000 before passing to the contract\r\n    const quantity_formatted = this.state.tokenTypeId === '3' ? Math.round(this.state.quantity * 1000) : this.state.quantity;\r\n    const issueCall = await issue(\r\n      this.props.web3Provider,\r\n      this.state.address,\r\n      this.state.tokenTypeId,\r\n      quantity_formatted,\r\n      this.state.fromDate,\r\n      this.state.thruDate,\r\n      this.state.automaticRetireDate,\r\n      this.state.metadata,\r\n      this.state.manifest,\r\n      this.state.description\r\n    );\r\n    this.setState({\r\n      result: issueCall.toString()\r\n    });\r\n  }\r\n\r\n  // update calldata in background in case user wants to copy it with button\r\n  updateCalldata() {\r\n    try {\r\n      const encodedCalldata = encodeParameters(\r\n        // types of params\r\n        [\r\n          'address',\r\n          'address',\r\n          'uint8',\r\n          'uint256',\r\n          'uint256',\r\n          'uint256',\r\n          'uint256',\r\n          'string',\r\n          'string',\r\n          'string'\r\n        ],\r\n        // value of params\r\n        [\r\n          this.props.limitedMode ? this.state.adminAddress : this.state.address,\r\n          this.props.signedInAddress,\r\n          this.state.tokenTypeId,\r\n          Number(this.state.quantity),\r\n          Number(this.state.fromDate) / 1000,\r\n          Number(this.state.thruDate) / 1000,\r\n          Number(this.state.automaticRetireDate) / 1000,\r\n          this.state.metadata,\r\n          this.state.manifest,\r\n          'Issued by DAO. ' + this.state.description\r\n        ]\r\n      );\r\n      this.setState({ calldata: encodedCalldata });\r\n    } catch (e) {\r\n      this.setState({ calldata: '' });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const inputError = {\r\n      boxShadow: '0 0 0 0.2rem rgba(220,53,69,.5)',\r\n      borderColor: '#dc3545'\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <CreateProposalModal\r\n          show={this.state.createModalShow}\r\n          title=\"Create a proposal\"\r\n          onHide={() => this.setState({\r\n            createModalShow: false\r\n          })}\r\n          provider={this.props.web3Provider}\r\n          calldata={this.state.calldata}\r\n          description={this.state.description}\r\n        />\r\n        <SubmissionModal\r\n          show={this.state.submissionModalShow}\r\n          title=\"Issue tokens\"\r\n          body={this.state.result}\r\n          onHide={() => this.setState({\r\n            result: '',\r\n            submissionModalShow: false\r\n          })}\r\n        />\r\n        <h2>Issue tokens</h2>\r\n        <p>Issue tokens (Renewable Energy Certificate, Carbon Emissions Offset, or Audited Emissions) to registered consumers.</p>\r\n\r\n        {(!this.props.limitedMode || this.state.tokenTypeId === '3') ? (\r\n          <Form.Group>\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control\r\n              type=\"input\"\r\n              placeholder=\"0x000...\"\r\n              value={this.state.address}\r\n              onChange={this.onAddressChange}\r\n              onBlur={() => this.setState({\r\n                initializedAddressInput: true\r\n              })}\r\n              style={(!!this.state.address || !this.state.initializedAddressInput) ? {} : inputError}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Must be a registered consumer.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        ) : (\r\n          <Form.Group>\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control\r\n              type=\"input\"\r\n              value={this.state.adminAddress}\r\n              disabled\r\n              onBlur={() => this.setState({\r\n                initializedAddressInput: true\r\n              })}\r\n              style={(!!this.state.address || !this.state.initializedAddressInput) ? {} : inputError}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Always set to admin address in limited mode.\r\n            </Form.Text>\r\n          </Form.Group>\r\n        )}\r\n\r\n        <Form.Group>\r\n          <Form.Label>Token Type</Form.Label>\r\n          <Form.Control as=\"select\" onChange={this.onTokenTypeIdChange}>\r\n            <option value={1}>{TOKEN_TYPES[0]}</option>\r\n            <option value={2}>{TOKEN_TYPES[1]}</option>\r\n            <option value={3}>{TOKEN_TYPES[2]}</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Quantity</Form.Label>\r\n          <Form.Control\r\n            type=\"input\"\r\n            placeholder={this.state.tokenTypeId === '3' ? '100.000' : '100'}\r\n            value={this.state.quantity}\r\n            onChange={this.onQuantityChange}\r\n            onBlur={() => this.setState({\r\n              initializedAddressInput: true\r\n            })}\r\n            style={(!!this.state.quantity || !this.state.initializedQuantityInput) ? {} : inputError}\r\n          />\r\n          {/* Display whether decimal is needed or not */}\r\n          <Form.Text className=\"text-muted\">\r\n            {this.state.tokenTypeId === '3' ? 'Must not contain more than three decimal values.' : 'Must be an integer value.'}\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <Form.Label>From date</Form.Label>\r\n            <DateTime onChange={this.onFromDateChange}/>\r\n          </Form.Group>\r\n          <Form.Group as={Col}>\r\n            <Form.Label>Through date</Form.Label>\r\n            <DateTime onChange={this.onThruDateChange}/>\r\n          </Form.Group>\r\n          <Form.Group as={Col}>\r\n            <Form.Label>Automatic retire date</Form.Label>\r\n            <DateTime onChange={this.onAutomaticRetireDateChange}/>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Group>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            placeholder=\"\"\r\n            value={this.state.description}\r\n            onChange={this.onDescriptionChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Metadata</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            placeholder=\"E.g. Region and time of energy generated, type of project, location, etc.\"\r\n            value={this.state.metadata}\r\n            onChange={this.onMetadataChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Manifest</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            placeholder=\"E.g. URL linking to the registration for the REC, emissions offset purchased, etc.\"\r\n            value={this.state.manifest}\r\n            onChange={this.onManifestChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Row className=\"mt-4\">\r\n          <Col>\r\n            {/* if in limited mode, require dealer role (except AE) to make a DAO proposal */}\r\n            {(this.props.limitedMode && (!this.props.roles[0] && !this.props.roles[1] && !this.props.roles[2])) ? (\r\n              <Button\r\n                variant=\"success\"\r\n                size=\"lg\"\r\n                block\r\n                disabled\r\n              >\r\n                Must be a registered dealer\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                variant=\"success\"\r\n                size=\"lg\"\r\n                block\r\n                onClick={() => this.setState({ createModalShow: true })}\r\n                disabled={\r\n                  this.state.calldata.length === 0 ||\r\n                  String(this.state.quantity).length === 0 ||\r\n                  this.state.tokenTypeId === '3'\r\n                }\r\n              >\r\n                Create a DAO proposal\r\n              </Button>\r\n            )}\r\n          </Col>\r\n\r\n          {(!this.props.limitedMode || this.state.tokenTypeId === '3') && (\r\n            <Col>\r\n              {/* Only enable issue if role is found */}\r\n              {(this.props.roles[0] || this.props.roles[1] || this.props.roles[2] || this.props.roles[3]) ? (\r\n                <Button\r\n                  variant=\"primary\"\r\n                  size=\"lg\"\r\n                  block\r\n                  onClick={this.handleSubmit}\r\n                  disabled={!this.state.calldata || String(this.state.quantity).length === 0 || String(this.state.address).length === 0}\r\n                >\r\n                  Issue\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"primary\"\r\n                  size=\"lg\"\r\n                  block\r\n                  disabled\r\n                >\r\n                  Must be a registered dealer\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider,\r\n  signedInAddress: app.signedInAddress,\r\n  roles: app.roles,\r\n  limitedMode: app.limitedMode\r\n});\r\n\r\nexport default connect(mapStateToProps)(IssueForm);","import React, { Fragment, PureComponent } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { transfer } from '../helpers/contracts';\r\nimport SubmissionModal from '../components/SubmissionModal';\r\n\r\nclass TransferForm extends PureComponent {\r\n  state = {\r\n    modalShow: false,\r\n    // Form inputs\r\n    address: '',\r\n    tokenId: '',\r\n    amount: '',\r\n    result: '',\r\n    // After initial onFocus for retransferquired inputs, display red outline if invalid\r\n    initializedAddressInput: false,\r\n    initializedTokenIdInput: false,\r\n    initializedAmountInput: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const addressQueryParam = queryParams.get('address');\r\n    const tokenIdQueryParam = queryParams.get('tokenId');\r\n    const quantityQueryParam = queryParams.get('quantity');\r\n\r\n    if (addressQueryParam) {\r\n      this.setState({\r\n        address: addressQueryParam\r\n      });\r\n    }\r\n    if (tokenIdQueryParam) {\r\n      this.setState({\r\n        tokenId: tokenIdQueryParam\r\n      });\r\n    }\r\n    if (quantityQueryParam) {\r\n      this.setState({\r\n        amount: quantityQueryParam\r\n      });\r\n    }\r\n  }\r\n\r\n  onAddressChange = (event) => this.setState({\r\n    address: event.target.value\r\n  })\r\n\r\n  onTokenIdChange = (event) => this.setState({\r\n    tokenId: event.target.value\r\n  })\r\n\r\n  onAmountChange = (event) => this.setState({\r\n    amount: event.target.value\r\n  })\r\n\r\n  handleTransfer = () => {\r\n    this.fetchTransfer();\r\n    this.setState({ modalShow: true });\r\n  }\r\n\r\n  async fetchTransfer() {\r\n    const result = await transfer(this.props.web3Provider, this.state.address, this.state.tokenId, this.state.amount);\r\n    this.setState({\r\n      result: result.toString()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const inputError = {\r\n      boxShadow: '0 0 0 0.2rem rgba(220,53,69,.5)',\r\n      borderColor: '#dc3545'\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <SubmissionModal\r\n          show={this.state.modalShow}\r\n          title=\"Transfer tokens\"\r\n          body={this.state.result}\r\n          onHide={() => this.setState({\r\n            modalShow: false,\r\n            result: ''\r\n          })}\r\n        />\r\n        <h2>Transfer tokens</h2>\r\n        <p>Send available tokens in your possession of a particular ID (as displayed on the dashboard) to any address. Audited Emissions tokens cannot be transferred as they come automatically retired.</p>\r\n        <Form.Group>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"input\"\r\n            placeholder=\"0x000...\"\r\n            value={this.state.address}\r\n            onChange={this.onAddressChange}\r\n            onBlur={() => this.setState({\r\n              initializedAddressInput: true\r\n            })}\r\n            style={(this.state.address || !this.state.initializedAddressInput) ? {} : inputError}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Token ID</Form.Label>\r\n          <Form.Control\r\n            type=\"input\"\r\n            placeholder=\"1, 2, 3, ...\"\r\n            value={this.state.tokenId}\r\n            onChange={this.onTokenIdChange}\r\n            onBlur={() => this.setState({\r\n              initializedTokenIdInput: true\r\n            })}\r\n            style={(this.state.tokenId || !this.state.initializedTokenIdInput) ? {} : inputError}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Quantity</Form.Label>\r\n          <Form.Control\r\n            type=\"input\"\r\n            placeholder=\"100\"\r\n            value={this.state.amount}\r\n            onChange={this.onAmountChange}\r\n            onBlur={() => this.setState({\r\n              initializedAmountInput: true\r\n            })}\r\n            style={(this.state.amount || !this.state.initializedAmountInput) ? {} : inputError}\r\n          />\r\n        </Form.Group>\r\n        {/* Only enable transfers if role is found */}\r\n        {(this.props.roles.length === 5 && this.props.roles.some(r => r === true)) ? (\r\n          <Button\r\n            variant=\"success\"\r\n            size=\"lg\"\r\n            block\r\n            onClick={this.handleTransfer}\r\n          >\r\n            Transfer\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled\r\n            variant=\"success\"\r\n            size=\"lg\"\r\n            block\r\n          >\r\n            Must be a registered user\r\n          </Button>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider,\r\n  roles: app.roles\r\n});\r\n\r\nexport default connect(mapStateToProps)(TransferForm);","import React, { Fragment, PureComponent } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { retire } from '../helpers/contracts';\r\nimport SubmissionModal from '../components/SubmissionModal';\r\n\r\nclass RetireForm extends PureComponent {\r\n  state = {\r\n    modalShow: false,\r\n    // Form inputs\r\n    tokenId: '',\r\n    amount: '',\r\n    result: '',\r\n    // After initial onFocus for required inputs, display red outline if invalid\r\n    initializedTokenIdInput: false,\r\n    initializedAmountInput: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const tokenIdQueryParam = queryParams.get('tokenId');\r\n    const quantityQueryParam = queryParams.get('quantity');\r\n\r\n    if (tokenIdQueryParam) {\r\n      this.setState({\r\n        tokenId: tokenIdQueryParam\r\n      });\r\n    }\r\n    if (quantityQueryParam) {\r\n      this.setState({\r\n        amount: quantityQueryParam\r\n      });\r\n    }\r\n  }\r\n\r\n  onTokenIdChange = (event) => this.setState({\r\n    tokenId: event.target.value\r\n  })\r\n\r\n  onAmountChange = (event) => this.setState({\r\n    amount: event.target.value\r\n  })\r\n\r\n  async fetchRetire() {\r\n    const retireCall = await retire(\r\n      this.props.web3Provider,\r\n      this.state.tokenId,\r\n      this.state.amount\r\n    );\r\n    this.setState({\r\n      result: retireCall.toString()\r\n    });\r\n  }\r\n\r\n  handleRetire = () => {\r\n    this.fetchRetire();\r\n    this.setState({ modalShow: true });\r\n  }\r\n\r\n  render() {\r\n    const inputError = {\r\n      boxShadow: '0 0 0 0.2rem rgba(220,53,69,.5)',\r\n      borderColor: '#dc3545'\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <SubmissionModal\r\n          show={this.state.modalShow}\r\n          title=\"Retire tokens\"\r\n          body={this.state.result}\r\n          onHide={() => this.setState({\r\n            modalShow: false,\r\n            result: ''\r\n          })}\r\n        />\r\n        <h2>Retire tokens</h2>\r\n        <p>Retire some or all tokens in your possession of a particular ID (as displayed on the dashboard). Audited Emissions tokens cannot be retired as they come retired on issuance.</p>\r\n        <Form.Group>\r\n          <Form.Label>Token ID</Form.Label>\r\n          <Form.Control\r\n            type=\"input\"\r\n            placeholder=\"1, 2, 3, ...\"\r\n            value={this.state.tokenId}\r\n            onChange={this.onTokenIdChange}\r\n            onBlur={() => this.setState({\r\n              initializedTokenIdInput: true\r\n            })}\r\n            style={(this.state.tokenId || !this.state.initializedTokenIdInput) ? {} : inputError}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Quantity</Form.Label>\r\n          <Form.Control\r\n            type=\"input\"\r\n            placeholder=\"100\"\r\n            value={this.state.amount}\r\n            onChange={this.onAmountChange}\r\n            onBlur={() => this.setState({\r\n              initializedAmountInput: true\r\n            })}\r\n            style={(this.state.amount || !this.state.initializedAmountInput) ? {} : inputError}\r\n          />\r\n        </Form.Group>\r\n        {/* Only enable retires if role is found */}\r\n        {(this.props.roles.length === 5 && this.props.roles.some(r => r === true)) ? (\r\n          <Button\r\n            variant=\"danger\"\r\n            size=\"lg\"\r\n            block\r\n            onClick={this.handleRetire}\r\n          >\r\n            Retire\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled\r\n            variant=\"danger\"\r\n            size=\"lg\"\r\n            block\r\n          >\r\n            Must be a registered user\r\n          </Button>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider,\r\n  roles: app.roles\r\n});\r\n\r\nexport default connect(mapStateToProps)(RetireForm);","import React, { Fragment, PureComponent } from 'react';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  InputGroup,\r\n  Row,\r\n  Spinner\r\n} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getRoles, registerConsumer, unregisterConsumer, registerDealer, unregisterDealer } from '../helpers/contracts';\r\nimport SubmissionModal from '../components/SubmissionModal';\r\n\r\nclass AccessControlForm extends PureComponent {\r\n  state = {\r\n    modalShow: false,\r\n    address: '',\r\n    role: 'Consumer',\r\n    result: '',\r\n    // Fetching roles of outside address\r\n    theirAddress: '',\r\n    theirRoles: [],\r\n    fetchingTheirRoles: false\r\n  }\r\n\r\n  onAddressChange = (event) => this.setState({\r\n    address: event.target.value\r\n  })\r\n\r\n  onTheirAddressChange = (event) => this.setState({\r\n    theirAddress: event.target.value\r\n  })\r\n\r\n  onRoleChange = (event) => this.setState({\r\n    role: event.target.value\r\n  })\r\n\r\n  fetchTheirRoles = async () => {\r\n    this.setState({\r\n      theirRoles: [],\r\n      fetchingTheirRoles: true\r\n    });\r\n    const result = await getRoles(this.props.web3Provider, this.state.theirAddress);\r\n    this.setState({\r\n      theirRoles: result,\r\n      fetchingTheirRoles: false\r\n    });\r\n  }\r\n\r\n  async fetchRegisterConsumer() {\r\n    const result = await registerConsumer(this.props.web3Provider, this.state.address);\r\n    this.setState({\r\n      result: result.toString()\r\n    });\r\n  }\r\n\r\n  async fetchUnregisterConsumer() {\r\n    const result = await unregisterConsumer(this.props.web3Provider, this.state.address);\r\n    this.setState({\r\n      result: result.toString()\r\n    });\r\n  }\r\n\r\n  async fetchRegisterDealer(tokenTypeId) {\r\n    const result = await registerDealer(this.props.web3Provider, this.state.address, tokenTypeId);\r\n    this.setState({\r\n      result: result.toString()\r\n    });\r\n  }\r\n\r\n  async fetchUnregisterDealer(tokenTypeId) {\r\n    const result = await unregisterDealer(this.props.web3Provider, this.state.address, tokenTypeId);\r\n    this.setState({\r\n      result: result.toString()\r\n    });\r\n  }\r\n\r\n  handleRegister() {\r\n    switch (this.state.role) {\r\n      case 'Consumer':\r\n        this.fetchRegisterConsumer();\r\n        break;\r\n      case 'REC':\r\n        this.fetchRegisterDealer(1);\r\n        break;\r\n      case 'CEO':\r\n        this.fetchRegisterDealer(2);\r\n        break;\r\n      case 'AE':\r\n        this.fetchRegisterDealer(3);\r\n        break;\r\n      default:\r\n        console.error(\"Can't find role\");\r\n    }\r\n    this.setState({ modalShow: true });\r\n  }\r\n\r\n  handleUnregister() {\r\n    switch (this.state.role) {\r\n      case 'Consumer':\r\n        this.fetchUnregisterConsumer();\r\n        break;\r\n      case 'REC':\r\n        this.fetchUnregisterDealer(1);\r\n        break;\r\n      case 'CEO':\r\n        this.fetchUnregisterDealer(2);\r\n        break;\r\n      case 'AE':\r\n        this.fetchUnregisterDealer(3);\r\n        break;\r\n      default:\r\n        console.error(\"Can't find role\");\r\n    }\r\n    this.setState({ modalShow: true });\r\n  }\r\n\r\n  render = () => (\r\n    <Fragment>\r\n      <SubmissionModal\r\n        show={this.state.modalShow}\r\n        title=\"Manage roles\"\r\n        body={this.state.result}\r\n        onHide={() => this.setState({\r\n          modalShow: false,\r\n          result: ''\r\n        })}\r\n      />\r\n      <h2>Manage roles</h2>\r\n      <p>Register or unregister roles for different addresses on the network. Must be an owner to register dealers, and must be a dealer to register consumers.</p>\r\n      {this.props.signedInAddress && (\r\n        <Fragment>\r\n          <h4>My Roles</h4>\r\n          {this.props.roles.length === 5 ? (\r\n            <RolesList roles={this.props.roles}/>\r\n          ) : (\r\n            <div className=\"text-center mt-3 mb-3\">\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n\r\n      <h4>Look-up Roles</h4>\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          placeholder=\"0x000...\"\r\n          onChange={this.onTheirAddressChange}\r\n        />\r\n        <InputGroup.Append>\r\n          <Button variant=\"outline-secondary\" onClick={this.fetchTheirRoles}>Look-up</Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n      {this.state.fetchingTheirRoles && (\r\n        <div className=\"text-center mt-3 mb-3\">\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </div>\r\n      )}\r\n      {this.state.theirRoles.length === 5 && (\r\n        <RolesList roles={this.state.theirRoles}/>\r\n      )}\r\n\r\n      {/* Only display registration/unregistration tokens if owner or dealer */}\r\n      {this.props.roles[0] === true && (\r\n        <Fragment>\r\n          <h4>Register/unregister dealers and consumers</h4>\r\n          <Form.Group>\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control\r\n              type=\"input\"\r\n              placeholder=\"0x000...\"\r\n              value={this.state.address}\r\n              onChange={this.onAddressChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Role</Form.Label>\r\n            <Form.Control as=\"select\" onChange={this.onRoleChange}>\r\n              <option value=\"Consumer\">Consumer</option>\r\n              <option value=\"REC\">Renewable Energy Certificate (REC) Dealer</option>\r\n              <option value=\"CEO\">Offset Dealer</option>\r\n              <option value=\"AE\">Emissions Auditor</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Button variant=\"success\" size=\"lg\" block onClick={this.handleRegister}>\r\n                  Register\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button variant=\"danger\" size=\"lg\" block onClick={this.handleUnregister}>\r\n                  Unregister\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n        </Fragment>\r\n      )}\r\n\r\n      {(!this.props.limitedMode && (this.props.roles[0] === false && (this.props.roles[1] === true || this.props.roles[2] === true || this.props.roles[3] === true))) && (\r\n        <Fragment>\r\n          <h4>Register/unregister consumers</h4>\r\n          <Form.Group>\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control\r\n              type=\"input\"\r\n              placeholder=\"0x000...\"\r\n              value={this.state.address}\r\n              onChange={this.onAddressChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Role</Form.Label>\r\n            <Form.Control as=\"select\" disabled>\r\n              <option value=\"Consumer\">Consumer</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Button variant=\"success\" size=\"lg\" block onClick={this.handleRegister}>\r\n                  Register\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button variant=\"danger\" size=\"lg\" block onClick={this.handleUnregister}>\r\n                  Unregister\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider,\r\n  signedInAddress: app.signedInAddress,\r\n  roles: app.roles,\r\n  limitedMode: app.limitedMode\r\n});\r\n\r\nexport default connect(mapStateToProps)(AccessControlForm);\r\n\r\n// Sub component\r\n\r\nclass RolesList extends PureComponent {\r\n  render() {\r\n    const roleNames = [\"Owner\", \"REC Dealer\", \"Offset Dealer\", \"Emissions Auditor\", \"Consumer\"];\r\n    return (\r\n      <ul>\r\n        {this.props.roles.map((role, id) => (\r\n          <div key={id}>\r\n            {role && (\r\n              <li>{roleNames[id]}&nbsp;&nbsp;</li>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nRolesList.propTypes = {\r\n  roles: PropTypes.array\r\n}","import React, { PureComponent } from 'react';\r\nimport { Container, Nav, TabContainer, TabContent } from 'react-bootstrap';\r\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport './App.css';\r\nimport NavigationBar from './components/NavigationBar';\r\nimport Dashboard from './scenes/Dashboard';\r\nimport GovernanceDashboard from './scenes/GovernanceDashboard';\r\nimport IssueForm from './scenes/IssueForm';\r\nimport TransferForm from './scenes/TransferForm';\r\nimport RetireForm from './scenes/RetireForm';\r\nimport AccessControlForm from './scenes/AccessControlForm';\r\nimport { loadWeb3Modal, unloadWeb3Modal } from './controllers/app/actions';\r\n\r\nclass App extends PureComponent {\r\n  componentDidMount() {\r\n    this.unlisten = this.props.history.listen((location, action) => {});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlisten();\r\n  }\r\n\r\n  render() {\r\n    const isOwnerOrDealer = this.props.roles.length > 0 && (this.props.roles[0] || this.props.roles[1] || this.props.roles[2] || this.props.roles[3]);\r\n    const isOwner = this.props.roles.length > 0 && this.props.roles[0];\r\n    return (\r\n      <div className=\"App\">\r\n        <NavigationBar />\r\n        {/* Tabs to pages */}\r\n        <Nav fill variant=\"tabs\" className=\"mt-2 mb-4 border-bottom-0\">\r\n          {/* On dashboard page, click this link to refresh the balances */}\r\n          {/* Else on other page, click this link to go to dashboard */}\r\n          {this.props.location.pathname === '/dashboard' ? (\r\n            <Nav.Link eventKey=\"dashboard\">Dashboard</Nav.Link>\r\n          ) : (\r\n            <Nav.Item>\r\n              <Nav.Link as={Link} to=\"/dashboard\" eventKey=\"dashboard\">Dashboard</Nav.Link>\r\n            </Nav.Item>\r\n          )}\r\n\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/governance\" eventKey=\"governance\">Governance</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/issue\" eventKey=\"issue\">Issue tokens</Nav.Link>\r\n          </Nav.Item>\r\n\r\n          {((this.props.limitedMode && isOwner) || !this.props.limitedMode) && (\r\n            <Nav.Item>\r\n              <Nav.Link as={Link} to=\"/transfer\" eventKey=\"transfer\">Transfer tokens</Nav.Link>\r\n            </Nav.Item>\r\n          )}\r\n\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/retire\" eventKey=\"retire\">Retire tokens</Nav.Link>\r\n          </Nav.Item>\r\n\r\n          {/* Display \"Manage Roles\" if owner/dealer, \"My Roles\" otherwise */}\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/access-control\" eventKey=\"access-control\">{((!this.props.limitedMode && isOwnerOrDealer) ^ (this.props.limitedMode && isOwner) ? 'Manage roles' : 'My roles')}</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n\r\n        <Container className=\"my-2\">\r\n          <TabContainer defaultActiveKey={this.props.location.pathname || '/dashboard'}>\r\n            <TabContent>\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Redirect to=\"/dashboard\" />\r\n                </Route>\r\n                <Route\r\n                  path=\"/dashboard\"\r\n                  component={Dashboard}\r\n                />\r\n                <Route\r\n                  path=\"/governance\"\r\n                  component={GovernanceDashboard}\r\n                />\r\n                <Route\r\n                  path=\"/issue\"\r\n                  component={IssueForm}\r\n                />\r\n                <Route\r\n                  path=\"/transfer\"\r\n                  component={TransferForm}\r\n                />\r\n                <Route\r\n                  path=\"/retire\"\r\n                  component={RetireForm}\r\n                />\r\n                <Route\r\n                  path=\"/access-control\"\r\n                  component={AccessControlForm}\r\n                />\r\n              </Switch>\r\n            </TabContent>\r\n          </TabContainer>\r\n          <div className=\"my-5\" />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ app }) => ({\r\n  web3Provider: app.web3Provider,\r\n  signedInAddress: app.signedInAddress,\r\n  roles: app.roles,\r\n  limitedMode: app.limitedMode\r\n});\r\n\r\nconst mapDispatchToProps = (dispacth) => ({\r\n  loadWeb3Modal: () => dispacth(loadWeb3Modal()),\r\n  unloadWeb3Modal: () => dispacth(unloadWeb3Modal())\r\n});\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport './index.css';\r\nimport store from './controllers/store';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <BrowserRouter basename={process.env.REACT_APP_PUBLIC_BASE}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}